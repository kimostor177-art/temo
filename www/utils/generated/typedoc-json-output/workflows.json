{
	"id": 59389,
	"name": "workflows",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 60879,
			"name": "IDistributedTransactionStorage",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60880,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60881,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60882,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60883,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 59793,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											},
											{
												"type": "reference",
												"target": 61016,
												"name": "StepFeatures",
												"package": "@medusajs/orchestration"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 60884,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 60885,
															"name": "isCancelling",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
																	"line": 13,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																60885
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
															"line": 12,
															"character": 52
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 60922,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60886,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60887,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60888,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60889,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60922,
										"name": "TransactionCheckpoint",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60890,
									"name": "ttl",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 60891,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 61015,
										"name": "TransactionOptions",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60922,
										"name": "TransactionCheckpoint",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60892,
					"name": "scheduleRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60893,
							"name": "scheduleRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60894,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60895,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60548,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60896,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 60897,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60898,
					"name": "clearRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60899,
							"name": "clearRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60900,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60901,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60548,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60902,
					"name": "scheduleTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60903,
							"name": "scheduleTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60904,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60905,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 60906,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60907,
					"name": "scheduleStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60908,
							"name": "scheduleStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60909,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60910,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60548,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60911,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 60912,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60913,
					"name": "clearTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60914,
							"name": "clearTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60915,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60916,
					"name": "clearStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60917,
							"name": "clearStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60918,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60919,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60548,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60920,
					"name": "clearExpiredExecutions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60921,
							"name": "clearExpiredExecutions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						60880,
						60886,
						60892,
						60898,
						60902,
						60907,
						60913,
						60916,
						60920
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
					"line": 11,
					"character": 17
				}
			]
		},
		{
			"id": 59944,
			"name": "TransactionMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59945,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59946,
							"name": "model_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59947,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59948,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59949,
							"name": "action_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60243,
								"name": "TransactionHandlerType",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 59950,
							"name": "attempt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59951,
							"name": "timestamp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59946,
								59947,
								59948,
								59949,
								59950,
								59951
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 14,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 59969,
			"name": "TransactionContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 59975,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing the initial payload."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 59976,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Invoke handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 59977,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Compensate handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 59970,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59971,
							"name": "TransactionContext",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59972,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 59973,
									"name": "invoke",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 59974,
									"name": "compensate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59969,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59970
					]
				},
				{
					"title": "Properties",
					"children": [
						59975,
						59976,
						59977
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 28,
					"character": 21
				}
			]
		},
		{
			"id": 60969,
			"name": "TransactionStepError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 60975,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60976,
					"name": "handlerType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 60243,
						"name": "TransactionHandlerType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 60977,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60970,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60971,
							"name": "TransactionStepError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60972,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60973,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60243,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60974,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60969,
								"name": "TransactionStepError",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60970
					]
				},
				{
					"title": "Properties",
					"children": [
						60975,
						60976,
						60977
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 34,
					"character": 21
				}
			]
		},
		{
			"id": 60922,
			"name": "TransactionCheckpoint",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 60932,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60933,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 60936,
						"name": "TransactionFlow",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60934,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59969,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60935,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 60969,
							"name": "TransactionStepError",
							"package": "@medusajs/orchestration"
						}
					}
				},
				{
					"id": 60927,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60928,
							"name": "TransactionCheckpoint",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 45,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60929,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60936,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60930,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59969,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60931,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60969,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60922,
								"name": "TransactionCheckpoint",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60923,
					"name": "mergeCheckpoints",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 53,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60924,
							"name": "mergeCheckpoints",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Merge the current checkpoint with incoming data from a concurrent save operation.\nThis handles race conditions when multiple steps complete simultaneously."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 53,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60925,
									"name": "currentTransactionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60922,
										"name": "TransactionCheckpoint",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60926,
									"name": "storedData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The checkpoint data being saved"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 60922,
										"name": "TransactionCheckpoint",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60922,
								"name": "TransactionCheckpoint",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60927
					]
				},
				{
					"title": "Properties",
					"children": [
						60932,
						60933,
						60934,
						60935
					]
				},
				{
					"title": "Methods",
					"children": [
						60923
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 40,
					"character": 21
				}
			]
		},
		{
			"id": 61049,
			"name": "TransactionPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 61055,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59944,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 61056,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 61057,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 58,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59969,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 61050,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61051,
							"name": "TransactionPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 64,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61052,
									"name": "metadata",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The metadata of the transaction."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 59944,
										"name": "TransactionMetadata",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 61053,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The initial payload data to begin a transation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 61054,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object gathering responses of all steps flagged with saveResponse."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 59969,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 61049,
								"name": "TransactionPayload",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						61050
					]
				},
				{
					"title": "Properties",
					"children": [
						61055,
						61056,
						61057
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 55,
					"character": 21
				}
			]
		},
		{
			"id": 60411,
			"name": "DistributedTransaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "DistributedTransaction represents a distributed transaction, which is a transaction that is composed of multiple steps that are executed in a specific order."
					}
				]
			},
			"children": [
				{
					"id": 60431,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 70,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60432,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 71,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60433,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 60870,
						"name": "TransactionStepHandler",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60434,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60435,
					"name": "modelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 74,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60436,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 75,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60437,
					"name": "runId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60438,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 77,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60439,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 78,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60412,
					"name": "keyValueStore",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 79,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60413,
					"name": "setStorage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 80,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60414,
							"name": "setStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 80,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60415,
									"name": "storage",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60879,
										"name": "IDistributedTransactionStorage",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60416,
					"name": "keyPrefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 81,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60424,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 82,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60425,
							"name": "DistributedTransaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 82,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60426,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60936,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60427,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60870,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60428,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 60429,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60969,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								},
								{
									"id": 60430,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59969,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60411,
								"name": "DistributedTransaction",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 60440,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 83,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60441,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 83,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60936,
								"name": "TransactionFlow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60442,
					"name": "getContext",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 84,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60443,
							"name": "getContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59969,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60444,
					"name": "getErrors",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60445,
							"name": "getErrors",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 85,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60446,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60243,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 60969,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 60447,
					"name": "addError",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 86,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60448,
							"name": "addError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 86,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60449,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60450,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60243,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60451,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60452,
					"name": "addResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 87,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60453,
							"name": "addResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 87,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60454,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60455,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60243,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60456,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60457,
					"name": "hasFinished",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 88,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60458,
							"name": "hasFinished",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 88,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60459,
					"name": "getState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 89,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60460,
							"name": "getState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 89,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60978,
								"name": "TransactionState",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 60461,
					"name": "isPartiallyCompleted",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 90,
							"character": 8
						}
					],
					"getSignature": {
						"id": 60462,
						"name": "isPartiallyCompleted",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
								"line": 90,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 60463,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 91,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60464,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 91,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60465,
					"name": "canRevert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 92,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60466,
							"name": "canRevert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 92,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60467,
					"name": "hasTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 93,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60468,
							"name": "hasTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 93,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60469,
					"name": "getTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 94,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60470,
							"name": "getTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 60471,
					"name": "saveCheckpoint",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 95,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60472,
							"name": "saveCheckpoint",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 95,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60473,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60474,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60475,
													"name": "ttl",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 96,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 60476,
													"name": "parallelSteps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 97,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 60477,
													"name": "stepId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 98,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60478,
													"name": "_v",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 99,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60475,
														60476,
														60477,
														60478
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
													"line": 95,
													"character": 57
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 60922,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60417,
					"name": "loadTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 101,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60418,
							"name": "loadTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 101,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60419,
									"name": "modelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60420,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60421,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60422,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60423,
													"name": "isCancelling",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 102,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60423
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
													"line": 101,
													"character": 77
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 60922,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60479,
					"name": "scheduleRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 104,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60480,
							"name": "scheduleRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 104,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60481,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60548,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60482,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60483,
					"name": "clearRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 105,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60484,
							"name": "clearRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 105,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60485,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60548,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60486,
					"name": "scheduleTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 106,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60487,
							"name": "scheduleTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 106,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60488,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60489,
					"name": "clearTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 107,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60490,
							"name": "clearTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 107,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60491,
					"name": "scheduleStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 108,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60492,
							"name": "scheduleStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 108,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60493,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60548,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60494,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60495,
					"name": "clearStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 109,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60496,
							"name": "clearStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 109,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60497,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60548,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60498,
					"name": "setTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 110,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60499,
							"name": "setTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 110,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60500,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60501,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60502,
					"name": "getTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 111,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60503,
							"name": "getTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 111,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60504,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 60505,
					"name": "hasTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 112,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60506,
							"name": "hasTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 112,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60507,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60424
					]
				},
				{
					"title": "Properties",
					"children": [
						60431,
						60432,
						60433,
						60434,
						60435,
						60436,
						60437,
						60438,
						60439,
						60412,
						60416
					]
				},
				{
					"title": "Accessors",
					"children": [
						60461
					]
				},
				{
					"title": "Methods",
					"children": [
						60413,
						60440,
						60442,
						60444,
						60447,
						60452,
						60457,
						60459,
						60463,
						60465,
						60467,
						60469,
						60471,
						60417,
						60479,
						60483,
						60486,
						60489,
						60491,
						60495,
						60498,
						60502,
						60505
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 69,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 60212,
			"name": "BaseStepErrror",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 60218,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60213,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60214,
							"name": "BaseStepErrror",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60215,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 60216,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60217,
									"name": "stepResponse",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60212,
								"name": "BaseStepErrror",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				},
				{
					"id": 60219,
					"name": "getStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60220,
							"name": "getStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60213
					]
				},
				{
					"title": "Properties",
					"children": [
						60218
					]
				},
				{
					"title": "Methods",
					"children": [
						60219
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
					"line": 1,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 59801,
					"name": "SkipStepResponse"
				}
			]
		},
		{
			"id": 59801,
			"name": "SkipStepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 59809,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 60218,
						"name": "BaseStepErrror.#private"
					}
				},
				{
					"id": 59810,
					"name": "getStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59811,
							"name": "getStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 60220,
								"name": "BaseStepErrror.getStepResponse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 60219,
						"name": "BaseStepErrror.getStepResponse"
					}
				},
				{
					"id": 59802,
					"name": "isSkipStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 11,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 59803,
							"name": "isSkipStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 11,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 59804,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 59801,
									"name": "SkipStepResponse",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 59805,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59806,
							"name": "SkipStepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59807,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59808,
									"name": "stepResponse",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59801,
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": 60214,
								"name": "BaseStepErrror.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 60213,
						"name": "BaseStepErrror.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59805
					]
				},
				{
					"title": "Properties",
					"children": [
						59809
					]
				},
				{
					"title": "Methods",
					"children": [
						59810,
						59802
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
					"line": 10,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 60212,
					"name": "BaseStepErrror",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 60221,
			"name": "InternalStep",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure and behavior of a single step within a transaction workflow."
					}
				]
			},
			"children": [
				{
					"id": 60222,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the next step(s) to execute after this step. Can be a single step or an array of steps."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 60221,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 60221,
									"name": "InternalStep",
									"package": "@medusajs/orchestration"
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.next"
					}
				},
				{
					"id": 60223,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60224,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 60221,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						]
					}
				},
				{
					"id": 60225,
					"name": "uuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier for the transaction step.\nThis is set automatically when declaring a workflow with \"createWorkflow\""
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.uuid"
					}
				},
				{
					"id": 60226,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the action to be performed in this step.\n\"name\" is an alias for action when creating a workflow with \"createWorkflow\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.action"
					}
				},
				{
					"id": 60227,
					"name": "continueOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the workflow should continue even if there is a permanent failure in this step.\nIn case it is set to true, the the current step will be marked as TransactionStepState.PERMANENT_FAILURE and the next steps will be executed."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.continueOnPermanentFailure"
					}
				},
				{
					"id": 60228,
					"name": "skipOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the workflow should skip all subsequent steps in case of a permanent failure in this step.\nIn case it is set to true, the next steps of the workflow will not be executed and their status will be marked as TransactionStepState.SKIPPED_FAILURE.\nIn case it is a string, the next steps until the step name provided will be skipped and the workflow will be resumed from the step provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.skipOnPermanentFailure"
					}
				},
				{
					"id": 60229,
					"name": "noCompensation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, no compensation action will be triggered for this step in case of a failure."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noCompensation"
					}
				},
				{
					"id": 60230,
					"name": "maxRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of times this step should be retried in case of temporary failures.\nThe default is 0 (no retries)."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.maxRetries"
					}
				},
				{
					"id": 60231,
					"name": "autoRetry",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the step will be retried automatically in case of a temporary failure.\nThe default is true."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.autoRetry"
					}
				},
				{
					"id": 60232,
					"name": "retryInterval",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interval (in seconds) between retry attempts after a temporary failure.\nThe default is to retry immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryInterval"
					}
				},
				{
					"id": 60233,
					"name": "retryIntervalAwaiting",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interval (in seconds) to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryIntervalAwaiting"
					}
				},
				{
					"id": 60234,
					"name": "maxAwaitingRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of times to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.maxAwaitingRetries"
					}
				},
				{
					"id": 60235,
					"name": "timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum amount of time (in seconds) to wait for this step to complete.\nThis is NOT an execution timeout, the step will always be executed and wait for its response.\nIf the response is not received within the timeout set, it will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted as soon as it receives the response."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 62,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.timeout"
					}
				},
				{
					"id": 60236,
					"name": "async",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the step is executed asynchronously. This means that the workflow will not wait for the response of this step.\nAsync steps require to have their responses set using \"setStepSuccess\" or \"setStepFailure\", unless it is combined with \"backgroundExecution: true\".\nIf combined with a timeout, and any response is not set within that interval, the step will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.async"
					}
				},
				{
					"id": 60237,
					"name": "nested",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "It flags where the step contains a sub transaction inside itself."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.nested"
					}
				},
				{
					"id": 60238,
					"name": "backgroundExecution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "It applies to \"async\" steps only, allowing them to run in the background and automatically complete without external intervention.\nIt is ideal for time-consuming tasks that will be complete after the execution, contrasting with standard \"async\" operations that require a response to be set in a later stage."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 77,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.backgroundExecution"
					}
				},
				{
					"id": 60239,
					"name": "compensateAsync",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the compensation function for this step is executed asynchronously. Which means, the response has to be set using \"setStepSuccess\" or \"setStepFailure\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 81,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.compensateAsync"
					}
				},
				{
					"id": 60240,
					"name": "noWait",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the workflow will not wait for their sibling steps to complete before moving to the next step."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noWait"
					}
				},
				{
					"id": 60241,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the response of this step will be stored.\nDefault is true."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 90,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.saveResponse"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60222,
						60223,
						60224,
						60225,
						60226,
						60227,
						60228,
						60229,
						60230,
						60231,
						60232,
						60233,
						60234,
						60235,
						60236,
						60237,
						60238,
						60239,
						60240,
						60241
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 2,
					"character": 10
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 59773,
					"name": "TransactionStepsDefinition",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 59830,
			"name": "OrchestratorBuilder",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 59834,
					"name": "steps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 8,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 60221,
						"name": "InternalStep",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59835,
					"name": "hasChanges_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 9,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59836,
					"name": "hasChanges",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 10,
							"character": 8
						}
					],
					"getSignature": {
						"id": 59837,
						"name": "hasChanges",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
								"line": 10,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 59831,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59832,
							"name": "OrchestratorBuilder",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59833,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59773,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59838,
					"name": "load",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59839,
							"name": "load",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59840,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59773,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59841,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59842,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59843,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59844,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59773,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59845,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59846,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59847,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59848,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59849,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59773,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59850,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59851,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59852,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59853,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59854,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59773,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59855,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59856,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59857,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59858,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59859,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59773,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59860,
					"name": "appendTo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 17,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59861,
							"name": "appendTo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 17,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59862,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 60221,
												"name": "InternalStep",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 59863,
									"name": "newStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60221,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59864,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59865,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59866,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59867,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59868,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59773,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59869,
					"name": "move",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 19,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59870,
							"name": "move",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 19,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59871,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59872,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59873,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59874,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59875,
													"name": "runInParallel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 20,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 59876,
													"name": "mergeNext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 21,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59875,
														59876
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
													"line": 19,
													"character": 95
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59877,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59878,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59879,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59880,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59881,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59882,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59883,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59884,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59885,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59886,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59887,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59888,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59889,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59890,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59891,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59892,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60221,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59893,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59894,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59895,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59896,
					"name": "findStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 28,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59897,
							"name": "findStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 28,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59898,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59899,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60221,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 60221,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 59900,
					"name": "findOrThrowStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 29,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59901,
							"name": "findOrThrowStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 29,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59902,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59903,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60221,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60221,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59904,
					"name": "findParentStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 30,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59905,
							"name": "findParentStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 30,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59906,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59907,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60221,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 60221,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 59908,
					"name": "findLastStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 31,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59909,
							"name": "findLastStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 31,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59910,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60221,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60221,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59911,
					"name": "updateDepths",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 32,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59912,
							"name": "updateDepths",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 32,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59913,
									"name": "startingStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60221,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59914,
									"name": "parent",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 59915,
									"name": "incr",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 59916,
									"name": "beginFrom",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 59917,
					"name": "build",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59918,
							"name": "build",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59773,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59831
					]
				},
				{
					"title": "Properties",
					"children": [
						59834,
						59835
					]
				},
				{
					"title": "Accessors",
					"children": [
						59836
					]
				},
				{
					"title": "Methods",
					"children": [
						59838,
						59841,
						59845,
						59850,
						59855,
						59860,
						59864,
						59869,
						59877,
						59881,
						59885,
						59889,
						59893,
						59896,
						59900,
						59904,
						59908,
						59911,
						59917
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 7,
					"character": 21
				}
			]
		},
		{
			"id": 60614,
			"name": "TransactionOrchestrator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "TransactionOrchestrator is responsible for managing and executing distributed transactions.\nIt is based on a single transaction definition, which is used to execute all the transaction steps"
					}
				]
			},
			"children": [
				{
					"id": 60698,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60615,
					"name": "ROOT_STEP",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 12,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60616,
					"name": "DEFAULT_TTL",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 13,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60699,
					"name": "invokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60700,
					"name": "compensateSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60701,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60702,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 17,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60617,
					"name": "DEFAULT_RETRIES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 18,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60618,
					"name": "workflowOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 19,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60619,
					"name": "getWorkflowOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 20,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60620,
							"name": "getWorkflowOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 20,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60621,
									"name": "modelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 61015,
								"name": "TransactionOptions",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60622,
					"name": "traceTransaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trace workflow transaction for instrumentation"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60623,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 24,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 60624,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 24,
											"character": 30
										}
									],
									"parameters": [
										{
											"id": 60625,
											"name": "transactionResume",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 60626,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 24,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 60627,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 24,
																	"character": 50
																}
															],
															"parameters": [
																{
																	"id": 60628,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 60629,
											"name": "metadata",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 60630,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 60631,
															"name": "model_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 25,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 60632,
															"name": "transaction_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 26,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 60633,
															"name": "flow_metadata",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 27,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 60634,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 60635,
																					"name": "eventGroupId",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 235,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 60636,
																					"name": "parentIdempotencyKey",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 236,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 60637,
																					"name": "cancelingFromParentStep",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 237,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 60638,
																					"name": "sourcePath",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 238,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 60639,
																					"name": "preventReleaseEvents",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 239,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 60640,
																					"name": "parentStepIdempotencyKey",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 240,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						60635,
																						60636,
																						60637,
																						60638,
																						60639,
																						60640
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																					"line": 234,
																					"character": 15
																				}
																			],
																			"indexSignatures": [
																				{
																					"id": 60641,
																					"name": "__index",
																					"variant": "signature",
																					"kind": 8192,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 241,
																							"character": 8
																						}
																					],
																					"parameters": [
																						{
																							"id": 60642,
																							"name": "key",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																60631,
																60632,
																60633
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 24,
															"character": 95
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 60643,
					"name": "traceStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trace workflow steps for instrumentation"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 32,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60644,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 32,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 60645,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 32,
											"character": 23
										}
									],
									"parameters": [
										{
											"id": 60646,
											"name": "handler",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 60647,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 32,
															"character": 33
														}
													],
													"signatures": [
														{
															"id": 60648,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 32,
																	"character": 33
																}
															],
															"parameters": [
																{
																	"id": 60649,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 60650,
											"name": "metadata",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 60651,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 60652,
															"name": "action",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 33,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 60653,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 34,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "invoke"
																	},
																	{
																		"type": "literal",
																		"value": "compensate"
																	}
																]
															}
														},
														{
															"id": 60654,
															"name": "step_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 35,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 60655,
															"name": "step_uuid",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 36,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 60656,
															"name": "attempts",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 37,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 60657,
															"name": "failures",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 38,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 60658,
															"name": "async",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 39,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 60659,
															"name": "idempotency_key",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 40,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																60652,
																60653,
																60654,
																60655,
																60656,
																60657,
																60658,
																60659
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 32,
															"character": 77
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 60690,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60691,
							"name": "TransactionOrchestrator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60692,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60693,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60694,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60695,
													"name": "definition",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 59773,
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60696,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 45,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 59793,
														"name": "TransactionModelOptions",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60697,
													"name": "isClone",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 46,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60694,
														60695,
														60696,
														60697
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 42,
													"character": 55
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60614,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 60660,
					"name": "isExpectedError",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 48,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60661,
							"name": "isExpectedError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 48,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60662,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60663,
					"name": "clone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 49,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60664,
							"name": "clone",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 49,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60665,
									"name": "orchestrator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60614,
										"name": "TransactionOrchestrator",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60614,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60666,
					"name": "SEPARATOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 50,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60667,
					"name": "getKeyName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 51,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60668,
							"name": "getKeyName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 51,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60669,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 60670,
					"name": "getPreviousStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 52,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60703,
					"name": "getOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60704,
							"name": "getOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59793,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60705,
					"name": "getInvokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 54,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60706,
					"name": "getCompensationSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 55,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60671,
					"name": "countSiblings",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 56,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60707,
					"name": "canMoveForward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60708,
					"name": "canMoveBackward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 58,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60709,
					"name": "canContinue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 59,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60710,
					"name": "hasExpired",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 60,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60711,
					"name": "checkTransactionTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 61,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60712,
					"name": "checkStepTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60713,
					"name": "checkAllSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 63,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60714,
					"name": "computeCurrentTransactionState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 64,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60715,
					"name": "flagStepsToRevert",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 65,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60672,
					"name": "setStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 66,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60673,
					"name": "retryStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 67,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60674,
					"name": "skipStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 68,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60675,
					"name": "setStepTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 69,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60676,
					"name": "setStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 70,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60716,
					"name": "executeNext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 71,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60717,
					"name": "finalizeTransaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Finalize the transaction when all steps are complete"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 75,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60718,
					"name": "prepareStepForExecution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prepare a step for execution by setting state and incrementing attempts"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 79,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60719,
					"name": "createStepPayload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create the payload for a step execution"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 83,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60720,
					"name": "prepareHandlerArgs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prepare handler arguments for step execution"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 87,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60721,
					"name": "createStepExecutionPromise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create the step execution promise with optional tracing"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 91,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60722,
					"name": "executeSyncStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute a synchronous step and handle its result"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 95,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60723,
					"name": "executeAsyncStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute an asynchronous step and handle its result"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 99,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60724,
					"name": "handleStepExpiration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if step or transaction has expired and handle timeouts"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 103,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60725,
					"name": "handleStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle successful step completion"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 107,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60726,
					"name": "handleStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle step failure"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 111,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60727,
					"name": "resume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 116,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60728,
							"name": "resume",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Start a new transaction or resume a transaction that has been previously started"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 116,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60729,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to resume"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60730,
					"name": "cancelTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 121,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60731,
							"name": "cancelTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cancel and revert a transaction compensating all its executed steps. It can be an ongoing transaction or a completed one"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 121,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60732,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to be reverted"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60733,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60734,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60735,
													"name": "preventExecuteNext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 122,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60735
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 121,
													"character": 73
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60736,
					"name": "parseFlowOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 124,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60737,
					"name": "createTransactionFlow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 125,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60677,
					"name": "loadTransactionById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 126,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60678,
					"name": "buildSteps",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 127,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60679,
							"name": "buildSteps",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 127,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60680,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59773,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60681,
									"name": "existingSteps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60682,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 127,
													"character": 72
												}
											],
											"indexSignatures": [
												{
													"id": 60683,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 128,
															"character": 8
														}
													],
													"parameters": [
														{
															"id": 60684,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 60548,
														"name": "TransactionStep",
														"package": "@medusajs/orchestration"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reflection",
										"declaration": {
											"id": 60685,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 129,
													"character": 9
												}
											],
											"indexSignatures": [
												{
													"id": 60686,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 130,
															"character": 8
														}
													],
													"parameters": [
														{
															"id": 60687,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 60548,
														"name": "TransactionStep",
														"package": "@medusajs/orchestration"
													}
												}
											]
										}
									},
									{
										"type": "reference",
										"target": 61016,
										"name": "StepFeatures",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 60738,
					"name": "beginTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 138,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60739,
							"name": "beginTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 138,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60740,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60741,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60742,
													"name": "transactionId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 139,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60743,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 140,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60870,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60744,
													"name": "payload",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 141,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 60745,
													"name": "flowMetadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 142,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60746,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60747,
																	"name": "eventGroupId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 235,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 60748,
																	"name": "parentIdempotencyKey",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 236,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 60749,
																	"name": "cancelingFromParentStep",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 237,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 60750,
																	"name": "sourcePath",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 238,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 60751,
																	"name": "preventReleaseEvents",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 239,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 60752,
																	"name": "parentStepIdempotencyKey",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 240,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60747,
																		60748,
																		60749,
																		60750,
																		60751,
																		60752
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 234,
																	"character": 15
																}
															],
															"indexSignatures": [
																{
																	"id": 60753,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 241,
																			"character": 8
																		}
																	],
																	"parameters": [
																		{
																			"id": 60754,
																			"name": "key",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 60755,
													"name": "context",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 143,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 59952,
														"name": "Context",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 60756,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 144,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60757,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 144,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 60758,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 144,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 60759,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 60411,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60742,
														60743,
														60744,
														60745,
														60755,
														60756
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 138,
													"character": 90
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60760,
					"name": "retrieveExistingTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 150,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60761,
							"name": "retrieveExistingTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an existing transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 150,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60762,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "unique identifier of the transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60763,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "function to handle action of the transaction"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 60870,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60764,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60765,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60766,
													"name": "isCancelling",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 151,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60766
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 150,
													"character": 98
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60688,
					"name": "getStepByAction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 153,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60689,
					"name": "getTransactionAndStepFromIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 154,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60767,
					"name": "skipStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 160,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60768,
							"name": "skipStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Skip the execution of a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 160,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60769,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60770,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60771,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 161,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60772,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 162,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60870,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60773,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 163,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60411,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60771,
														60772,
														60773
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 160,
													"character": 64
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60774,
					"name": "retryStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 171,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60775,
							"name": "retryStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Manually force a step to retry even if it is still in awaiting status"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 171,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60776,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60777,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60778,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 172,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60779,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 173,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60870,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60780,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 174,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60411,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60781,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 175,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60782,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 175,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 60783,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 175,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 60784,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 60411,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60778,
														60779,
														60780,
														60781
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 171,
													"character": 73
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60785,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 183,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60786,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step success for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 183,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60787,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60788,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60789,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 184,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60790,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 185,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60870,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60791,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 186,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60411,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60792,
													"name": "response",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 187,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 60793,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 188,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60794,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 188,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 60795,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 188,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 60796,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 60411,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60789,
														60790,
														60791,
														60792,
														60793
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 183,
													"character": 93
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60797,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 198,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60798,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step failure for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 198,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60799,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60800,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60801,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 199,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60802,
													"name": "error",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 200,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 60803,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 201,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60870,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60804,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 202,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60411,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60805,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 203,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60806,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 203,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 60807,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 203,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 60808,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 60411,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"id": 60809,
													"name": "forcePermanentFailure",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 204,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60801,
														60802,
														60803,
														60804,
														60805,
														60809
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 198,
													"character": 113
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60690
					]
				},
				{
					"title": "Properties",
					"children": [
						60698,
						60615,
						60616,
						60699,
						60700,
						60701,
						60702,
						60617,
						60618,
						60622,
						60643,
						60666,
						60670,
						60705,
						60706,
						60671,
						60707,
						60708,
						60709,
						60710,
						60711,
						60712,
						60713,
						60714,
						60715,
						60672,
						60673,
						60674,
						60675,
						60676,
						60716,
						60717,
						60718,
						60719,
						60720,
						60721,
						60722,
						60723,
						60724,
						60725,
						60726,
						60736,
						60737,
						60677,
						60688,
						60689
					]
				},
				{
					"title": "Methods",
					"children": [
						60619,
						60660,
						60663,
						60667,
						60703,
						60727,
						60730,
						60678,
						60738,
						60760,
						60767,
						60774,
						60785,
						60797
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
					"line": 10,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 60870,
			"name": "TransactionStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
					"line": 5,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60871,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 5,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 60872,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 60873,
									"name": "actionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60874,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60243,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60875,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 61049,
										"name": "TransactionPayload",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60876,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransactionType",
										"package": "@medusajs/orchestration",
										"qualifiedName": "DistributedTransaction"
									}
								},
								{
									"id": 60877,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60548,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60878,
									"name": "orchestrator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60614,
										"name": "TransactionOrchestrator",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 60548,
			"name": "TransactionStep",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "TransactionStep"
					}
				],
				"blockTags": [
					{
						"tag": "@classdesc",
						"content": [
							{
								"kind": "text",
								"text": "A class representing a single step in a transaction flow"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 60549,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 60550,
							"name": "TransactionStep",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 60548,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60551,
					"name": "stepFailed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "id - The id of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "depth - The depth of the step in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "definition - The definition of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "invoke - The current state and status of the invoke action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "compensate - The current state and status of the compensate action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "attempts - The number of attempts made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "failures - The number of failures encountered while executing the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "lastAttempt - The timestamp of the last attempt made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "hasScheduledRetry - A flag indicating if a retry has been scheduled"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "retryRescheduledAt - The timestamp of the last retry scheduled"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "next - The ids of the next steps in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "saveResponse - A flag indicating if the response of a step should be shared in the transaction context and available to subsequent steps - default is true"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 25,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60552,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60553,
					"name": "uuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60554,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60555,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59773,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60556,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60557,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60558,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 31,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 60998,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60559,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 32,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 61009,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60558,
										60559
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 30,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 60560,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60561,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60562,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 35,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 60998,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60563,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 61009,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60562,
										60563
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 34,
									"character": 16
								}
							]
						}
					}
				},
				{
					"id": 60564,
					"name": "attempts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60565,
					"name": "failures",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60566,
					"name": "temporaryFailedAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 60567,
					"name": "lastAttempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 60568,
					"name": "retryRescheduledAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 60569,
					"name": "hasScheduledRetry",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 60570,
					"name": "timedOutAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 60571,
					"name": "startedAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60572,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 60573,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 60574,
					"name": "_v",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60575,
					"name": "getStates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60576,
							"name": "getStates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60577,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60578,
											"name": "state",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
													"line": 50,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 60998,
												"name": "TransactionStepState",
												"package": "@medusajs/utils"
											}
										},
										{
											"id": 60579,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
													"line": 51,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 61009,
												"name": "TransactionStepStatus",
												"package": "@medusajs/utils"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60578,
												60579
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 49,
											"character": 17
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 60580,
					"name": "beginCompensation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60581,
							"name": "beginCompensation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60582,
					"name": "isCompensating",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 54,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60583,
							"name": "isCompensating",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60584,
					"name": "isInvoking",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60585,
							"name": "isInvoking",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60586,
					"name": "changeState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60587,
							"name": "changeState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 56,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60588,
									"name": "toState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60998,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60589,
					"name": "changeStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60590,
							"name": "changeStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 57,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60591,
									"name": "toStatus",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 61009,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60592,
					"name": "hasRetryScheduled",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 58,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60593,
							"name": "hasRetryScheduled",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60594,
					"name": "hasRetryInterval",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 59,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60595,
							"name": "hasRetryInterval",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60596,
					"name": "hasTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 60,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60597,
							"name": "hasTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60598,
					"name": "getTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60599,
							"name": "getTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 61,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 60600,
					"name": "canRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 62,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60601,
							"name": "canRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60602,
					"name": "hasAwaitingRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60603,
							"name": "hasAwaitingRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60604,
					"name": "canRetryAwaiting",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60605,
							"name": "canRetryAwaiting",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 64,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60606,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60607,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 65,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60608,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60978,
										"name": "TransactionState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60609,
					"name": "canCompensate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 66,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60610,
							"name": "canCompensate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 66,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60611,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60978,
										"name": "TransactionState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60612,
					"name": "canCancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 67,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60613,
							"name": "canCancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60549
					]
				},
				{
					"title": "Properties",
					"children": [
						60551,
						60552,
						60553,
						60554,
						60555,
						60556,
						60560,
						60564,
						60565,
						60566,
						60567,
						60568,
						60569,
						60570,
						60571,
						60572,
						60573,
						60574
					]
				},
				{
					"title": "Methods",
					"children": [
						60575,
						60580,
						60582,
						60584,
						60586,
						60589,
						60592,
						60594,
						60596,
						60598,
						60600,
						60602,
						60604,
						60606,
						60609,
						60612
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
					"line": 10,
					"character": 21
				}
			]
		},
		{
			"id": 59773,
			"name": "TransactionStepsDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure and behavior of a single step within a transaction workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59774,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59775,
							"name": "uuid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the transaction step.\nThis is set automatically when declaring a workflow with \"createWorkflow\""
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59776,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the action to be performed in this step.\n\"name\" is an alias for action when creating a workflow with \"createWorkflow\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59777,
							"name": "continueOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the workflow should continue even if there is a permanent failure in this step.\nIn case it is set to true, the the current step will be marked as TransactionStepState.PERMANENT_FAILURE and the next steps will be executed."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59778,
							"name": "skipOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the workflow should skip all subsequent steps in case of a permanent failure in this step.\nIn case it is set to true, the next steps of the workflow will not be executed and their status will be marked as TransactionStepState.SKIPPED_FAILURE.\nIn case it is a string, the next steps until the step name provided will be skipped and the workflow will be resumed from the step provided."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 59779,
							"name": "noCompensation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, no compensation action will be triggered for this step in case of a failure."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59780,
							"name": "maxRetries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of times this step should be retried in case of temporary failures.\nThe default is 0 (no retries)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59781,
							"name": "autoRetry",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the step will be retried automatically in case of a temporary failure.\nThe default is true."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 43,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59782,
							"name": "retryInterval",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The interval (in seconds) between retry attempts after a temporary failure.\nThe default is to retry immediately."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59783,
							"name": "retryIntervalAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The interval (in seconds) to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59784,
							"name": "maxAwaitingRetries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of times to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59785,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum amount of time (in seconds) to wait for this step to complete.\nThis is NOT an execution timeout, the step will always be executed and wait for its response.\nIf the response is not received within the timeout set, it will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted as soon as it receives the response."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59786,
							"name": "async",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the step is executed asynchronously. This means that the workflow will not wait for the response of this step.\nAsync steps require to have their responses set using \"setStepSuccess\" or \"setStepFailure\", unless it is combined with \"backgroundExecution: true\".\nIf combined with a timeout, and any response is not set within that interval, the step will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted immediately."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59787,
							"name": "nested",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It flags where the step contains a sub transaction inside itself."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59788,
							"name": "backgroundExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It applies to \"async\" steps only, allowing them to run in the background and automatically complete without external intervention.\nIt is ideal for time-consuming tasks that will be complete after the execution, contrasting with standard \"async\" operations that require a response to be set in a later stage."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 77,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59789,
							"name": "compensateAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the compensation function for this step is executed asynchronously. Which means, the response has to be set using \"setStepSuccess\" or \"setStepFailure\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 81,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59790,
							"name": "noWait",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the workflow will not wait for their sibling steps to complete before moving to the next step."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 85,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59791,
							"name": "saveResponse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the response of this step will be stored.\nDefault is true."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 90,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59792,
							"name": "next",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the next step(s) to execute after this step. Can be a single step or an array of steps."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 59773,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 59773,
											"name": "TransactionStepsDefinition",
											"package": "@medusajs/orchestration"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59775,
								59776,
								59777,
								59778,
								59779,
								59780,
								59781,
								59782,
								59783,
								59784,
								59785,
								59786,
								59787,
								59788,
								59789,
								59790,
								59791,
								59792
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 8,
							"character": 41
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 60221,
					"name": "InternalStep"
				}
			]
		},
		{
			"id": 59793,
			"name": "TransactionModelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the options for a transaction model, which are applicable to the entire workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 99,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59794,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59795,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The global timeout for the entire transaction workflow (in seconds)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 103,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59796,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the state of the transaction will be persisted.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/store-executions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 109,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59797,
							"name": "retentionTime",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of seconds that the workflow execution should be stored in the database.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/store-executions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59798,
							"name": "storeExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the execution details of each step will be stored."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "no longer needed."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 120,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59799,
							"name": "idempotent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the workflow will use the transaction ID as the key to ensure only-once execution"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 124,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59800,
							"name": "schedule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the workflow as a scheduled workflow that executes based on the cron configuration passed.\nThe value can either by a cron expression string, or an object that also allows to define the concurrency behavior."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 129,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 60204,
										"name": "SchedulerOptions",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59795,
								59796,
								59797,
								59798,
								59799,
								59800
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 99,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 60204,
			"name": "SchedulerOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 131,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 60205,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60206,
									"name": "concurrency",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Setting whether to allow concurrent executions (eg. if the previous execution is still running, should the new one be allowed to run or not)\nBy default concurrent executions are not allowed."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 136,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "allow"
											},
											{
												"type": "literal",
												"value": "forbid"
											}
										]
									}
								},
								{
									"id": 60207,
									"name": "numberOfExecutions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optionally limit the number of executions for the scheduled workflow. If not set, the workflow will run indefinitely."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 140,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60206,
										60207
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 131,
									"character": 31
								}
							]
						}
					},
					{
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 60208,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60209,
											"name": "cron",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The cron expression to schedule the workflow execution."
													}
												]
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 145,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60209
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 141,
											"character": 5
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 60210,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60211,
											"name": "interval",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The interval (in ms) to schedule the workflow execution."
													}
												]
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 150,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60211
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 146,
											"character": 4
										}
									]
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 60328,
			"name": "DistributedTransactionEvents",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 172,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60329,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60330,
							"name": "onBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 173,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60331,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 173,
											"character": 14
										}
									],
									"signatures": [
										{
											"id": 60332,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60333,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60334,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60335,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 174,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60335
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 173,
																	"character": 21
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60336,
							"name": "onResume",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 176,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60337,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 176,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 60338,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60339,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60340,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60341,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 177,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60341
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 176,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60342,
							"name": "onFinish",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 179,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60343,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 179,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 60344,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60345,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60346,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60347,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 180,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																},
																{
																	"id": 60348,
																	"name": "result",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 181,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																},
																{
																	"id": 60349,
																	"name": "errors",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 182,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "unknown"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60347,
																		60348,
																		60349
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 179,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60350,
							"name": "onTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 184,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60351,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 184,
											"character": 16
										}
									],
									"signatures": [
										{
											"id": 60352,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60353,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60354,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60355,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 185,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60355
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 184,
																	"character": 23
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60356,
							"name": "onStepBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 187,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60357,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 187,
											"character": 18
										}
									],
									"signatures": [
										{
											"id": 60358,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60359,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60360,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60361,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60548,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60362,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 189,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60361,
																		60362
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 187,
																	"character": 25
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60363,
							"name": "onStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 191,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60364,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 191,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 60365,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60366,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60367,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60368,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 192,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60548,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60369,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 193,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60368,
																		60369
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 191,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60370,
							"name": "onStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 195,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60371,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 195,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 60372,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60373,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60374,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60375,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 196,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60548,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60376,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 197,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60375,
																		60376
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 195,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60377,
							"name": "onStepAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 199,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60378,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 199,
											"character": 21
										}
									],
									"signatures": [
										{
											"id": 60379,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60380,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60381,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60382,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 200,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60548,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60383,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 201,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60382,
																		60383
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 199,
																	"character": 28
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60384,
							"name": "onCompensateBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 203,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60385,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 203,
											"character": 24
										}
									],
									"signatures": [
										{
											"id": 60386,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60387,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60388,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60389,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 204,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60389
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 203,
																	"character": 31
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60390,
							"name": "onCompensateStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 206,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60391,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 206,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 60392,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60393,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60394,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60395,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 207,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60548,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60396,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 208,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60395,
																		60396
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 206,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60397,
							"name": "onCompensateStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 210,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60398,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 210,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 60399,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60400,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60401,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60402,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 211,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60548,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60403,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 212,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60402,
																		60403
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 210,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60404,
							"name": "onStepSkipped",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 214,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60405,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 214,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 60406,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60407,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60408,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60409,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 215,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60548,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60410,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 216,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60411,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60409,
																		60410
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 214,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60330,
								60336,
								60342,
								60350,
								60356,
								60363,
								60370,
								60377,
								60384,
								60390,
								60397,
								60404
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 172,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 61016,
			"name": "StepFeatures",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 219,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 61017,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 61018,
							"name": "hasAsyncSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 220,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 61019,
							"name": "hasStepTimeouts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 221,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 61020,
							"name": "hasRetriesTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 222,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 61021,
							"name": "parallelSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 223,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 61022,
							"name": "stepId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 224,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 61023,
							"name": "_v",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 225,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								61018,
								61019,
								61020,
								61021,
								61022,
								61023
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 219,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 61015,
			"name": "TransactionOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 227,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 59793,
						"name": "TransactionModelOptions",
						"package": "@medusajs/orchestration"
					},
					{
						"type": "reference",
						"target": 61016,
						"name": "StepFeatures",
						"package": "@medusajs/orchestration"
					}
				]
			}
		},
		{
			"id": 60936,
			"name": "TransactionFlow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 228,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60937,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60938,
							"name": "modelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 229,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60939,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 230,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59793,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60940,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 231,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59773,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60941,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 232,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60942,
							"name": "runId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 233,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60943,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 234,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60944,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60945,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 235,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60946,
											"name": "parentIdempotencyKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 236,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60947,
											"name": "cancelingFromParentStep",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 237,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 60948,
											"name": "sourcePath",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 238,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60949,
											"name": "preventReleaseEvents",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 239,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 60950,
											"name": "parentStepIdempotencyKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 240,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60945,
												60946,
												60947,
												60948,
												60949,
												60950
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 234,
											"character": 15
										}
									],
									"indexSignatures": [
										{
											"id": 60951,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 241,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 60952,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 60953,
							"name": "hasAsyncSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 243,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60954,
							"name": "hasFailedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 244,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60955,
							"name": "hasSkippedOnFailureSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 245,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60956,
							"name": "hasWaitingSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 246,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60957,
							"name": "hasSkippedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 247,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60958,
							"name": "hasRevertedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 248,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60959,
							"name": "timedOutAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 249,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 60960,
							"name": "startedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 250,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 60961,
							"name": "cancelledAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 251,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 60962,
							"name": "temporaryFailedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 252,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 60963,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 253,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60978,
								"name": "TransactionState",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 60964,
							"name": "steps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 254,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60965,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 254,
											"character": 11
										}
									],
									"indexSignatures": [
										{
											"id": 60966,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 255,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 60967,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 60548,
												"name": "TransactionStep",
												"package": "@medusajs/orchestration"
											}
										}
									]
								}
							}
						},
						{
							"id": 60968,
							"name": "_v",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 257,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60938,
								60939,
								60940,
								60941,
								60942,
								60943,
								60953,
								60954,
								60955,
								60956,
								60957,
								60958,
								60959,
								60960,
								60961,
								60962,
								60963,
								60964,
								60968
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 228,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 60324,
			"name": "StepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
					"line": 5,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60325,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60326,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59769,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60327,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59769,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60326,
								60327
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 5,
							"character": 19
						}
					]
				}
			}
		},
		{
			"id": 60015,
			"name": "LocalWorkflow",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 60023,
					"name": "container_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 10,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 59923,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 60024,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 11,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60025,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 12,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 59830,
						"name": "OrchestratorBuilder",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60026,
					"name": "customOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 59793,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 60027,
					"name": "workflow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 14,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 60308,
						"name": "WorkflowDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60028,
					"name": "handlers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 15,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 60324,
								"name": "StepHandler",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 60029,
					"name": "medusaContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 16,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 59952,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 60030,
					"name": "container",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 17,
							"character": 8
						},
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 18,
							"character": 8
						}
					],
					"getSignature": {
						"id": 60031,
						"name": "container",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
								"line": 17,
								"character": 8
							}
						],
						"type": {
							"type": "reference",
							"target": 59923,
							"name": "MedusaContainer",
							"package": "@medusajs/types"
						}
					},
					"setSignature": {
						"id": 60032,
						"name": "container",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
								"line": 18,
								"character": 8
							}
						],
						"parameters": [
							{
								"id": 60033,
								"name": "modulesLoaded",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 59923,
											"name": "MedusaContainer",
											"package": "@medusajs/types"
										},
										{
											"type": "array",
											"elementType": {
												"type": "reflection",
												"declaration": {
													"id": 60034,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 60035,
															"name": "__joinerConfig",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																	"line": 90,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"target": 59978,
																"name": "ModuleJoinerConfig",
																"package": "@medusajs/types"
															}
														},
														{
															"id": 60036,
															"name": "__definition",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																	"line": 91,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"target": 60004,
																"name": "ModuleDefinition",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																60035,
																60036
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 89,
															"character": 37
														}
													]
												}
											}
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 60016,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60017,
							"name": "LocalWorkflow",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60018,
									"name": "workflowId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60019,
									"name": "modulesLoaded",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 59923,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 60020,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 60021,
																"name": "__joinerConfig",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																		"line": 90,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 59978,
																	"name": "ModuleJoinerConfig",
																	"package": "@medusajs/types"
																}
															},
															{
																"id": 60022,
																"name": "__definition",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																		"line": 91,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 60004,
																	"name": "ModuleDefinition",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	60021,
																	60022
																]
															}
														],
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 89,
																"character": 37
															}
														]
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60015,
								"name": "LocalWorkflow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60037,
					"name": "resolveContainer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 20,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60038,
					"name": "contextualizedMedusaModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60039,
					"name": "commit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 22,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 60040,
							"name": "commit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60041,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60042,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59773,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60043,
					"name": "registerEventCallbacks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 24,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60044,
					"name": "run",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60045,
							"name": "run",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60046,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60047,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 60048,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59952,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 60049,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60328,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60050,
									"name": "flowMetadata",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60051,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60052,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 235,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60053,
													"name": "parentIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 236,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60054,
													"name": "cancelingFromParentStep",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 237,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 60055,
													"name": "sourcePath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 238,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60056,
													"name": "preventReleaseEvents",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 239,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 60057,
													"name": "parentStepIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 240,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60052,
														60053,
														60054,
														60055,
														60056,
														60057
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 234,
													"character": 15
												}
											],
											"indexSignatures": [
												{
													"id": 60058,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 241,
															"character": 8
														}
													],
													"parameters": [
														{
															"id": 60059,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60060,
					"name": "getRunningTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60061,
							"name": "getRunningTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60062,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60063,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59952,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60064,
					"name": "cancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60065,
							"name": "cancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60066,
									"name": "transactionOrTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 60411,
												"name": "DistributedTransaction",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 60067,
									"name": "_",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 60068,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59952,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 60069,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60328,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60070,
					"name": "retryStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60071,
							"name": "retryStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60072,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60073,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59952,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 60074,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60328,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60075,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60076,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60077,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60078,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 60079,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59952,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 60080,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60328,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60081,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60082,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60083,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60084,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 60085,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59952,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 60086,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60328,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60087,
									"name": "forcePermanentFailure",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60411,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60088,
					"name": "setOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60089,
							"name": "setOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60090,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59793,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 60091,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60092,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60093,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60094,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60324,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60095,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59773,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60096,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60097,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 34,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60098,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60099,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60100,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60324,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60101,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59773,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60102,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60103,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 35,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60104,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60105,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60106,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60324,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60107,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59773,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60108,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60109,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60110,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60111,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60112,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60324,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60113,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59773,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60114,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60115,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60116,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60117,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60118,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60324,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60119,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59773,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60120,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60121,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60122,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60123,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60124,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60125,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 39,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60126,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60127,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60128,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60129,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 40,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60130,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60131,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60132,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60133,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60134,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60135,
									"name": "parentSteps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60136,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60137,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60138,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60139,
					"name": "assertHandler",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 43,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 60140,
							"name": "assertHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 43,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 60141,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60324,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60142,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60143,
					"name": "onLoad",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 44,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60016
					]
				},
				{
					"title": "Properties",
					"children": [
						60023,
						60024,
						60025,
						60026,
						60027,
						60028,
						60029,
						60037,
						60038,
						60043,
						60143
					]
				},
				{
					"title": "Accessors",
					"children": [
						60030
					]
				},
				{
					"title": "Methods",
					"children": [
						60039,
						60041,
						60044,
						60060,
						60064,
						60070,
						60075,
						60081,
						60088,
						60091,
						60096,
						60102,
						60108,
						60114,
						60120,
						60124,
						60128,
						60132,
						60136,
						60139
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
					"line": 9,
					"character": 21
				}
			]
		},
		{
			"id": 60308,
			"name": "WorkflowDefinition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60309,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60310,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60311,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 60312,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 5,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 60313,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 59923,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 60314,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 59952,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 60870,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							]
						}
					}
				},
				{
					"id": 60315,
					"name": "orchestrator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 60614,
						"name": "TransactionOrchestrator",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60316,
					"name": "flow_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59773,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60317,
					"name": "handlers_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 60318,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60319,
											"name": "invoke",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 9,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 59769,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										},
										{
											"id": 60320,
											"name": "compensate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 10,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 59769,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60319,
												60320
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 8,
											"character": 27
										}
									]
								}
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 60321,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59793,
						"name": "TransactionModelOptions",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60322,
					"name": "requiredModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 60323,
					"name": "optionalModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60309,
						60310,
						60315,
						60316,
						60317,
						60321,
						60322,
						60323
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 59919,
			"name": "WorkflowHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 16,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
					"qualifiedName": "Map"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59920,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59921,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 17,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 59769,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59922,
									"name": "compensate",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 59769,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59921,
										59922
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 16,
									"character": 42
								}
							]
						}
					}
				],
				"name": "Map",
				"package": "typescript"
			}
		},
		{
			"id": 60187,
			"name": "WorkflowStepHandlerArguments",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 20,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60188,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60189,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59923,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60190,
							"name": "payload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 60191,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60192,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 23,
											"character": 12
										}
									],
									"indexSignatures": [
										{
											"id": 60193,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 60194,
													"name": "actions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 60195,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60196,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 26,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 60197,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 60198,
													"name": "actions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 60199,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59944,
								"name": "TransactionMetadata",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60200,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60411,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 60201,
							"name": "step",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60548,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60202,
							"name": "orchestrator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60614,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60203,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59952,
								"name": "Context",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60189,
								60190,
								60191,
								60195,
								60199,
								60200,
								60201,
								60202,
								60203
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 20,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 59769,
			"name": "WorkflowStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 35,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59770,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 35,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 59771,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59772,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60187,
										"name": "WorkflowStepHandlerArguments",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 60242,
			"name": "ModuleImplementations",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 59923,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
					"line": 12,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59943,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": 60242,
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59924,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59925,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 13,
											"character": 4
										},
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 14,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 59926,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 13,
													"character": 4
												}
											],
											"typeParameters": [
												{
													"id": 59927,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 59928,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 59927,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 59929,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 59927,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 59943,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 59930,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 14,
													"character": 4
												}
											],
											"typeParameters": [
												{
													"id": 59931,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 59932,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59933,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 59931,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								},
								{
									"id": 59934,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59935,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 18,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 59936,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 59939,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 59937,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 59938,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 59939,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 59923,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								},
								{
									"id": 59940,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 22,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59941,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 22,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 59942,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 59923,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59934,
										59940
									]
								},
								{
									"title": "Methods",
									"children": [
										59925
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
									"line": 12,
									"character": 112
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 61058,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 13,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 61059,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 61060,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event's group. Grouped events are useful when you have distributed transactions\nwhere you need to explicitly group, release and clear events upon lifecycle events of a transaction.\n\nWhen set, you must release the grouped events using the Event Module's "
											},
											{
												"kind": "code",
												"text": "`releaseGroupedEvents`"
											},
											{
												"kind": "text",
												"text": " method to emit the events."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
											"line": 20,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										61060
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 13,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 61024,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 61029,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 61025,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 61026,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event's name."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nuser.created\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 61027,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional meadata to pass with the event."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 61058,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 61028,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data payload that subscribers receive. For example, the ID or IDs of the created user. (e.g. { id: \"123\" } or { ids: [\"123\", \"456\"] })"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 61029,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								61026,
								61027,
								61028
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
							"line": 22,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 60810,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of an event to emit."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 42,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60813,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 61024,
						"typeArguments": [
							{
								"type": "reference",
								"target": 60813,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60811,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60812,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
											"line": 43,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60812
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 42,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60821,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 45,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60830,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60822,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60823,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60824,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60830,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 60825,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60826,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60827,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 50,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60828,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 59952,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 60829,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60823,
								60824,
								60825,
								60826,
								60827,
								60828,
								60829
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
							"line": 45,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 60836,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 2,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60837,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60838,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60839,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60840,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60841,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60842,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60843,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60844,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60845,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60838,
								60839,
								60840,
								60841,
								60842,
								60843,
								60844,
								60845
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 2,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 60831,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60832,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 60833,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60834,
					"name": "filterable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 60835,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60832,
						60833,
						60834,
						60835
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 25,
					"character": 17
				}
			]
		},
		{
			"id": 60260,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60261,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60262,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 60831,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 60831,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 60263,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 60264,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60265,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60266,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
															"line": 45,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60265,
														60266
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
													"line": 43,
													"character": 41
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 60267,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 60268,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 60836,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 60269,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 60270,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 60271,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 50,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 60272,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 51,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 60273,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 52,
												"character": 8
											}
										],
										"type": {
											"type": "reference",
											"target": 60836,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											60271,
											60272,
											60273
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
										"line": 49,
										"character": 14
									}
								]
							}
						}
					}
				},
				{
					"id": 60274,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60261,
						60262,
						60263,
						60267,
						60268,
						60269,
						60274
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 34,
					"character": 17
				}
			]
		},
		{
			"id": 61061,
			"name": "Logger",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 61062,
					"name": "panic",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61063,
							"name": "panic",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 2,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61064,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61065,
					"name": "shouldLog",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61066,
							"name": "shouldLog",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61067,
									"name": "level",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 61068,
					"name": "setLogLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61069,
							"name": "setLogLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61070,
									"name": "level",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61071,
					"name": "unsetLogLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61072,
							"name": "unsetLogLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61073,
					"name": "activity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61074,
							"name": "activity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61075,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 61076,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 61077,
					"name": "progress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61078,
							"name": "progress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61079,
									"name": "activityId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 61080,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61081,
					"name": "error",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61082,
							"name": "error",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 8,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61083,
									"name": "messageOrError",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 61084,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61085,
					"name": "failure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61086,
							"name": "failure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 9,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61087,
									"name": "activityId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 61088,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 61089,
					"name": "success",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61090,
							"name": "success",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61091,
									"name": "activityId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 61092,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 61093,
					"name": "silly",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61094,
							"name": "silly",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61095,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61096,
					"name": "debug",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61097,
							"name": "debug",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61098,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61099,
					"name": "verbose",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61100,
							"name": "verbose",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61101,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61102,
					"name": "http",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61103,
							"name": "http",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61104,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61105,
					"name": "info",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61106,
							"name": "info",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61107,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61108,
					"name": "warn",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61109,
							"name": "warn",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61110,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61111,
					"name": "log",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 61112,
							"name": "log",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 61113,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						61062,
						61065,
						61068,
						61071,
						61073,
						61077,
						61081,
						61085,
						61089,
						61093,
						61096,
						61099,
						61102,
						61105,
						61108,
						61111
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 61042,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 61048,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 61043,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 8,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 61044,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 61047,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 61048,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 61045,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 8,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 61046,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 61048,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 60846,
			"name": "CustomModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60847,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60848,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60849,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60850,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60851,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60848,
								60849,
								60850,
								60851
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 17,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 60286,
			"name": "InternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 23,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60287,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60288,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "literal",
								"value": "internal"
							}
						},
						{
							"id": 60289,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 60290,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60846,
								"name": "CustomModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60291,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 60852,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 60292,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 60293,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60294,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60295,
							"name": "worker_mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60288,
								60289,
								60290,
								60291,
								60292,
								60293,
								60294,
								60295
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 23,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 60296,
			"name": "ExternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 39,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60297,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60298,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 40,
									"character": 4
								}
							],
							"type": {
								"type": "literal",
								"value": "external"
							}
						},
						{
							"id": 60299,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60846,
								"name": "CustomModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60300,
							"name": "server",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60301,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60302,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "literal",
												"value": "http"
											}
										},
										{
											"id": 60303,
											"name": "url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 44,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60304,
											"name": "keepAlive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60302,
												60303,
												60304
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 42,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 60305,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 60306,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60307,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60298,
								60299,
								60300,
								60305,
								60306,
								60307
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 39,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 60004,
			"name": "ModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 65,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60005,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60006,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60007,
							"name": "defaultPackage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 60008,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60009,
							"name": "resolvePath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60010,
							"name": "isRequired",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60011,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 71,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60012,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 60013,
							"name": "__passSharedContainer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "only used in exceptional cases - relying on the shared contrainer breaks encapsulation"
									}
								],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60014,
							"name": "defaultModuleDeclaration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 60286,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 60296,
										"name": "ExternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60006,
								60007,
								60008,
								60009,
								60010,
								60011,
								60012,
								60013,
								60014
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 65,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 60994,
			"name": "LoadedModule",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 89,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "intrinsic",
						"name": "unknown"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60995,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60996,
									"name": "__joinerConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 90,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 59978,
										"name": "ModuleJoinerConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 60997,
									"name": "__definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 91,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 60004,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60996,
										60997
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 89,
									"character": 37
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 61035,
			"name": "LoaderOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 93,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 61041,
					"name": "TOptions",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 61036,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 61037,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59923,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 61038,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 95,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 61041,
								"name": "TOptions",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 61039,
							"name": "logger",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 96,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 61061,
								"name": "Logger",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 61040,
							"name": "dataLoaderOnly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 97,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								61037,
								61038,
								61039,
								61040
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 93,
							"character": 64
						}
					]
				}
			}
		},
		{
			"id": 61030,
			"name": "ModuleLoaderFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 99,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 61031,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 99,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 61032,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 61033,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 61035,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderOptions",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 61034,
									"name": "moduleDeclaration",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60286,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 60280,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 104,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60281,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60282,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 105,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 60283,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 106,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60284,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 107,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 60285,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 111,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60282,
										60283,
										60284,
										60285
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 104,
									"character": 52
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 59978,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 125,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 60260,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59979,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59980,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 129,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59981,
									"name": "idPrefixToEntityName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 130,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 59982,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 131,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60275,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 59983,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 132,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 59984,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 59985,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 133,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 59986,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 134,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 59987,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 135,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 59988,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 59989,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 136,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 59990,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 137,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 59991,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 138,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							59989,
																							59990,
																							59991
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																						"line": 135,
																						"character": 45
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 59992,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 140,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Omit"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 60275,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																},
																{
																	"type": "literal",
																	"value": "hasMany"
																}
															],
															"name": "Omit",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															59985,
															59986,
															59987,
															59992
														]
													}
												],
												"sources": [
													{
														"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
														"line": 132,
														"character": 14
													}
												]
											}
										}
									}
								},
								{
									"id": 59993,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 142,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59994,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 143,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 59995,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 147,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 59996,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 151,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 59997,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 155,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 59998,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 160,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 59999,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 161,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60000,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60001,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 165,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60002,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 169,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60003,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 170,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60280,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60001,
														60002,
														60003
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 161,
													"character": 21
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59980,
										59981,
										59982,
										59983,
										59993,
										59994,
										59995,
										59996,
										59997,
										59998,
										59999
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 125,
									"character": 122
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60275,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 173,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 60836,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60276,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60277,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 177,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 60278,
									"name": "filterable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fields to be filterable by the Index module using query.index"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 181,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 60279,
									"name": "hasMany",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allow multiple relationships to exist for this\nentity"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 186,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60277,
										60278,
										60279
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 173,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60852,
			"name": "ModuleExports",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 188,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60869,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": 61042,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60853,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60854,
							"name": "service",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 189,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60869,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 60855,
							"name": "loaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 190,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 61030,
									"name": "ModuleLoaderFunction",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 60856,
							"name": "runMigrations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 191,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 60857,
									"name": "runMigrations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 191,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 60858,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 61035,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 60859,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 60286,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 60860,
							"name": "revertMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 192,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 60861,
									"name": "revertMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 192,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 60862,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 61035,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 60863,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 60286,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 60864,
							"name": "generateMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 193,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 60865,
									"name": "generateMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 193,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 60866,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 61035,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 60867,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 60286,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 60868,
							"name": "discoveryPath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Explicitly set the the true location of the module resources.\nCan be used to re-export the module from a different location and specify its original location."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 198,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60854,
								60855,
								60868
							]
						},
						{
							"title": "Methods",
							"children": [
								60856,
								60860,
								60864
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 188,
							"character": 50
						}
					]
				}
			}
		},
		{
			"id": 60814,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60815,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 60816,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60817,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"indexSignatures": [
								{
									"id": 60818,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
											"line": 6,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 60819,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 60820,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60815,
						60816,
						60820
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 60246,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60247,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60248,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60249,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 60810,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 60810,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60250,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60251,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60252,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60814,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60810,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60253,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60254,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60255,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60256,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"typeParameters": [
								{
									"id": 60257,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 60258,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 60821,
												"typeArguments": [
													{
														"type": "reference",
														"target": 60257,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 60821,
													"typeArguments": [
														{
															"type": "reference",
															"target": 60257,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 60259,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						60247,
						60250,
						60253,
						60255
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 59952,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 59953,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 59954,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59968,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 59955,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59968,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 59956,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59957,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59958,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59959,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59960,
					"name": "runId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current run."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59961,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 60246,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 59962,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59963,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59964,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 69,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59965,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "preventReleaseEvents"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59966,
					"name": "isCancelling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether the current workflow execution is being cancelled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 77,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59967,
					"name": "cancelingFromParentStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Weither or not a sub workflow cancellation is being triggered from a parent step.\nIf true, the parent step will not be triggered by the sub workflow."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 82,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59953,
						59954,
						59955,
						59956,
						59957,
						59958,
						59959,
						59960,
						59961,
						59962,
						59963,
						59964,
						59965,
						59966,
						59967
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 24,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59968,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 59812,
			"name": "SymbolWorkflowHook",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/symbol.d.ts",
					"line": 5,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 60243,
			"name": "TransactionHandlerType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 60244,
					"name": "INVOKE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoke"
					}
				},
				{
					"id": 60245,
					"name": "COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensate"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						60244,
						60245
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 1,
					"character": 20
				}
			]
		},
		{
			"id": 60978,
			"name": "TransactionState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 60979,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 60980,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 60981,
					"name": "WAITING_TO_COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_to_compensate"
					}
				},
				{
					"id": 60982,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 60983,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 60984,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 60985,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						60979,
						60980,
						60981,
						60982,
						60983,
						60984,
						60985
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 5,
					"character": 20
				}
			]
		},
		{
			"id": 60998,
			"name": "TransactionStepState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 60999,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 61000,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 61001,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 61002,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 61003,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 61004,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				},
				{
					"id": 61005,
					"name": "DORMANT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "dormant"
					}
				},
				{
					"id": 61006,
					"name": "SKIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped"
					}
				},
				{
					"id": 61007,
					"name": "SKIPPED_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped_failure"
					}
				},
				{
					"id": 61008,
					"name": "TIMEOUT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "timeout"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						60999,
						61000,
						61001,
						61002,
						61003,
						61004,
						61005,
						61006,
						61007,
						61008
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 14,
					"character": 20
				}
			]
		},
		{
			"id": 61009,
			"name": "TransactionStepStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 61010,
					"name": "IDLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "idle"
					}
				},
				{
					"id": 61011,
					"name": "OK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ok"
					}
				},
				{
					"id": 61012,
					"name": "WAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_response"
					}
				},
				{
					"id": 61013,
					"name": "TEMPORARY_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "temp_failure"
					}
				},
				{
					"id": 61014,
					"name": "PERMANENT_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "permanent_failure"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						61010,
						61011,
						61012,
						61013,
						61014
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 26,
					"character": 20
				}
			]
		},
		{
			"id": 60986,
			"name": "BaseFlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 9,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60987,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60988,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 59952,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60989,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 60990,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60991,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60992,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 60328,
								"name": "DistributedTransactionEvents",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60993,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60994,
											"name": "LoadedModule",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 59923,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60988,
								60989,
								60990,
								60991,
								60992,
								60993
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 9,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 60514,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 18,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60517,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 60986,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60515,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60516,
									"name": "input",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 19,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 60517,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60516
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 18,
									"character": 67
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60518,
			"name": "FlowRegisterStepSuccessOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60522,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 60986,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60519,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60520,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 24,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60521,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 25,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 60522,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60520,
										60521
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 23,
									"character": 23
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60529,
			"name": "FlowRetryStepOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 28,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 60986,
								"name": "BaseFlowRunOptions",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "literal",
								"value": "resultFrom"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60530,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60531,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 29,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60531
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 28,
									"character": 76
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60523,
			"name": "FlowRegisterStepFailureOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 32,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60528,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 60986,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60524,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60525,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 34,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60526,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 35,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 60528,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 60527,
									"name": "forcePermanentFailure",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 36,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60525,
										60526,
										60527
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 33,
									"character": 23
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60532,
			"name": "FlowCancelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 39,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60533,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60534,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 60411,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 60535,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60536,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 42,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 59952,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60537,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 43,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60538,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60539,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 60328,
								"name": "DistributedTransactionEvents",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60540,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 46,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60994,
											"name": "LoadedModule",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 59923,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60534,
								60535,
								60536,
								60537,
								60538,
								60539,
								60540
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 39,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 60508,
			"name": "WorkflowResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a workflow's execution."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 52,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60513,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60509,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60510,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Any errors that occured in the workflow."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 60969,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						},
						{
							"id": 60511,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transaction details of the workflow's execution."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 60411,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 60512,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The result returned by the workflow."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 60513,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60510,
								60511,
								60512
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 52,
							"character": 48
						}
					]
				}
			}
		},
		{
			"id": 60144,
			"name": "ExportedWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 67,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60166,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 60167,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 60168,
					"name": "TDataOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				},
				{
					"id": 60169,
					"name": "TResultOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60145,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60146,
							"name": "run",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60147,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 73,
											"character": 7
										}
									],
									"signatures": [
										{
											"id": 60148,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60149,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 60514,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60168,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60166,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60168,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRunOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60508,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60169,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60167,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60169,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 60150,
							"name": "registerStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60151,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 82,
											"character": 23
										}
									],
									"signatures": [
										{
											"id": 60152,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60153,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 60518,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60168,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60166,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60168,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRegisterStepSuccessOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60508,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60169,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60167,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60169,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 60154,
							"name": "registerStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 91,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60155,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 91,
											"character": 23
										}
									],
									"signatures": [
										{
											"id": 60156,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60157,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 60523,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60168,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60166,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60168,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRegisterStepFailureOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60508,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60169,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60167,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60169,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 60158,
							"name": "retryStep",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 100,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60159,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 100,
											"character": 13
										}
									],
									"signatures": [
										{
											"id": 60160,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60161,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 60529,
														"name": "FlowRetryStepOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60508,
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 60162,
							"name": "cancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60163,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 101,
											"character": 10
										}
									],
									"signatures": [
										{
											"id": 60164,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60165,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 60532,
														"name": "FlowCancelOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60508,
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60146,
								60150,
								60154,
								60158,
								60162
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 72,
							"character": 4
						}
					]
				}
			}
		},
		{
			"id": 59517,
			"name": "Hook",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Representation of a hook definition."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 59525,
					"name": "Name",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59526,
					"name": "Input",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59527,
					"name": "Output",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59518,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59519,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L19"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 59812,
									"name": "OrchestrationUtils.SymbolWorkflowHook",
									"package": "@medusajs/utils",
									"qualifiedName": "SymbolWorkflowHook"
								}
							}
						},
						{
							"id": 59520,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L20"
								}
							],
							"type": {
								"type": "reference",
								"target": 59525,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59521,
							"name": "getResult",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L25"
								}
							],
							"signatures": [
								{
									"id": 59522,
									"name": "getResult",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the result of the hook"
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 25,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L25"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 59527,
												"name": "Output",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										]
									}
								}
							]
						},
						{
							"id": 59523,
							"name": " output",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By prefixing a key with a space, we remove it from the\nintellisense of TypeScript. This is needed because\ninput is not set at runtime. It is a type-only\nproperty to infer input data type of a hook"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L33"
								}
							],
							"type": {
								"type": "reference",
								"target": 59527,
								"name": "Output",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59524,
							"name": " input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L34"
								}
							],
							"type": {
								"type": "reference",
								"target": 59526,
								"name": "Input",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59519,
								59520,
								59523,
								59524
							]
						},
						{
							"title": "Methods",
							"children": [
								59521
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 18,
							"character": 55,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L18"
						}
					]
				}
			}
		},
		{
			"id": 59507,
			"name": "createHook",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 72,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L72"
				}
			],
			"signatures": [
				{
					"id": 59508,
					"name": "createHook",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expose a hook in your workflow where you can inject custom functionality as a step function.\n\nA handler hook can later be registered to consume the hook and perform custom functionality.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks)."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A workflow hook."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  createHook,\n  createWorkflow,\n  WorkflowResponse,\n} from \"@medusajs/framework/workflows-sdk\"\nimport { createProductStep } from \"./steps/create-product\"\n\nexport const myWorkflow = createWorkflow(\n  \"my-workflow\",\n  function (input) {\n    const product = createProductStep(input)\n    const productCreatedHook = createHook(\n      \"productCreated\",\n      { productId: product.id }\n    )\n\n    return new WorkflowResponse(product, {\n      hooks: [productCreatedHook],\n    })\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 72,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L72"
						}
					],
					"typeParameters": [
						{
							"id": 59509,
							"name": "Name",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59510,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 59511,
							"name": "TInvokeOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 59512,
							"name": "name",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hook's name. This is used when the hook handler is registered to consume the workflow."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 59509,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59513,
							"name": "hookInput",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input to pass to the hook handler."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 59510,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59514,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59515,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 59516,
											"name": "resultValidator",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
													"line": 76,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L76"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/zod/v3/types.d.cts",
													"qualifiedName": "ZodType"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 59511,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/zod/v3/types.d.cts",
															"qualifiedName": "ZodTypeDef"
														},
														"name": "ZodTypeDef",
														"package": "zod"
													},
													{
														"type": "reference",
														"target": 59511,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ZodType",
												"package": "zod"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												59516
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 75,
											"character": 11,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L75"
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 59517,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59509,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59510,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59511,
								"name": "TInvokeOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "Hook",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 59418,
			"name": "InvokeFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of invocation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
				}
			],
			"typeParameters": [
				{
					"id": 59423,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the function expects."
							}
						]
					}
				},
				{
					"id": 59424,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output that the function returns."
							}
						]
					}
				},
				{
					"id": 59425,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the compensation function expects."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59419,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 29,
							"character": 58,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 59420,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The expected output based on the type parameter "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 59421,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59423,
										"name": "TInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 59422,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59691,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": 59461,
										"typeArguments": [
											{
												"type": "reference",
												"target": 59424,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 59425,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "undefined"
												},
												"trueType": {
													"type": "reference",
													"target": 59424,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"falseType": {
													"type": "reference",
													"target": 59425,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "StepResponse",
										"package": "@medusajs/workflows-sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 59461,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59424,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 59425,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 59424,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 59425,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "StepResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 59426,
			"name": "CompensateFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of compensation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 57,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
				}
			],
			"typeParameters": [
				{
					"id": 59431,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the argument passed to the compensation function. If not specified, then it will be the same type as the invocation function's output."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59427,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 57,
							"character": 30,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 59428,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There's no expected type to be returned by the compensation function."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 59429,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 59431,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 59430,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59691,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 59432,
			"name": "LocalStepConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 68,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 59433,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59434,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
											"line": 68,
											"character": 32,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59434
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
									"line": 68,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 59773,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "next"
									},
									{
										"type": "literal",
										"value": "uuid"
									},
									{
										"type": "literal",
										"value": "action"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 59435,
			"name": "ApplyStepOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 59436,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 81,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L81"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59437,
					"name": "stepConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 82,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"target": 59773,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59438,
					"name": "input",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 83,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L83"
						}
					],
					"type": {
						"type": "reference",
						"target": 59441,
						"name": "TStepInputs",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "ApplyStepOptions.TStepInputs",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 59439,
					"name": "invokeFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L84"
						}
					],
					"type": {
						"type": "reference",
						"target": 59418,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59442,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59443,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultOutput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59444,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "InvokeFn",
						"package": "@medusajs/workflows-sdk"
					}
				},
				{
					"id": 59440,
					"name": "compensateFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"target": 59426,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59444,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "CompensateFn",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59436,
						59437,
						59438,
						59439,
						59440
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 73,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L73"
				}
			],
			"typeParameters": [
				{
					"id": 59441,
					"name": "TStepInputs",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 59442,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "reference",
							"target": 59643,
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 59442,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "ApplyStepOptions.TInvokeInput",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "WorkflowData",
							"package": "@medusajs/workflows-sdk"
						}
					}
				},
				{
					"id": 59442,
					"name": "TInvokeInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59443,
					"name": "TInvokeResultOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59444,
					"name": "TInvokeResultCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 59390,
			"name": "applyStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 136,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L136"
				}
			],
			"signatures": [
				{
					"id": 59391,
					"name": "applyStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 136,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L136"
						}
					],
					"typeParameters": [
						{
							"id": 59392,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 59393,
							"name": "TStepInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								},
								"templateType": {
									"type": "reference",
									"target": 59643,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 59392,
												"name": "TInvokeInput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "WorkflowData",
									"package": "@medusajs/workflows-sdk"
								}
							}
						},
						{
							"id": 59394,
							"name": "TInvokeResultOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 59395,
							"name": "TInvokeResultCompensateInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 59396,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 59435,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59393,
										"name": "TStepInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59392,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59394,
										"name": "TInvokeResultOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59395,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ApplyStepOptions",
								"package": "@medusajs/workflows-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 59589,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59394,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "StepFunctionResult",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 59408,
			"name": "createStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 422,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L422"
				}
			],
			"signatures": [
				{
					"id": 59409,
					"name": "createStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StepFunction",
								"target": 59609
							},
							{
								"kind": "text",
								"text": " that can be used as a step in a workflow constructed by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 59445
							},
							{
								"kind": "text",
								"text": " function."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A step function to be used in a workflow."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  StepResponse\n} from \"@medusajs/framework/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    { container }\n  ) {\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    const product = await productModuleService.createProducts(input)\n    return new StepResponse({\n      product\n    }, {\n      product_id: product.id\n    })\n  },\n  async function (\n    input,\n    { container }\n  ) {\n    if (!input) {\n      return\n    }\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    await productModuleService.deleteProducts([input.product_id])\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 422,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L422"
						}
					],
					"typeParameters": [
						{
							"id": 59410,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the invocation function."
									}
								]
							}
						},
						{
							"id": 59411,
							"name": "TInvokeResultOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected output parameter of the invocation function."
									}
								]
							}
						},
						{
							"id": 59412,
							"name": "TInvokeResultCompensateInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the compensation function."
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 59413,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the step or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 59414,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 59415,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
																	"line": 432,
																	"character": 9,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L432"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																59415
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
															"line": 432,
															"character": 7,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L432"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 59773,
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "next"
															},
															{
																"type": "literal",
																"value": "uuid"
															},
															{
																"type": "literal",
																"value": "action"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										]
									}
								]
							}
						},
						{
							"id": 59416,
							"name": "invokeFn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An invocation function that will be executed when the workflow is executed. The function must return an instance of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 59461
									},
									{
										"kind": "text",
										"text": ". The constructor of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 59461
									},
									{
										"kind": "text",
										"text": "\naccepts the output of the step as a first argument, and optionally as a second argument the data to be passed to the compensation function as a parameter."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 59418,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59410,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59411,
										"name": "TInvokeResultOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59412,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "InvokeFn",
								"package": "@medusajs/workflows-sdk"
							}
						},
						{
							"id": 59417,
							"name": "compensateFn",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A compensation function that's executed if an error occurs in the workflow. It's used to roll-back actions when errors occur.\nIt accepts as a parameter the second argument passed to the constructor of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 59461
									},
									{
										"kind": "text",
										"text": " instance returned by the invocation function. If the\ninvocation function doesn't pass the second argument to "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor, the compensation function receives the first argument\npassed to the "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor instead."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 59426,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59412,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "CompensateFn",
								"package": "@medusajs/workflows-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 59609,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59410,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59411,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "StepFunction",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 59445,
			"name": "createWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
					"line": 101,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L101"
				}
			],
			"signatures": [
				{
					"id": 59446,
					"name": "createWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a workflow with the provided name and a constructor function.\nThe constructor function builds the workflow from steps created by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createStep",
								"target": 59408
							},
							{
								"kind": "text",
								"text": " function.\nThe returned workflow is an exported workflow of type "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ReturnWorkflow",
								"target": 59718
							},
							{
								"kind": "text",
								"text": ", meaning it's not executed right away. To execute it,\ninvoke the exported workflow, then run its "
							},
							{
								"kind": "code",
								"text": "`run`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The created workflow. You can later execute the workflow by invoking it, then using its "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { MedusaRequest, MedusaResponse } from \"@medusajs/framework/http\"\nimport {\n  createProductStep,\n  getProductStep,\n} from \"./steps\"\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n    return new WorkflowResponse(getProductStep(product.id))\n  }\n)\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result: product } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        title: \"Shirt\"\n      }\n    })\n\n  res.json({\n    product\n  })\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
							"line": 101,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L101"
						}
					],
					"typeParameters": [
						{
							"id": 59447,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the input passed to the composer function."
									}
								]
							}
						},
						{
							"id": 59448,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the output returned by the composer function."
									}
								]
							}
						},
						{
							"id": 59449,
							"name": "THooks",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of hooks defined in the workflow."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 59450,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the workflow or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 59451,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 59452,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
																	"line": 105,
																	"character": 28,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L105"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																59452
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
															"line": 105,
															"character": 26,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L105"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": 59793,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										]
									}
								]
							}
						},
						{
							"id": 59453,
							"name": "composer",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor function that is executed when the "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ReturnWorkflow",
										"target": 59718
									},
									{
										"kind": "text",
										"text": " is used.\nThe function can't be an arrow function or an asynchronus function. It also can't directly manipulate data.\nYou'll have to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "transform",
										"target": 59532
									},
									{
										"kind": "text",
										"text": " function if you need to directly manipulate data."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59454,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
											"line": 111,
											"character": 12,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L111"
										}
									],
									"signatures": [
										{
											"id": 59455,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
													"line": 111,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L111"
												}
											],
											"parameters": [
												{
													"id": 59456,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 59643,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59447,
																"name": "TData",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 59491,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59448,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 59449,
																"name": "THooks",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 59718,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59447,
								"name": "TData",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59448,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59449,
								"name": "THooks",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 59457,
			"name": "resolveValue",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
					"line": 185,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts#L185"
				}
			],
			"signatures": [
				{
					"id": 59458,
					"name": "resolveValue",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
							"line": 185,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts#L185"
						}
					],
					"parameters": [
						{
							"id": 59459,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 59460,
							"name": "transactionContext",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				}
			]
		},
		{
			"id": 59461,
			"name": "StepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This class is used to create the response returned by a step. A step return its data by returning an instance of "
					},
					{
						"kind": "code",
						"text": "`StepResponse`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 59468,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 59469,
							"name": "StepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor of the StepResponse"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
								}
							],
							"typeParameters": [
								{
									"id": 59470,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the output of the step."
											}
										]
									}
								},
								{
									"id": 59471,
									"name": "TCompensateInput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
											},
											{
												"kind": "code",
												"text": "`TCompensateInput`"
											},
											{
												"kind": "text",
												"text": " is the same\nas that of "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"default": {
										"type": "reference",
										"target": 59470,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 59472,
									"name": "output",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The output of the step."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 59470,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 59473,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The input to be passed as a parameter to the step's compensation function. If not provided, the "
											},
											{
												"kind": "code",
												"text": "`output`"
											},
											{
												"kind": "text",
												"text": " will be provided instead."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 59471,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59461,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59470,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59471,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								],
								"name": "StepResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 59462,
					"name": "permanentFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 120,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L120"
						}
					],
					"signatures": [
						{
							"id": 59463,
							"name": "permanentFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a StepResponse that indicates that the step has failed and the retry mechanism should not kick in anymore."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { Product } from \"@medusajs/medusa\"\nimport {\n  createStep,\n  StepResponse,\n  createWorkflow\n} from \"@medusajs/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    context\n  ) {\n    const productService = context.container.resolve(\n      \"productService\"\n    )\n\n    try {\n      const product = await productService.createProducts(input)\n      return new StepResponse({\n        product\n      }, {\n        product_id: product.id\n      })\n    } catch (e) {\n      return StepResponse.permanentFailure(`Couldn't create the product: ${e}`)\n    }\n  }\n)\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow<\n    WorkflowInput,\n    Product\n  >(\"my-workflow\", (input) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n  }\n)\n\nmyWorkflow()\n  .run({\n    input: {\n      title: \"Shirt\"\n    }\n  })\n  .then(({ errors, result }) => {\n    if (errors.length) {\n      errors.forEach((err) => {\n        if (typeof err.error === \"object\" && \"message\" in err.error) {\n          console.error(err.error.message)\n        } else {\n          console.error(err.error)\n        }\n      })\n    }\n    console.log(result)\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 120,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L120"
								}
							],
							"parameters": [
								{
									"id": 59464,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional message to be logged."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Permanent failure\""
								},
								{
									"id": 59465,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 59466,
					"name": "skip",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 130,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L130"
						}
					],
					"signatures": [
						{
							"id": 59467,
							"name": "skip",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 130,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L130"
								}
							],
							"type": {
								"type": "reference",
								"target": 59801,
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59468
					]
				},
				{
					"title": "Methods",
					"children": [
						59462,
						59466
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
					"line": 15,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 59489,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					}
				},
				{
					"id": 59490,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
							},
							{
								"kind": "code",
								"text": "`TCompensateInput`"
							},
							{
								"kind": "text",
								"text": " is the same\nas that of "
							},
							{
								"kind": "code",
								"text": "`TOutput`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"default": {
						"type": "reference",
						"target": 59470,
						"name": "TOutput",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "StepResponse.TOutput",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 59491,
			"name": "WorkflowResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Workflow response class encapsulates the return value of a workflow"
					}
				]
			},
			"children": [
				{
					"id": 59500,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "OrchestrationUtils.SymbolMedusaWorkflowResponse"
				},
				{
					"id": 59492,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 59493,
							"name": "WorkflowResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
								}
							],
							"typeParameters": [
								{
									"id": 59494,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 59495,
									"name": "THooks",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									},
									"default": {
										"type": "tuple"
									}
								}
							],
							"parameters": [
								{
									"id": 59496,
									"name": "$result",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 59643,
												"typeArguments": [
													{
														"type": "reference",
														"target": 59494,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 59494,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"qualifiedName": "WorkflowResponse.TResult",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": 59638,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 59494,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowDataProperties",
															"package": "@medusajs/workflows-sdk"
														},
														{
															"type": "reference",
															"target": 59643,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 59494,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 59497,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59498,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59499,
													"name": "hooks",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"line": 23,
															"character": 23,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
														}
													],
													"type": {
														"type": "reference",
														"target": 59495,
														"name": "THooks",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.THooks",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59499
													]
												}
											],
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"line": 23,
													"character": 21,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59491,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59494,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59495,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 59501,
					"name": "$result",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 15,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L15"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 59643,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59494,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 59494,
												"name": "TResult",
												"package": "@medusajs/workflows-sdk",
												"qualifiedName": "WorkflowResponse.TResult",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 59638,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 59494,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowDataProperties",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "reference",
											"target": 59643,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 59494,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 59502,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 23,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59503,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59504,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
											"line": 23,
											"character": 23,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
										}
									],
									"type": {
										"type": "reference",
										"target": 59495,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59504
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 23,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59492
					]
				},
				{
					"title": "Properties",
					"children": [
						59500,
						59501,
						59502
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 59505,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59506,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			]
		},
		{
			"id": 59528,
			"name": "parallelize",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 59529,
					"name": "parallelize",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function is used to run multiple steps in parallel. The result of each step will be returned as part of the result array."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The step results. The results are ordered in the array by the order they're passed in the function's parameter."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  parallelize,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  createProductStep,\n  createPricesStep,\n  attachProductToSalesChannelStep\n} from \"./steps\"\n\ninterface WorkflowInput {\n  title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   const product = createProductStep(input)\n\n   const [prices, productSalesChannel] = parallelize(\n     createPricesStep(product),\n     attachProductToSalesChannelStep(product)\n   )\n\n   return new WorkflowResponse({\n    prices,\n    productSalesChannel\n   })\n }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
						}
					],
					"typeParameters": [
						{
							"id": 59530,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "reference",
											"target": 59643,
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 59531,
							"name": "steps",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "reference",
								"target": 59530,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 59530,
						"name": "TResult",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 59813,
			"name": "Func1",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
					"line": 10,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 59819,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 59643,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				},
				{
					"id": 59820,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59814,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
							"line": 10,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 59815,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59816,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 59819,
											"name": "T",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 59643,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 59819,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 59819,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 59819,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 59643,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 59819,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 59817,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
															"line": 15,
															"character": 6
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 59818,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59691,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 59820,
										"name": "U",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59820,
												"name": "U",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 59821,
			"name": "Func",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
					"line": 19,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 59826,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59827,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59822,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
							"line": 19,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 59823,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59824,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59826,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 59825,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59691,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 59827,
										"name": "U",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59827,
												"name": "U",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 59532,
			"name": "transform",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/transform.ts",
					"line": 62,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/transform.ts#L62"
				}
			],
			"signatures": [
				{
					"id": 59533,
					"name": "transform",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function transforms the output of other utility functions.\n\nFor example, if you're using the value(s) of some step(s) as an input to a later step. As you can't directly manipulate data in the  workflow constructor function passed to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 59445
							},
							{
								"kind": "text",
								"text": ",\nthe "
							},
							{
								"kind": "code",
								"text": "`transform`"
							},
							{
								"kind": "text",
								"text": " function provides access to the runtime value of the step(s) output so that you can manipulate them.\n\nAnother example is if you're using the runtime value of some step(s) as the output of a workflow.\n\nIf you're also retrieving the output of a hook and want to check if its value is set, you must use a workflow to get the runtime value of that hook."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "There's no expected value to be returned by the "
									},
									{
										"kind": "code",
										"text": "`transform`"
									},
									{
										"kind": "text",
										"text": " function."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  transform,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { step1, step2 } from \"./steps\"\n\ntype WorkflowInput = {\n  name: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"hello-world\",\n  (input: WorkflowInput) => {\n    const str1 = step1(input)\n    const str2 = step2(input)\n\n    const message = transform({\n      str1,\n      str2\n    }, (input) => `${input.str1}${input.str2}`)\n\n    return new WorkflowResponse(message)\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/transform.ts",
							"line": 62,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/transform.ts#L62"
						}
					],
					"typeParameters": [
						{
							"id": 59534,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "object"
									},
									{
										"type": "reference",
										"target": 59643,
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						{
							"id": 59535,
							"name": "RFinal",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 59536,
							"name": "values",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The output(s) of other step functions."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 59534,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59537,
							"name": "func",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transform function used to perform action on the runtime values of the provided "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 59813,
										"typeArguments": [
											{
												"type": "reference",
												"target": 59534,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 59535,
												"name": "RFinal",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Func1",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 59643,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59535,
								"name": "RFinal",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowData",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 59589,
			"name": "StepFunctionResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 59593,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59590,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 59591,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59592,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59651,
										"name": "CreateWorkflowComposerContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59643,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59593,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				}
			}
		},
		{
			"id": 59594,
			"name": "StepFunctionReturnConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 59601,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59595,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59596,
							"name": "config",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
								}
							],
							"signatures": [
								{
									"id": 59597,
									"name": "config",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
										}
									],
									"parameters": [
										{
											"id": 59598,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 59599,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59600,
																	"name": "name",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 20,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		59600
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 20,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Omit"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 59773,
																"name": "TransactionStepsDefinition",
																"package": "@medusajs/orchestration"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "next"
																	},
																	{
																		"type": "literal",
																		"value": "uuid"
																	},
																	{
																		"type": "literal",
																		"value": "action"
																	}
																]
															}
														],
														"name": "Omit",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 59643,
										"typeArguments": [
											{
												"type": "reference",
												"target": 59601,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								59596
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 18,
							"character": 48,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
						}
					]
				}
			}
		},
		{
			"id": 59828,
			"name": "KeysOfUnion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 27,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 59829,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 59829,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 59829,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"trueType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 59829,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 59602,
			"name": "HookHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 28,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59603,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 28,
							"character": 26,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 59604,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59605,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 60541,
			"name": "ConvertHookToObject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 30,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 60547,
					"name": "THook",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 60547,
					"name": "THook",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 59517,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "Name"
						},
						{
							"type": "inferred",
							"name": "Input"
						},
						{
							"type": "inferred",
							"name": "Output"
						}
					],
					"name": "Hook",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "mapped",
					"parameter": "K",
					"parameterType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
							"qualifiedName": "Name"
						},
						"name": "Name",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					"templateType": {
						"type": "reflection",
						"declaration": {
							"id": 60542,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
									"line": 36,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 60543,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 60546,
											"name": "TCompensateInput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 60544,
											"name": "invoke",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 59418,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Input"
														},
														"name": "Input",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Output"
														},
														"name": "Output",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 60546,
														"name": "TCompensateInput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "InvokeFn",
												"package": "@medusajs/workflows-sdk"
											}
										},
										{
											"id": 60545,
											"name": "compensate",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 59426,
												"typeArguments": [
													{
														"type": "reference",
														"target": 60546,
														"name": "TCompensateInput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "CompensateFn",
												"package": "@medusajs/workflows-sdk"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 60170,
			"name": "ConvertHooksToFunctions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Helper to convert an array of hooks to functions"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 46,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 60172,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 60172,
					"name": "THooks",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "A"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "R"
							}
						}
					]
				},
				"trueType": {
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 60541,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
										"qualifiedName": "A"
									},
									"name": "A",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "ConvertHookToObject",
							"package": "@medusajs/workflows-sdk"
						},
						{
							"type": "reference",
							"target": 60170,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
										"qualifiedName": "R"
									},
									"name": "R",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "ConvertHooksToFunctions",
							"package": "@medusajs/workflows-sdk"
						}
					]
				},
				"falseType": {
					"type": "reflection",
					"declaration": {
						"id": 60171,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
								"line": 51,
								"character": 4
							}
						]
					}
				}
			}
		},
		{
			"id": 59606,
			"name": "Void",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 53,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59607,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59608,
							"name": " $$type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 53,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
								}
							],
							"type": {
								"type": "literal",
								"value": "void"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59608
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 53,
							"character": 19,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
						}
					]
				}
			}
		},
		{
			"id": 59609,
			"name": "StepFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A step function to be used in a workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 61,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L61"
				}
			],
			"typeParameters": [
				{
					"id": 59636,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input of the step."
							}
						]
					}
				},
				{
					"id": 59637,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 59828,
							"typeArguments": [
								{
									"type": "reference",
									"target": 59636,
									"name": "TInput",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "KeysOfUnion",
							"package": "@medusajs/workflows-sdk"
						},
						"extendsType": {
							"type": "tuple"
						},
						"trueType": {
							"type": "reflection",
							"declaration": {
								"id": 59610,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 66,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L66"
									}
								],
								"signatures": [
									{
										"id": 59611,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 67,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L67"
											}
										],
										"type": {
											"type": "conditional",
											"checkType": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 59637,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 59612,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "never"
											},
											"trueType": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 59613,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59614,
																	"name": " $$type",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 53,
																			"character": 21,
																			"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": "void"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		59614
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 91,
																	"character": 4,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L91"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 59606,
														"name": "Void",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reference",
														"target": 59638,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59606,
																"name": "Void",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 59615,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59616,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 59617,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 59618,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 59619,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 59620,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												59620
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 59773,
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 59643,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 59606,
																						"name": "Void",
																						"package": "@medusajs/workflows-sdk"
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		59616
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 59594,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59637,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											},
											"falseType": {
												"type": "intersection",
												"types": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 59637,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																	"qualifiedName": "Item"
																},
																"name": "Item",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "Item"
																		},
																		"name": "Item",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 59643,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																					"qualifiedName": "Item"
																				},
																				"name": "Item",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": 59637,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "intrinsic",
																"name": "object"
															},
															"trueType": {
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "unknown",
																				"name": "..."
																			},
																			"objectType": {
																				"type": "unknown",
																				"name": "..."
																			}
																		},
																		{
																			"type": "reference",
																			"target": 59643,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	]
																}
															},
															"falseType": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 59637,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 59638,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 59637,
																				"name": "TOutput",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowDataProperties",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													},
													{
														"type": "reference",
														"target": 59637,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 59638,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59637,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 59621,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59622,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 59623,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 59624,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 59625,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 59626,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												59626
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 59773,
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 59643,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 59637,
																						"name": "TOutput",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		59622
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 59594,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59637,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									}
								]
							}
						},
						"falseType": {
							"type": "reflection",
							"declaration": {
								"id": 59627,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 72,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L72"
									}
								],
								"signatures": [
									{
										"id": 59628,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 73,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L73"
											}
										],
										"parameters": [
											{
												"id": 59629,
												"name": "input",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 59636,
															"name": "TInput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": 59643,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 59636,
																	"name": "TInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										],
										"type": {
											"type": "intersection",
											"types": [
												{
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 59637,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "Item"
															},
															"name": "Item",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"trueType": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																		"qualifiedName": "Item"
																	},
																	"name": "Item",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 59643,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Item"
																			},
																			"name": "Item",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 59637,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 59637,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	},
																	{
																		"type": "reference",
																		"target": 59643,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "unknown",
																					"name": "..."
																				},
																				"objectType": {
																					"type": "unknown",
																					"name": "..."
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": 59637,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 59638,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 59637,
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowDataProperties",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													}
												},
												{
													"type": "reference",
													"target": 59637,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": 59638,
													"typeArguments": [
														{
															"type": "reference",
															"target": 59637,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "WorkflowDataProperties",
													"package": "@medusajs/workflows-sdk"
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 59630,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 59631,
																"name": "config",
																"variant": "declaration",
																"kind": 2048,
																"flags": {},
																"sources": [
																	{
																		"fileName": "workflows-sdk/src/utils/composer/type.ts",
																		"line": 97,
																		"character": 4,
																		"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																	}
																],
																"signatures": [
																	{
																		"id": 59632,
																		"name": "config",
																		"variant": "signature",
																		"kind": 4096,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "workflows-sdk/src/utils/composer/type.ts",
																				"line": 97,
																				"character": 4,
																				"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																			}
																		],
																		"parameters": [
																			{
																				"id": 59633,
																				"name": "config",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intersection",
																					"types": [
																						{
																							"type": "reflection",
																							"declaration": {
																								"id": 59634,
																								"name": "__type",
																								"variant": "declaration",
																								"kind": 65536,
																								"flags": {},
																								"children": [
																									{
																										"id": 59635,
																										"name": "name",
																										"variant": "declaration",
																										"kind": 1024,
																										"flags": {
																											"isOptional": true
																										},
																										"sources": [
																											{
																												"fileName": "workflows-sdk/src/utils/composer/type.ts",
																												"line": 98,
																												"character": 16,
																												"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																											}
																										],
																										"type": {
																											"type": "intrinsic",
																											"name": "string"
																										}
																									}
																								],
																								"groups": [
																									{
																										"title": "Properties",
																										"children": [
																											59635
																										]
																									}
																								],
																								"sources": [
																									{
																										"fileName": "workflows-sdk/src/utils/composer/type.ts",
																										"line": 98,
																										"character": 14,
																										"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																									}
																								]
																							}
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Omit"
																							},
																							"typeArguments": [
																								{
																									"type": "reference",
																									"target": 59773,
																									"name": "TransactionStepsDefinition",
																									"package": "@medusajs/orchestration"
																								},
																								{
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": "next"
																										},
																										{
																											"type": "literal",
																											"value": "uuid"
																										},
																										{
																											"type": "literal",
																											"value": "action"
																										}
																									]
																								}
																							],
																							"name": "Omit",
																							"package": "typescript"
																						}
																					]
																				}
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 59643,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 59637,
																					"name": "TOutput",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																]
															}
														],
														"groups": [
															{
																"title": "Methods",
																"children": [
																	59631
																]
															}
														],
														"sources": [
															{
																"fileName": "workflows-sdk/src/utils/composer/type.ts",
																"line": 96,
																"character": 30,
																"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
															}
														]
													}
												},
												{
													"type": "reference",
													"target": 59594,
													"typeArguments": [
														{
															"type": "reference",
															"target": 59637,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "StepFunctionReturnConfig",
													"package": "@medusajs/workflows-sdk"
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 59638,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59637,
								"name": "TOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					}
				]
			}
		},
		{
			"id": 59638,
			"name": "WorkflowDataProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 78,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
				}
			],
			"typeParameters": [
				{
					"id": 59642,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59639,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59640,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L79"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59641,
							"name": "__step__",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59640,
								59641
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 78,
							"character": 50,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
						}
					]
				}
			}
		},
		{
			"id": 59643,
			"name": "WorkflowData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This type is used to encapsulate the input or output type of all utils."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 88,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L88"
				}
			],
			"typeParameters": [
				{
					"id": 59650,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of a step's input or result."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 59650,
							"name": "T",
							"package": "@medusajs/workflows-sdk",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "array",
							"elementType": {
								"type": "inferred",
								"name": "Item"
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "Item"
										},
										"name": "Item",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59643,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Item"
												},
												"name": "Item",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 59650,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "mapped",
								"parameter": "Key",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 59650,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 59650,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 59643,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 59650,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							"falseType": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 59650,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59638,
										"typeArguments": [
											{
												"type": "reference",
												"target": 59650,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowDataProperties",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 59650,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 59638,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59650,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59644,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59645,
									"name": "config",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 97,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
										}
									],
									"signatures": [
										{
											"id": 59646,
											"name": "config",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 97,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
												}
											],
											"parameters": [
												{
													"id": 59647,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 59648,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 59649,
																			"name": "name",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 98,
																					"character": 16,
																					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				59649
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 98,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Omit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 59773,
																		"name": "TransactionStepsDefinition",
																		"package": "@medusajs/orchestration"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "next"
																			},
																			{
																				"type": "literal",
																				"value": "uuid"
																			},
																			{
																				"type": "literal",
																				"value": "action"
																			}
																		]
																	}
																],
																"name": "Omit",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 59643,
												"typeArguments": [
													{
														"type": "reference",
														"target": 59650,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										59645
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 96,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59651,
			"name": "CreateWorkflowComposerContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 105,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59652,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59653,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59654,
							"name": "hooks_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 107,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59655,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 59656,
											"name": "declared",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 108,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L108"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 59657,
											"name": "registered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 109,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L109"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												59656,
												59657
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 107,
											"character": 10,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
										}
									]
								}
							}
						},
						{
							"id": 59658,
							"name": "hooksCallback_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L111"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 59602,
										"name": "HookHandler",
										"package": "@medusajs/workflows-sdk"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 59659,
							"name": "workflowId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L112"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59660,
							"name": "flow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L113"
								}
							],
							"type": {
								"type": "reference",
								"target": 59830,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 59661,
							"name": "isAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 114,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L114"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59662,
							"name": "handlers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L115"
								}
							],
							"type": {
								"type": "reference",
								"target": 59919,
								"name": "WorkflowHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 59663,
							"name": "overriddenHandler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L116"
								}
							],
							"type": {
								"type": "reference",
								"target": 59919,
								"name": "WorkflowHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 59664,
							"name": "stepBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L117"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59665,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 117,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L117"
										}
									],
									"signatures": [
										{
											"id": 59666,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 59668,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 59667,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 59589,
														"name": "StepFunctionResult",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 59643,
												"typeArguments": [
													{
														"type": "reference",
														"target": 59668,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							}
						},
						{
							"id": 59669,
							"name": "hookBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 120,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59670,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 120,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
										}
									],
									"signatures": [
										{
											"id": 59671,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 59672,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59673,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59674,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 120,
																	"character": 33,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
																}
															],
															"signatures": [
																{
																	"id": 59675,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 59602,
																		"name": "HookHandler",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 59676,
							"name": "stepConditions_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L121"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 59677,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59678,
													"name": "condition",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 124,
															"character": 6,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L124"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59679,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 124,
																	"character": 17,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L124"
																}
															],
															"signatures": [
																{
																	"id": 59680,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 59681,
																			"name": "args",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "reference",
																				"target": 59643,
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"id": 59682,
													"name": "input",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 125,
															"character": 6,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L125"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59678,
														59682
													]
												}
											],
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 123,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L123"
												}
											]
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 59683,
							"name": "parallelizeBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 128,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L128"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59684,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 128,
											"character": 21,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L128"
										}
									],
									"signatures": [
										{
											"id": 59685,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 59690,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": 59643,
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																},
																{
																	"type": "intrinsic",
																	"name": "undefined"
																}
															]
														}
													},
													"default": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 59643,
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													}
												}
											],
											"parameters": [
												{
													"id": 59686,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59687,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 131,
																	"character": 8,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L131"
																}
															],
															"signatures": [
																{
																	"id": 59688,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 59689,
																			"name": "this",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 59651,
																				"name": "CreateWorkflowComposerContext",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 59690,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 59690,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59653,
								59654,
								59658,
								59659,
								59660,
								59661,
								59662,
								59663,
								59664,
								59669,
								59676,
								59683
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 105,
							"character": 44,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
						}
					]
				}
			}
		},
		{
			"id": 59691,
			"name": "StepExecutionContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The step's context."
					}
				]
			},
			"children": [
				{
					"id": 59692,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the workflow."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 142,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L142"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59693,
					"name": "attempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attempt number of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 147,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L147"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 59694,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 152,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L152"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59695,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the parent step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 157,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L157"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59696,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to prevent release events."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 162,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L162"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59697,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 167,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L167"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59698,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The action of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 172,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L172"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "invoke"
							},
							{
								"type": "literal",
								"value": "compensate"
							}
						]
					}
				},
				{
					"id": 59699,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The container used to access resources, such as services, in the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 177,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L177"
						}
					],
					"type": {
						"type": "reference",
						"target": 59923,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 59700,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata passed in the input."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 181,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L181"
						}
					],
					"type": {
						"type": "reference",
						"target": 59944,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59701,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "inline-tag",
								"tag": "@inheritDoc",
								"text": "types!Context"
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 185,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L185"
						}
					],
					"type": {
						"type": "reference",
						"target": 59952,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 59702,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 189,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L189"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59703,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 193,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L193"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59704,
					"name": "runId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current run."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 198,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59705,
					"name": " getStepResult",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 206,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L206"
						}
					],
					"signatures": [
						{
							"id": 59706,
							"name": " getStepResult",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get access to the result returned by a named step. Returns undefined\nwhen step is not found or when nothing was returned.\n\nAdding a space hides the method from the autocomplete"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 206,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L206"
								}
							],
							"parameters": [
								{
									"id": 59707,
									"name": "stepId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59708,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 59709,
					"name": " stepDefinition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get access to the definition of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 211,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L211"
						}
					],
					"type": {
						"type": "reference",
						"target": 59773,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59692,
						59693,
						59694,
						59695,
						59696,
						59697,
						59698,
						59699,
						59700,
						59701,
						59702,
						59703,
						59704,
						59709
					]
				},
				{
					"title": "Methods",
					"children": [
						59705
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 138,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L138"
				}
			]
		},
		{
			"id": 59710,
			"name": "WorkflowTransactionContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 214,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L214"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 59691,
						"name": "StepExecutionContext",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reference",
						"target": 59969,
						"name": "OriginalWorkflowTransactionContext",
						"package": "@medusajs/orchestration",
						"qualifiedName": "TransactionContext"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59711,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59712,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 216,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L216"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59713,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 216,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L216"
												}
											],
											"indexSignatures": [
												{
													"id": 59714,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 216,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L216"
														}
													],
													"parameters": [
														{
															"id": 59715,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59716,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59717,
																	"name": "output",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 216,
																			"character": 31,
																			"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L216"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		59717
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 216,
																	"character": 29,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L216"
																}
															]
														}
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59712
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 215,
									"character": 39,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L215"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59718,
			"name": "ReturnWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An exported workflow, which is the type of a workflow constructed by the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "createWorkflow",
						"target": 59445
					},
					{
						"kind": "text",
						"text": " function. The exported workflow can be invoked to create\nan executable workflow, optionally within a specified container. So, to execute the workflow, you must invoke the exported workflow, then run the\n"
					},
					{
						"kind": "code",
						"text": "`run`"
					},
					{
						"kind": "text",
						"text": " method of the exported workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "To execute a workflow:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nmyWorkflow()\n  .run({\n    input: {\n      name: \"John\"\n    }\n  })\n  .then(({ result }) => {\n    console.log(result)\n  })\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo specify the container of the workflow, you can pass it as an argument to the call of the exported workflow. This is necessary when executing the workflow\nwithin a Medusa resource such as an API Route or a Subscriber.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport type {\n  MedusaRequest,\n  MedusaResponse\n} from \"@medusajs/medusa\";\nimport myWorkflow from \"../../../workflows/hello-world\";\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        name: req.query.name as string\n      }\n    })\n\n  res.send(result)\n}\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 266,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L266"
				}
			],
			"typeParameters": [
				{
					"id": 59748,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59749,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59750,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 59719,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 266,
									"character": 67,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L266"
								}
							],
							"signatures": [
								{
									"id": 59720,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 267,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L267"
										}
									],
									"typeParameters": [
										{
											"id": 59721,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 59722,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 59723,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 59923,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 59724,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 59725,
																		"name": "__joinerConfig",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 90,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 59978,
																			"name": "ModuleJoinerConfig",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"id": 59726,
																		"name": "__definition",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 91,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 60004,
																			"name": "ModuleDefinition",
																			"package": "@medusajs/types"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			59725,
																			59726
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "types/dist/modules-sdk/index.d.ts",
																		"line": 89,
																		"character": 37
																	}
																]
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60015,
														"name": "LocalWorkflow",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "run"
															},
															{
																"type": "literal",
																"value": "registerStepSuccess"
															},
															{
																"type": "literal",
																"value": "registerStepFailure"
															},
															{
																"type": "literal",
																"value": "cancel"
															},
															{
																"type": "literal",
																"value": "retryStep"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 60144,
												"typeArguments": [
													{
														"type": "reference",
														"target": 59748,
														"name": "TData",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 59749,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 59721,
														"name": "TDataOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 59722,
														"name": "TResultOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ExportedWorkflow",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59727,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59728,
									"name": "runAsStep",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/execute-another-workflow)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 287,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L287"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59729,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 287,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L287"
												}
											],
											"signatures": [
												{
													"id": 59730,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The workflow's result"
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 59731,
															"name": "{\n    input,\n  }",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 59732,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 59733,
																			"name": "input",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The workflow's input."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 293,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L293"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"target": 59748,
																						"name": "TData",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					},
																					{
																						"type": "reference",
																						"target": 59643,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 59748,
																								"name": "TData",
																								"package": "@medusajs/workflows-sdk",
																								"refersToTypeParameter": true
																							}
																						],
																						"name": "WorkflowData",
																						"package": "@medusajs/workflows-sdk"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				59733
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 289,
																			"character": 5,
																			"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L289"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 59609,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 59748,
																		"name": "TData",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 59749,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "StepFunction",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 59734,
									"name": "run",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes a workflow."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 301,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L301"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59735,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 301,
													"character": 7,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L301"
												}
											],
											"signatures": [
												{
													"id": 59736,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "Details of the workflow's execution, including its result."
																	}
																]
															}
														]
													},
													"typeParameters": [
														{
															"id": 59738,
															"name": "TDataOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 59739,
															"name": "TResultOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														}
													],
													"parameters": [
														{
															"id": 59737,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The options to execute the workflow."
																	}
																]
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Parameters"
																},
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "run"
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 60144,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 59748,
																					"name": "TData",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 59749,
																					"name": "TResult",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 59738,
																					"name": "TDataOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 59739,
																					"name": "TResultOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "ExportedWorkflow",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																],
																"name": "Parameters",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "run"
																},
																"objectType": {
																	"type": "reference",
																	"target": 60144,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 59748,
																			"name": "TData",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 59749,
																			"name": "TResult",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 59738,
																			"name": "TDataOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 59739,
																			"name": "TResultOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "ExportedWorkflow",
																	"package": "@medusajs/workflows-sdk"
																}
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 59740,
									"name": "getName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the workflow's name."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 311,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L311"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59741,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 311,
													"character": 11,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L311"
												}
											],
											"signatures": [
												{
													"id": 59742,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 59743,
									"name": "config",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method sets the workflow's configurations."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 315,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L315"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59744,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 315,
													"character": 10,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L315"
												}
											],
											"signatures": [
												{
													"id": 59745,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 59746,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 59793,
																"name": "TransactionModelOptions",
																"package": "@medusajs/orchestration"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 59747,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks#how-to-consume-a-hook)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 321,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L321"
										}
									],
									"type": {
										"type": "reference",
										"target": 60170,
										"typeArguments": [
											{
												"type": "reference",
												"target": 59750,
												"name": "THooks",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "ConvertHooksToFunctions",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59728,
										59734,
										59740,
										59743,
										59747
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 278,
									"character": 4,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L278"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59751,
			"name": "UnwrapWorkflowInputDataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Extract the raw type of the expected input data of a workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\ntype WorkflowInputData = UnwrapWorkflowInputDataType<typeof myWorkflow>\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 330,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/workflows-sdk/src/utils/composer/type.ts#L330"
				}
			],
			"typeParameters": [
				{
					"id": 59752,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 59718,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 59752,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 59718,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "TData"
						},
						{
							"type": "inferred",
							"name": "R"
						},
						{
							"type": "inferred",
							"name": "THooks"
						}
					],
					"name": "ReturnWorkflow",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
						"qualifiedName": "TData"
					},
					"name": "TData",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 60173,
			"name": "ConditionFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
					"line": 7,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 60179,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 59643,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60174,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
							"line": 7,
							"character": 58
						}
					],
					"signatures": [
						{
							"id": 60175,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 60176,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 60179,
											"name": "T",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 59643,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 60179,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 60179,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 60179,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 59643,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 60179,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 60177,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
															"line": 12,
															"character": 6
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 60178,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59691,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 60180,
			"name": "ThenFunc",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
					"line": 16,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60181,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
							"line": 16,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 60182,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 60184,
									"name": "ThenResolver",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60185,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
													"line": 16,
													"character": 38
												}
											],
											"signatures": [
												{
													"id": 60186,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"parameters": [
								{
									"id": 60183,
									"name": "resolver",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60184,
										"name": "ThenResolver",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "ReturnType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 60184,
											"name": "ThenResolver",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "ReturnType",
									"package": "typescript"
								},
								"extendsType": {
									"type": "reference",
									"target": 59643,
									"typeArguments": [
										{
											"type": "inferred",
											"name": "ReturnedWorkflowData"
										}
									],
									"name": "WorkflowData",
									"package": "@medusajs/workflows-sdk"
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 59643,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
														"qualifiedName": "ReturnedWorkflowData"
													},
													"name": "ReturnedWorkflowData",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "intrinsic",
											"name": "undefined"
										}
									]
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "ReturnType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 60184,
											"name": "ThenResolver",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "ReturnType",
									"package": "typescript"
								}
							}
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				60243,
				60978,
				60998,
				61009
			]
		},
		{
			"title": "Classes",
			"children": [
				59969,
				60969,
				60922,
				61049,
				60411,
				60212,
				59801,
				59830,
				60614,
				60548,
				60015,
				59461,
				59491
			]
		},
		{
			"title": "Interfaces",
			"children": [
				60879,
				60221,
				60308,
				60242,
				60831,
				60260,
				61061,
				60814,
				60246,
				59952,
				59435,
				59691
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				59944,
				60870,
				59773,
				59793,
				60204,
				60328,
				61016,
				61015,
				60936,
				60324,
				59919,
				60187,
				59769,
				59923,
				61058,
				61024,
				60810,
				60821,
				60836,
				61042,
				60846,
				60286,
				60296,
				60004,
				60994,
				61035,
				61030,
				60280,
				59978,
				60275,
				60852,
				60986,
				60514,
				60518,
				60529,
				60523,
				60532,
				60508,
				60144,
				59517,
				59418,
				59426,
				59432,
				59813,
				59821,
				59589,
				59594,
				59828,
				59602,
				60541,
				60170,
				59606,
				59609,
				59638,
				59643,
				59651,
				59710,
				59718,
				59751,
				60173,
				60180
			]
		},
		{
			"title": "Variables",
			"children": [
				59812
			]
		},
		{
			"title": "Functions",
			"children": [
				59507,
				59390,
				59408,
				59445,
				59457,
				59528,
				59532
			]
		}
	],
	"packageName": "@medusajs/workflows-sdk",
	"symbolIdMap": {
		"59389": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts",
			"qualifiedName": ""
		},
		"59390": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "applyStep"
		},
		"59391": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "applyStep"
		},
		"59392": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeInput"
		},
		"59393": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TStepInput"
		},
		"59394": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultOutput"
		},
		"59395": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultCompensateInput"
		},
		"59396": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__0"
		},
		"59408": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"59409": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"59410": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeInput"
		},
		"59411": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultOutput"
		},
		"59412": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultCompensateInput"
		},
		"59413": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "nameOrConfig"
		},
		"59414": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59415": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"59416": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "invokeFn"
		},
		"59417": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "compensateFn"
		},
		"59418": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "InvokeFn"
		},
		"59419": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59420": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59421": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"59422": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"59423": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInput"
		},
		"59424": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TOutput"
		},
		"59425": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TCompensateInput"
		},
		"59426": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "CompensateFn"
		},
		"59427": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59428": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59429": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"59430": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"59431": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "T"
		},
		"59432": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "LocalStepConfig"
		},
		"59433": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59434": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"59435": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions"
		},
		"59436": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepName"
		},
		"59437": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepConfig"
		},
		"59438": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.input"
		},
		"59439": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.invokeFn"
		},
		"59440": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.compensateFn"
		},
		"59441": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TStepInputs"
		},
		"59442": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeInput"
		},
		"59443": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultOutput"
		},
		"59444": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput"
		},
		"59445": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"59446": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"59447": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TData"
		},
		"59448": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TResult"
		},
		"59449": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "THooks"
		},
		"59450": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "nameOrConfig"
		},
		"59451": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"59452": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type.name"
		},
		"59453": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "composer"
		},
		"59454": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"59455": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"59456": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "input"
		},
		"59457": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
			"qualifiedName": "resolveValue"
		},
		"59458": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
			"qualifiedName": "resolveValue"
		},
		"59459": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
			"qualifiedName": "input"
		},
		"59460": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
			"qualifiedName": "transactionContext"
		},
		"59461": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"59462": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"59463": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"59464": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "message"
		},
		"59465": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"59466": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"59467": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"59468": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.__constructor"
		},
		"59469": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"59470": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"59471": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"59472": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "output"
		},
		"59473": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"59489": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"59490": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"59491": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"59492": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__constructor"
		},
		"59493": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"59494": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"59495": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"59496": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "$result"
		},
		"59497": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "options"
		},
		"59498": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"59499": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"59500": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__type"
		},
		"59501": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.$result"
		},
		"59502": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.options"
		},
		"59503": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"59504": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"59505": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"59506": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"59507": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"59508": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"59509": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"59510": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeInput"
		},
		"59511": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeOutput"
		},
		"59512": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "name"
		},
		"59513": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "hookInput"
		},
		"59514": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "options"
		},
		"59515": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"59516": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.resultValidator"
		},
		"59517": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Hook"
		},
		"59518": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"59519": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.__type"
		},
		"59520": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.name"
		},
		"59521": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"59522": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"59523": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. output"
		},
		"59524": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. input"
		},
		"59525": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"59526": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Input"
		},
		"59527": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Output"
		},
		"59528": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"59529": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"59530": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "TResult"
		},
		"59531": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "steps"
		},
		"59532": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"59533": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"59534": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"59535": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "RFinal"
		},
		"59536": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "values"
		},
		"59537": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "func"
		},
		"59589": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionResult"
		},
		"59590": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59591": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59592": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"59593": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"59594": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionReturnConfig"
		},
		"59595": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59596": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59597": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59598": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59599": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59600": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59601": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"59602": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "HookHandler"
		},
		"59603": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59604": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59605": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"59606": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "Void"
		},
		"59607": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59608": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type. $$type"
		},
		"59609": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunction"
		},
		"59610": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59611": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59612": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"59613": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59614": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": " $$type"
		},
		"59615": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59616": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59617": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59618": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59619": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59620": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59621": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59622": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59623": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59624": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59625": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59626": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59627": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59628": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59629": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"59630": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59631": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59632": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59633": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59634": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59635": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59636": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TInput"
		},
		"59637": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"59638": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowDataProperties"
		},
		"59639": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59640": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"59641": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"59642": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"59643": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowData"
		},
		"59644": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59645": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59646": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59647": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59648": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59649": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59650": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"59651": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "CreateWorkflowComposerContext"
		},
		"59652": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59653": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"59654": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks_"
		},
		"59655": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59656": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.declared"
		},
		"59657": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.registered"
		},
		"59658": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooksCallback_"
		},
		"59659": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.workflowId"
		},
		"59660": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.flow"
		},
		"59661": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.isAsync"
		},
		"59662": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.handlers"
		},
		"59663": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.overriddenHandler"
		},
		"59664": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.stepBinder"
		},
		"59665": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59666": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59667": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"59668": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"59669": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hookBinder"
		},
		"59670": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59671": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59672": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "name"
		},
		"59673": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"59674": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59675": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59676": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.stepConditions_"
		},
		"59677": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59678": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.condition"
		},
		"59679": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59680": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59681": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"59682": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"59683": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.parallelizeBinder"
		},
		"59684": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59685": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59686": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"59687": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59688": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59689": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"59690": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"59691": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext"
		},
		"59692": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.workflowId"
		},
		"59693": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.attempt"
		},
		"59694": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.idempotencyKey"
		},
		"59695": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.parentStepIdempotencyKey"
		},
		"59696": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.preventReleaseEvents"
		},
		"59697": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.stepName"
		},
		"59698": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.action"
		},
		"59699": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.container"
		},
		"59700": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.metadata"
		},
		"59701": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.context"
		},
		"59702": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.eventGroupId"
		},
		"59703": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.transactionId"
		},
		"59704": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.runId"
		},
		"59705": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"59706": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"59707": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "stepId"
		},
		"59708": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "action"
		},
		"59709": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. stepDefinition"
		},
		"59710": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowTransactionContext"
		},
		"59711": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59712": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.invoke"
		},
		"59713": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59714": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__index"
		},
		"59716": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59717": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.output"
		},
		"59718": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ReturnWorkflow"
		},
		"59719": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59720": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59721": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"59722": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"59723": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"59724": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59725": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"59726": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"59727": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59728": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"59729": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59730": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59732": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59733": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"59734": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"59735": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59736": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59737": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"59738": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"59739": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"59740": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"59741": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59742": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59743": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59744": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59745": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59746": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59747": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"59748": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TData"
		},
		"59749": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResult"
		},
		"59750": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"59751": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "UnwrapWorkflowInputDataType"
		},
		"59752": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"59769": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowStepHandler"
		},
		"59770": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"59771": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"59772": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "args"
		},
		"59773": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionStepsDefinition"
		},
		"59774": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59775": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.uuid"
		},
		"59776": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.action"
		},
		"59777": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"59778": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.skipOnPermanentFailure"
		},
		"59779": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"59780": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"59781": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.autoRetry"
		},
		"59782": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"59783": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryIntervalAwaiting"
		},
		"59784": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxAwaitingRetries"
		},
		"59785": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"59786": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.async"
		},
		"59787": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.nested"
		},
		"59788": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.backgroundExecution"
		},
		"59789": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.compensateAsync"
		},
		"59790": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noWait"
		},
		"59791": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"59792": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.next"
		},
		"59793": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionModelOptions"
		},
		"59794": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59795": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"59796": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.store"
		},
		"59797": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retentionTime"
		},
		"59798": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.storeExecution"
		},
		"59799": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.idempotent"
		},
		"59800": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.schedule"
		},
		"59801": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse"
		},
		"59802": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.isSkipStepResponse"
		},
		"59803": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.isSkipStepResponse"
		},
		"59804": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "error"
		},
		"59805": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.__constructor"
		},
		"59806": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse"
		},
		"59807": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "message"
		},
		"59808": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "stepResponse"
		},
		"59809": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.#private"
		},
		"59810": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"59811": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"59812": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/symbol.ts",
			"qualifiedName": "SymbolWorkflowHook"
		},
		"59813": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func1"
		},
		"59814": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"59815": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"59816": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"59817": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"59818": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"59819": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"59820": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"59821": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func"
		},
		"59822": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"59823": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"59824": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"59825": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"59826": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"59827": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"59828": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "KeysOfUnion"
		},
		"59829": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"59830": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"59831": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.__constructor"
		},
		"59832": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"59833": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"59834": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.steps"
		},
		"59835": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges_"
		},
		"59836": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"59837": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"59838": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"59839": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"59840": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"59841": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"59842": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"59843": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59844": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"59845": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"59846": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"59847": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"59848": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59849": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"59850": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"59851": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"59852": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"59853": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59854": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"59855": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"59856": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"59857": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"59858": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59859": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"59860": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"59861": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"59862": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"59863": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "newStep"
		},
		"59864": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"59865": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"59866": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59867": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "to"
		},
		"59868": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"59869": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"59870": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"59871": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"59872": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"59873": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__2"
		},
		"59874": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type"
		},
		"59875": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type.runInParallel"
		},
		"59876": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type.mergeNext"
		},
		"59877": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"59878": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"59879": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"59880": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"59881": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"59882": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"59883": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"59884": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"59885": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"59886": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"59887": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "where"
		},
		"59888": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actions"
		},
		"59889": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"59890": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"59891": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59892": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"59893": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"59894": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"59895": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59896": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"59897": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"59898": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59899": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"59900": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"59901": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"59902": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59903": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"59904": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"59905": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"59906": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59907": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"59908": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"59909": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"59910": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"59911": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"59912": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"59913": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "startingStep"
		},
		"59914": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "parent"
		},
		"59915": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "incr"
		},
		"59916": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "beginFrom"
		},
		"59917": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"59918": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"59919": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowHandler"
		},
		"59920": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"59921": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"59922": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"59923": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"59924": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"59925": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"59926": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"59927": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"59928": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"59929": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"59930": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"59931": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"59932": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"59933": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"59934": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"59935": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"59936": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"59937": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "name"
		},
		"59938": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "registration"
		},
		"59939": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"59940": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.createScope"
		},
		"59941": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"59942": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"59943": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"59944": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionMetadata"
		},
		"59945": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"59946": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.model_id"
		},
		"59947": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"59948": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.action"
		},
		"59949": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.action_type"
		},
		"59950": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.attempt"
		},
		"59951": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.timestamp"
		},
		"59952": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"59953": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"59954": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"59955": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"59956": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"59957": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"59958": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"59959": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"59960": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.runId"
		},
		"59961": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"59962": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"59963": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"59964": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"59965": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"59966": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"59967": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.cancelingFromParentStep"
		},
		"59968": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"59969": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext"
		},
		"59970": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.__constructor"
		},
		"59971": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext"
		},
		"59972": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "payload"
		},
		"59973": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "invoke"
		},
		"59974": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "compensate"
		},
		"59975": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.payload"
		},
		"59976": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.invoke"
		},
		"59977": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.compensate"
		},
		"59978": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"59979": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59980": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"59981": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefixToEntityName"
		},
		"59982": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"59983": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"59984": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59985": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"59986": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"59987": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"59988": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59989": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"59990": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"59991": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"59992": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"59993": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"59994": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"59995": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"59996": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"59997": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"59998": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"59999": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"60000": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60001": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"60002": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"60003": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"60004": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"60005": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60006": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"60007": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"60008": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"60009": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolvePath"
		},
		"60010": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"60011": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"60012": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"60013": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__passSharedContainer"
		},
		"60014": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"60015": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"60016": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.__constructor"
		},
		"60017": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"60018": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "workflowId"
		},
		"60019": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "modulesLoaded"
		},
		"60020": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60021": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"60022": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"60023": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container_"
		},
		"60024": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.workflowId"
		},
		"60025": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.flow"
		},
		"60026": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.customOptions"
		},
		"60027": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.workflow"
		},
		"60028": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.handlers"
		},
		"60029": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.medusaContext"
		},
		"60030": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"60031": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"60032": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"60033": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "modulesLoaded"
		},
		"60034": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60035": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"60036": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"60037": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.resolveContainer"
		},
		"60038": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.contextualizedMedusaModules"
		},
		"60039": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"60040": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"60041": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"60042": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"60043": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerEventCallbacks"
		},
		"60044": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"60045": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"60046": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"60047": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "input"
		},
		"60048": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"60049": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"60050": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "flowMetadata"
		},
		"60051": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60052": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"60053": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"60054": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cancelingFromParentStep"
		},
		"60055": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"60056": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"60057": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"60058": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"60060": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getRunningTransaction"
		},
		"60061": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getRunningTransaction"
		},
		"60062": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"60063": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"60064": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.cancel"
		},
		"60065": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.cancel"
		},
		"60066": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "transactionOrTransactionId"
		},
		"60067": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "_"
		},
		"60068": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"60069": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"60070": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.retryStep"
		},
		"60071": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.retryStep"
		},
		"60072": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"60073": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"60074": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"60075": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"60076": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"60077": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"60078": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "response"
		},
		"60079": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"60080": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"60081": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"60082": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"60083": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"60084": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "error"
		},
		"60085": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"60086": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"60087": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "forcePermanentFailure"
		},
		"60088": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.setOptions"
		},
		"60089": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.setOptions"
		},
		"60090": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"60091": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"60092": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"60093": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60094": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60095": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"60096": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"60097": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"60098": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"60099": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60100": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60101": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"60102": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"60103": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"60104": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"60105": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60106": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60107": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"60108": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"60109": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"60110": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"60111": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60112": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60113": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"60114": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"60115": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"60116": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60117": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "to"
		},
		"60118": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60119": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"60120": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"60121": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"60122": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actionToMove"
		},
		"60123": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "targetAction"
		},
		"60124": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"60125": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"60126": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actionToMove"
		},
		"60127": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "targetAction"
		},
		"60128": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"60129": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"60130": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "where"
		},
		"60131": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actions"
		},
		"60132": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"60133": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"60134": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60135": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "parentSteps"
		},
		"60136": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"60137": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"60138": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60139": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"60140": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"60141": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60142": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60143": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.onLoad"
		},
		"60144": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "ExportedWorkflow"
		},
		"60145": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60146": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.run"
		},
		"60147": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60148": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60149": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"60150": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.registerStepSuccess"
		},
		"60151": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60152": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60153": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"60154": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.registerStepFailure"
		},
		"60155": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60156": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60157": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"60158": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.retryStep"
		},
		"60159": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60160": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60161": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"60162": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.cancel"
		},
		"60163": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60164": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60165": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"60166": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"60167": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResult"
		},
		"60168": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"60169": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"60170": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ConvertHooksToFunctions"
		},
		"60171": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"60172": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"60173": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ConditionFunction"
		},
		"60174": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60175": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60176": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "input"
		},
		"60177": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60178": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "context"
		},
		"60179": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "T"
		},
		"60180": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ThenFunc"
		},
		"60181": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60182": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60183": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "resolver"
		},
		"60184": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ThenResolver"
		},
		"60185": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60186": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60187": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowStepHandlerArguments"
		},
		"60188": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60189": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.container"
		},
		"60190": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.payload"
		},
		"60191": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"60192": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60193": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.__index"
		},
		"60195": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"60196": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60197": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.__index"
		},
		"60199": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.metadata"
		},
		"60200": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.transaction"
		},
		"60201": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.step"
		},
		"60202": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.orchestrator"
		},
		"60203": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.context"
		},
		"60204": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "SchedulerOptions"
		},
		"60205": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60206": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.concurrency"
		},
		"60207": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.numberOfExecutions"
		},
		"60208": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60209": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cron"
		},
		"60210": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60211": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.interval"
		},
		"60212": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror"
		},
		"60213": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.__constructor"
		},
		"60214": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror"
		},
		"60215": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "name"
		},
		"60216": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "message"
		},
		"60217": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "stepResponse"
		},
		"60218": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.#private"
		},
		"60219": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"60220": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"60221": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep"
		},
		"60222": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.next"
		},
		"60223": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.depth"
		},
		"60224": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.parent"
		},
		"60225": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.uuid"
		},
		"60226": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.action"
		},
		"60227": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"60228": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.skipOnPermanentFailure"
		},
		"60229": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"60230": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"60231": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.autoRetry"
		},
		"60232": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"60233": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryIntervalAwaiting"
		},
		"60234": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxAwaitingRetries"
		},
		"60235": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"60236": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.async"
		},
		"60237": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.nested"
		},
		"60238": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.backgroundExecution"
		},
		"60239": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.compensateAsync"
		},
		"60240": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noWait"
		},
		"60241": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"60242": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ModuleImplementations"
		},
		"60243": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType"
		},
		"60244": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.INVOKE"
		},
		"60245": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.COMPENSATE"
		},
		"60246": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"60247": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"60248": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"60249": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"60250": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"60251": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"60252": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"60253": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"60254": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"60255": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"60256": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"60257": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"60258": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"60259": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"60260": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"60261": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"60262": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"60263": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"60264": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"60265": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"60266": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"60267": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"60268": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"60269": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"60270": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"60271": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"60272": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"60273": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"60274": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"60275": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"60276": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60277": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"60278": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.filterable"
		},
		"60279": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.hasMany"
		},
		"60280": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"60281": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60282": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"60283": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"60284": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"60285": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"60286": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"60287": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60288": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"60289": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"60290": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"60291": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"60292": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"60293": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"60294": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"60295": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"60296": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"60297": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60298": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"60299": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"60300": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"60301": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60302": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"60303": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"60304": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"60305": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"60306": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"60307": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"60308": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition"
		},
		"60309": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.id"
		},
		"60310": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.handler"
		},
		"60311": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60312": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60313": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "container"
		},
		"60314": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "context"
		},
		"60315": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.orchestrator"
		},
		"60316": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.flow_"
		},
		"60317": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.handlers_"
		},
		"60318": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60319": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"60320": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"60321": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.options"
		},
		"60322": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.requiredModules"
		},
		"60323": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.optionalModules"
		},
		"60324": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "StepHandler"
		},
		"60325": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type"
		},
		"60326": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type.invoke"
		},
		"60327": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type.compensate"
		},
		"60328": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "DistributedTransactionEvents"
		},
		"60329": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60330": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onBegin"
		},
		"60331": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60332": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60333": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60334": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60335": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60336": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onResume"
		},
		"60337": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60338": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60339": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60340": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60341": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60342": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onFinish"
		},
		"60343": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60344": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60345": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60346": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60347": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60348": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.result"
		},
		"60349": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.errors"
		},
		"60350": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onTimeout"
		},
		"60351": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60352": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60353": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60354": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60355": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60356": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepBegin"
		},
		"60357": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60358": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60359": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60360": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60361": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60362": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60363": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepSuccess"
		},
		"60364": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60365": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60366": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60367": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60368": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60369": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60370": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepFailure"
		},
		"60371": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60372": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60373": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60374": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60375": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60376": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60377": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepAwaiting"
		},
		"60378": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60379": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60380": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60381": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60382": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60383": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60384": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateBegin"
		},
		"60385": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60386": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60387": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60388": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60389": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60390": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateStepSuccess"
		},
		"60391": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60392": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60393": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60394": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60395": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60396": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60397": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateStepFailure"
		},
		"60398": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60399": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60400": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60401": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60402": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60403": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60404": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepSkipped"
		},
		"60405": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60406": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60407": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60408": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60409": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60410": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60411": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"60412": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.keyValueStore"
		},
		"60413": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setStorage"
		},
		"60414": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setStorage"
		},
		"60415": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "storage"
		},
		"60416": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.keyPrefix"
		},
		"60417": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"60418": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"60419": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "modelId"
		},
		"60420": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "transactionId"
		},
		"60421": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "options"
		},
		"60422": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"60423": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"60424": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.__constructor"
		},
		"60425": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"60426": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "flow"
		},
		"60427": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handler"
		},
		"60428": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "payload"
		},
		"60429": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "errors"
		},
		"60430": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"60431": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.#private"
		},
		"60432": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.flow"
		},
		"60433": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.handler"
		},
		"60434": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.payload"
		},
		"60435": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.modelId"
		},
		"60436": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.transactionId"
		},
		"60437": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.runId"
		},
		"60438": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.errors"
		},
		"60439": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.context"
		},
		"60440": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"60441": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"60442": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"60443": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"60444": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"60445": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"60446": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"60447": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"60448": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"60449": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"60450": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"60451": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "error"
		},
		"60452": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"60453": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"60454": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"60455": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"60456": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "response"
		},
		"60457": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"60458": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"60459": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"60460": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"60461": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"60462": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"60463": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"60464": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"60465": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"60466": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"60467": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTimeout"
		},
		"60468": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTimeout"
		},
		"60469": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTimeout"
		},
		"60470": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTimeout"
		},
		"60471": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"60472": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"60473": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__0"
		},
		"60474": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"60475": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.ttl"
		},
		"60476": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.parallelSteps"
		},
		"60477": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.stepId"
		},
		"60478": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type._v"
		},
		"60479": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleRetry"
		},
		"60480": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleRetry"
		},
		"60481": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"60482": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"60483": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearRetry"
		},
		"60484": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearRetry"
		},
		"60485": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"60486": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleTransactionTimeout"
		},
		"60487": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleTransactionTimeout"
		},
		"60488": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"60489": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearTransactionTimeout"
		},
		"60490": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearTransactionTimeout"
		},
		"60491": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleStepTimeout"
		},
		"60492": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleStepTimeout"
		},
		"60493": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"60494": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"60495": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearStepTimeout"
		},
		"60496": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearStepTimeout"
		},
		"60497": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"60498": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setTemporaryData"
		},
		"60499": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setTemporaryData"
		},
		"60500": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"60501": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "value"
		},
		"60502": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTemporaryData"
		},
		"60503": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTemporaryData"
		},
		"60504": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"60505": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTemporaryData"
		},
		"60506": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTemporaryData"
		},
		"60507": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"60508": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "WorkflowResult"
		},
		"60509": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60510": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.errors"
		},
		"60511": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transaction"
		},
		"60512": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.result"
		},
		"60513": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResult"
		},
		"60514": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"60515": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60516": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.input"
		},
		"60517": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"60518": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRegisterStepSuccessOptions"
		},
		"60519": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60520": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"60521": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.response"
		},
		"60522": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"60523": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRegisterStepFailureOptions"
		},
		"60524": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60525": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"60526": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.response"
		},
		"60527": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.forcePermanentFailure"
		},
		"60528": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"60529": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRetryStepOptions"
		},
		"60530": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60531": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"60532": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowCancelOptions"
		},
		"60533": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60534": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transaction"
		},
		"60535": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transactionId"
		},
		"60536": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.context"
		},
		"60537": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"60538": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.logOnError"
		},
		"60539": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.events"
		},
		"60540": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.container"
		},
		"60541": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ConvertHookToObject"
		},
		"60542": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"60543": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"60544": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "invoke"
		},
		"60545": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "compensate"
		},
		"60546": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TCompensateInput"
		},
		"60547": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THook"
		},
		"60548": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep"
		},
		"60551": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.stepFailed"
		},
		"60552": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.id"
		},
		"60553": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.uuid"
		},
		"60554": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.depth"
		},
		"60555": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.definition"
		},
		"60556": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.invoke"
		},
		"60557": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"60558": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"60559": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"60560": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.compensate"
		},
		"60561": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"60562": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"60563": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"60564": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.attempts"
		},
		"60565": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.failures"
		},
		"60566": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.temporaryFailedAt"
		},
		"60567": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.lastAttempt"
		},
		"60568": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.retryRescheduledAt"
		},
		"60569": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasScheduledRetry"
		},
		"60570": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.timedOutAt"
		},
		"60571": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.startedAt"
		},
		"60572": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.next"
		},
		"60573": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.saveResponse"
		},
		"60574": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep._v"
		},
		"60575": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"60576": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"60577": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"60578": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"60579": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"60580": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"60581": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"60582": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"60583": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"60584": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isInvoking"
		},
		"60585": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isInvoking"
		},
		"60586": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"60587": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"60588": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "toState"
		},
		"60589": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"60590": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"60591": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "toStatus"
		},
		"60592": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryScheduled"
		},
		"60593": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryScheduled"
		},
		"60594": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryInterval"
		},
		"60595": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryInterval"
		},
		"60596": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasTimeout"
		},
		"60597": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasTimeout"
		},
		"60598": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getTimeout"
		},
		"60599": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getTimeout"
		},
		"60600": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"60601": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"60602": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasAwaitingRetry"
		},
		"60603": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasAwaitingRetry"
		},
		"60604": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetryAwaiting"
		},
		"60605": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetryAwaiting"
		},
		"60606": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"60607": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"60608": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "flowState"
		},
		"60609": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"60610": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"60611": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "flowState"
		},
		"60612": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCancel"
		},
		"60613": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCancel"
		},
		"60614": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"60615": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.ROOT_STEP"
		},
		"60616": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_TTL"
		},
		"60617": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_RETRIES"
		},
		"60618": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.workflowOptions"
		},
		"60619": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getWorkflowOptions"
		},
		"60620": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getWorkflowOptions"
		},
		"60621": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "modelId"
		},
		"60622": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.traceTransaction"
		},
		"60623": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60624": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60625": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transactionResume"
		},
		"60626": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60627": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60628": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "args"
		},
		"60629": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "metadata"
		},
		"60630": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60631": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.model_id"
		},
		"60632": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction_id"
		},
		"60633": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.flow_metadata"
		},
		"60634": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60635": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"60636": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"60637": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cancelingFromParentStep"
		},
		"60638": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"60639": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"60640": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"60641": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"60643": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.traceStep"
		},
		"60644": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60645": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60646": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "handler"
		},
		"60647": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60648": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60649": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "args"
		},
		"60650": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "metadata"
		},
		"60651": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60652": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.action"
		},
		"60653": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.type"
		},
		"60654": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.step_id"
		},
		"60655": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.step_uuid"
		},
		"60656": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.attempts"
		},
		"60657": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.failures"
		},
		"60658": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.async"
		},
		"60659": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"60660": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.isExpectedError"
		},
		"60661": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.isExpectedError"
		},
		"60662": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "error"
		},
		"60663": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.clone"
		},
		"60664": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.clone"
		},
		"60665": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "orchestrator"
		},
		"60666": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.SEPARATOR"
		},
		"60667": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"60668": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"60669": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "params"
		},
		"60670": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getPreviousStep"
		},
		"60671": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.countSiblings"
		},
		"60672": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepSuccess"
		},
		"60673": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retryStep"
		},
		"60674": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"60675": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepTimeout"
		},
		"60676": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepFailure"
		},
		"60677": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.loadTransactionById"
		},
		"60678": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.buildSteps"
		},
		"60679": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.buildSteps"
		},
		"60680": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "flow"
		},
		"60681": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "existingSteps"
		},
		"60682": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60683": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.__index"
		},
		"60685": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60686": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.__index"
		},
		"60688": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getStepByAction"
		},
		"60689": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getTransactionAndStepFromIdempotencyKey"
		},
		"60690": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.__constructor"
		},
		"60691": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"60692": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60693": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60694": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.id"
		},
		"60695": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.definition"
		},
		"60696": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.options"
		},
		"60697": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.isClone"
		},
		"60698": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.id"
		},
		"60699": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.invokeSteps"
		},
		"60700": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.compensateSteps"
		},
		"60701": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.definition"
		},
		"60702": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.options"
		},
		"60703": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getOptions"
		},
		"60704": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getOptions"
		},
		"60705": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getInvokeSteps"
		},
		"60706": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getCompensationSteps"
		},
		"60707": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveForward"
		},
		"60708": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveBackward"
		},
		"60709": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canContinue"
		},
		"60710": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.hasExpired"
		},
		"60711": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkTransactionTimeout"
		},
		"60712": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkStepTimeout"
		},
		"60713": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkAllSteps"
		},
		"60714": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.computeCurrentTransactionState"
		},
		"60715": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.flagStepsToRevert"
		},
		"60716": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeNext"
		},
		"60717": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.finalizeTransaction"
		},
		"60718": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.prepareStepForExecution"
		},
		"60719": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createStepPayload"
		},
		"60720": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.prepareHandlerArgs"
		},
		"60721": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createStepExecutionPromise"
		},
		"60722": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeSyncStep"
		},
		"60723": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeAsyncStep"
		},
		"60724": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepExpiration"
		},
		"60725": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepSuccess"
		},
		"60726": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepFailure"
		},
		"60727": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"60728": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"60729": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60730": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"60731": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"60732": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60733": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "options"
		},
		"60734": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60735": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.preventExecuteNext"
		},
		"60736": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.parseFlowOptions"
		},
		"60737": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createTransactionFlow"
		},
		"60738": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"60739": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"60740": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60741": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60742": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transactionId"
		},
		"60743": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"60744": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.payload"
		},
		"60745": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.flowMetadata"
		},
		"60746": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60747": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"60748": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"60749": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cancelingFromParentStep"
		},
		"60750": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"60751": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"60752": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"60753": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"60755": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.context"
		},
		"60756": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"60757": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60758": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60759": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60760": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retrieveExistingTransaction"
		},
		"60761": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retrieveExistingTransaction"
		},
		"60762": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transactionId"
		},
		"60763": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "handler"
		},
		"60764": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "options"
		},
		"60765": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60766": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"60767": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"60768": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"60769": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60770": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60771": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"60772": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"60773": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"60774": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retryStep"
		},
		"60775": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retryStep"
		},
		"60776": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60777": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60778": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"60779": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"60780": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"60781": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"60782": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60783": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60784": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60785": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"60786": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"60787": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60788": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60789": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"60790": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"60791": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"60792": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.response"
		},
		"60793": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"60794": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60795": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60796": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60797": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"60798": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"60799": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60800": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60801": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"60802": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.error"
		},
		"60803": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"60804": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"60805": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"60806": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60807": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60808": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60809": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.forcePermanentFailure"
		},
		"60810": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"60811": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"60812": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"60813": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"60814": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"60815": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"60816": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"60817": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"60818": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"60820": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"60821": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"60822": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"60823": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"60824": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"60825": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"60826": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"60827": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"60828": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"60829": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"60830": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"60831": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"60832": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"60833": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"60834": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.filterable"
		},
		"60835": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"60836": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"60837": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"60838": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"60839": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"60840": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"60841": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"60842": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"60843": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"60844": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"60845": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"60846": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "CustomModuleDefinition"
		},
		"60847": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60848": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"60849": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"60850": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"60851": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"60852": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"60853": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60854": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"60855": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"60856": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"60857": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"60858": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"60859": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"60860": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"60861": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"60862": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"60863": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"60864": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"60865": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"60866": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"60867": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"60868": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.discoveryPath"
		},
		"60869": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"60870": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStepHandler"
		},
		"60871": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"60872": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"60873": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "actionId"
		},
		"60874": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "handlerType"
		},
		"60875": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "payload"
		},
		"60876": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "transaction"
		},
		"60877": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "step"
		},
		"60878": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "orchestrator"
		},
		"60879": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage"
		},
		"60880": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.get"
		},
		"60881": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.get"
		},
		"60882": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "key"
		},
		"60883": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "options"
		},
		"60884": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "__type"
		},
		"60885": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"60886": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.save"
		},
		"60887": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.save"
		},
		"60888": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "key"
		},
		"60889": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "data"
		},
		"60890": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "ttl"
		},
		"60891": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "options"
		},
		"60892": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleRetry"
		},
		"60893": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleRetry"
		},
		"60894": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60895": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"60896": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"60897": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"60898": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearRetry"
		},
		"60899": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearRetry"
		},
		"60900": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60901": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"60902": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleTransactionTimeout"
		},
		"60903": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleTransactionTimeout"
		},
		"60904": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60905": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"60906": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"60907": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleStepTimeout"
		},
		"60908": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleStepTimeout"
		},
		"60909": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60910": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"60911": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"60912": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"60913": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearTransactionTimeout"
		},
		"60914": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearTransactionTimeout"
		},
		"60915": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60916": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearStepTimeout"
		},
		"60917": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearStepTimeout"
		},
		"60918": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60919": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"60920": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearExpiredExecutions"
		},
		"60921": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearExpiredExecutions"
		},
		"60922": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"60923": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.mergeCheckpoints"
		},
		"60924": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.mergeCheckpoints"
		},
		"60925": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "currentTransactionData"
		},
		"60926": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "storedData"
		},
		"60927": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.__constructor"
		},
		"60928": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"60929": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "flow"
		},
		"60930": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"60931": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "errors"
		},
		"60932": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.#private"
		},
		"60933": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.flow"
		},
		"60934": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.context"
		},
		"60935": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.errors"
		},
		"60936": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionFlow"
		},
		"60937": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60938": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.modelId"
		},
		"60939": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.options"
		},
		"60940": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.definition"
		},
		"60941": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transactionId"
		},
		"60942": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.runId"
		},
		"60943": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.metadata"
		},
		"60944": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60945": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"60946": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"60947": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cancelingFromParentStep"
		},
		"60948": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"60949": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"60950": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"60951": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"60953": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasAsyncSteps"
		},
		"60954": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasFailedSteps"
		},
		"60955": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasSkippedOnFailureSteps"
		},
		"60956": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasWaitingSteps"
		},
		"60957": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasSkippedSteps"
		},
		"60958": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasRevertedSteps"
		},
		"60959": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timedOutAt"
		},
		"60960": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.startedAt"
		},
		"60961": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cancelledAt"
		},
		"60962": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.temporaryFailedAt"
		},
		"60963": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.state"
		},
		"60964": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.steps"
		},
		"60965": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60966": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"60968": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type._v"
		},
		"60969": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError"
		},
		"60970": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.__constructor"
		},
		"60971": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError"
		},
		"60972": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"60973": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"60974": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "error"
		},
		"60975": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.action"
		},
		"60976": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.handlerType"
		},
		"60977": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.error"
		},
		"60978": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState"
		},
		"60979": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.NOT_STARTED"
		},
		"60980": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.INVOKING"
		},
		"60981": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.WAITING_TO_COMPENSATE"
		},
		"60982": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.COMPENSATING"
		},
		"60983": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.DONE"
		},
		"60984": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.REVERTED"
		},
		"60985": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.FAILED"
		},
		"60986": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "BaseFlowRunOptions"
		},
		"60987": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60988": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.context"
		},
		"60989": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"60990": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"60991": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.logOnError"
		},
		"60992": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.events"
		},
		"60993": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.container"
		},
		"60994": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"60995": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60996": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"60997": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"60998": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState"
		},
		"60999": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.NOT_STARTED"
		},
		"61000": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.INVOKING"
		},
		"61001": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.COMPENSATING"
		},
		"61002": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.DONE"
		},
		"61003": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.REVERTED"
		},
		"61004": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.FAILED"
		},
		"61005": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.DORMANT"
		},
		"61006": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.SKIPPED"
		},
		"61007": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.SKIPPED_FAILURE"
		},
		"61008": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.TIMEOUT"
		},
		"61009": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus"
		},
		"61010": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.IDLE"
		},
		"61011": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.OK"
		},
		"61012": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.WAITING"
		},
		"61013": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.TEMPORARY_FAILURE"
		},
		"61014": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.PERMANENT_FAILURE"
		},
		"61015": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionOptions"
		},
		"61016": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "StepFeatures"
		},
		"61017": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"61018": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasAsyncSteps"
		},
		"61019": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasStepTimeouts"
		},
		"61020": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasRetriesTimeout"
		},
		"61021": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parallelSteps"
		},
		"61022": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.stepId"
		},
		"61023": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type._v"
		},
		"61024": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"61025": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"61026": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"61027": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"61028": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"61029": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"61030": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"61031": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"61032": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"61033": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"61034": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"61035": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"61036": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"61037": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"61038": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"61039": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"61040": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"61041": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"61042": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"61043": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"61044": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"61045": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"61046": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"61047": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"61048": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"61049": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload"
		},
		"61050": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.__constructor"
		},
		"61051": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload"
		},
		"61052": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "metadata"
		},
		"61053": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "data"
		},
		"61054": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"61055": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.metadata"
		},
		"61056": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.data"
		},
		"61057": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.context"
		},
		"61058": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"61059": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"61060": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"61061": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"61062": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"61063": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"61064": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"61065": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"61066": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"61067": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"61068": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"61069": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"61070": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"61071": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"61072": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"61073": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"61074": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"61075": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"61076": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"61077": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"61078": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"61079": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"61080": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"61081": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"61082": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"61083": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"61084": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"61085": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"61086": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"61087": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"61088": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"61089": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"61090": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"61091": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"61092": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"61093": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.silly"
		},
		"61094": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.silly"
		},
		"61095": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"61096": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"61097": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"61098": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"61099": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.verbose"
		},
		"61100": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.verbose"
		},
		"61101": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"61102": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.http"
		},
		"61103": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.http"
		},
		"61104": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"61105": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"61106": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"61107": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"61108": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"61109": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"61110": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"61111": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"61112": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"61113": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts"
		},
		"reflections": {
			"1": 59389
		}
	}
}
