{
	"id": 14733,
	"name": "sales-channel",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 14931,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 55,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 14932,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 55,
							"character": 30
						}
					],
					"indexSignatures": [
						{
							"id": 14933,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
									"line": 56,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 14934,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 14935,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 14931,
										"name": "FindConfigOrder",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 14865,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 14866,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 14867,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {}
											}
										}
									]
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 14875,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 14868,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 74,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 14869,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 14870,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result.\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 14871,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 93,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 14931,
						"name": "FindConfigOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14872,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 99,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14873,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 14874,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 109,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14866,
						14868,
						14869,
						14870,
						14871,
						14872,
						14873,
						14874
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 65,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 14875,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 14926,
			"name": "MetadataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 429,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 14927,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 14928,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 14927,
									"typeArguments": [
										{
											"type": "reference",
											"target": 14930,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 14930,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 14929,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 14927,
									"typeArguments": [
										{
											"type": "reference",
											"target": 14930,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 14930,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14928,
						14929
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
					"line": 11,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 14930,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14852,
					"name": "FilterableSalesChannelProps"
				}
			]
		},
		{
			"id": 14876,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 14877,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 145,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 14878,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14877
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 141,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 14878,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 14879,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 14880,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 157,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 14881,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14880
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 153,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 14881,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 15004,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 15005,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15006,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event's group. Grouped events are useful when you have distributed transactions\nwhere you need to explicitly group, release and clear events upon lifecycle events of a transaction.\n\nWhen set, you must release the grouped events using the Event Module's "
											},
											{
												"kind": "code",
												"text": "`releaseGroupedEvents`"
											},
											{
												"kind": "text",
												"text": " method to emit the events."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 24,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										15006
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 17,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 14998,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 27,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 15003,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 14999,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 15000,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event's name."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nuser.created\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15001,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional meadata to pass with the event."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 15004,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 15002,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data payload that subscribers receive. For example, the ID or IDs of the created user. (e.g. { id: \"123\" } or { ids: [\"123\", \"456\"] })"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 42,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 15003,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								15000,
								15001,
								15002
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 27,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 14962,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of an event to emit."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 48,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 14965,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 14998,
						"typeArguments": [
							{
								"type": "reference",
								"target": 14965,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 14963,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14964,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 49,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14964
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 48,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 14973,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 52,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 14982,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 14974,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 14975,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14976,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 54,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 14982,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 14977,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14978,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14979,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14980,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 58,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 14981,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14975,
								14976,
								14977,
								14978,
								14979,
								14980,
								14981
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 52,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 14988,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 14989,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 14990,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14991,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14992,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14993,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 7,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14994,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14995,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 14996,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 16,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 14997,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14990,
								14991,
								14992,
								14993,
								14994,
								14995,
								14996,
								14997
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 3,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 14983,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14984,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 29,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 14985,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14986,
					"name": "filterable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 14987,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14984,
						14985,
						14986,
						14987
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 28,
					"character": 17
				}
			]
		},
		{
			"id": 14936,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14937,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14938,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 14983,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 14983,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 14939,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 14940,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 14941,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
															"line": 51,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14942,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
															"line": 52,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														14941,
														14942
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
													"line": 50,
													"character": 6
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 14943,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 14944,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 14988,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 14945,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 14946,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 14947,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 58,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 14948,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 59,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 14949,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 60,
												"character": 4
											}
										],
										"type": {
											"type": "reference",
											"target": 14988,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											14947,
											14948,
											14949
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
										"line": 57,
										"character": 12
									}
								]
							}
						}
					}
				},
				{
					"id": 14950,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14937,
						14938,
						14939,
						14943,
						14944,
						14945,
						14950
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 38,
					"character": 17
				}
			]
		},
		{
			"id": 14956,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 143,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 14957,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14958,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 14959,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 168,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14960,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 169,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 14961,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 173,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14958,
										14959,
										14960,
										14961
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 145,
									"character": 2
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 14882,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 191,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 14936,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 14883,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14884,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 198,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14885,
									"name": "idPrefixToEntityName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 199,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 14886,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 200,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14951,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14887,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 201,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 14888,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 14889,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 202,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 14890,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 203,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 14891,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 204,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 14892,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 14893,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 208,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 14894,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 209,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 14895,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 210,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							14893,
																							14894,
																							14895
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																						"line": 207,
																						"character": 8
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 14896,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 213,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Omit"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 14951,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																},
																{
																	"type": "literal",
																	"value": "hasMany"
																}
															],
															"name": "Omit",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															14889,
															14890,
															14891,
															14896
														]
													}
												],
												"sources": [
													{
														"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
														"line": 201,
														"character": 12
													}
												]
											}
										}
									}
								},
								{
									"id": 14897,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 215,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14898,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 216,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14899,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 220,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 14900,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 224,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 14901,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 228,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 14902,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 233,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14903,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 234,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 14904,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 14905,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 238,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14906,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 242,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 14907,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 243,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 14956,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														14905,
														14906,
														14907
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 234,
													"character": 19
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14884,
										14885,
										14886,
										14887,
										14897,
										14898,
										14899,
										14900,
										14901,
										14902,
										14903
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 194,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 14951,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 247,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 14988,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 14952,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14953,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 251,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 14954,
									"name": "filterable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fields to be filterable by the Index module using query.index"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 256,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14955,
									"name": "hasMany",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allow multiple relationships to exist for this\nentity"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 261,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14953,
										14954,
										14955
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 247,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 14805,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14806,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 325,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 14807,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 325,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 14882,
								"name": "ModuleJoinerConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 14808,
					"name": "__hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 330,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14809,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 14810,
									"name": "onApplicationStart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 331,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 14811,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 331,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 14812,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 331,
															"character": 25
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 14813,
									"name": "onApplicationShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 332,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 14814,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 332,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 14815,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 332,
															"character": 28
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 14816,
									"name": "onApplicationPrepareShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 333,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 14817,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 333,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 14818,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 333,
															"character": 35
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										14810,
										14813,
										14816
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 330,
									"character": 12
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14808
					]
				},
				{
					"title": "Methods",
					"children": [
						14806
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 321,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 14734,
					"name": "ISalesChannelModuleService"
				}
			]
		},
		{
			"id": 14922,
			"name": "SalesChannelLocationDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The sales channel location details."
					}
				]
			},
			"children": [
				{
					"id": 14923,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated sales channel's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14924,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated location's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14925,
					"name": "sales_channel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 14840,
						"name": "SalesChannelDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14923,
						14924,
						14925
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 14840,
			"name": "SalesChannelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The sales channel details."
					}
				]
			},
			"children": [
				{
					"id": 14841,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14842,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14843,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14844,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the sales channel is disabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14845,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 14846,
					"name": "locations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The locations of the sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 14922,
							"name": "SalesChannelLocationDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14841,
						14842,
						14843,
						14844,
						14845,
						14846
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
					"line": 26,
					"character": 17
				}
			]
		},
		{
			"id": 14852,
			"name": "FilterableSalesChannelProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved sales channel."
					}
				]
			},
			"children": [
				{
					"id": 14857,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 14852,
									"name": "FilterableSalesChannelProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 14927,
									"typeArguments": [
										{
											"type": "reference",
											"target": 14852,
											"name": "FilterableSalesChannelProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14928,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 14858,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 14852,
									"name": "FilterableSalesChannelProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 14927,
									"typeArguments": [
										{
											"type": "reference",
											"target": 14852,
											"name": "FilterableSalesChannelProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 14929,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 14853,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find sales channels by their name or description through this search term."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 66,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14854,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the sales channel by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 14855,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter sales channels by their names."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 76,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 14856,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter sales channels by whether they're disabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14857,
						14858,
						14853,
						14854,
						14855,
						14856
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/common.ts",
					"line": 61,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 14927,
					"typeArguments": [
						{
							"type": "reference",
							"target": 14852,
							"name": "FilterableSalesChannelProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 14819,
			"name": "CreateSalesChannelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The sales channel to be created."
					}
				]
			},
			"children": [
				{
					"id": 14820,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14821,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14822,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the sales channel is disabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14820,
						14821,
						14822
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 14847,
			"name": "UpdateSalesChannelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 14848,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14849,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14850,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the sales channel is disabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14851,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 44,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 14926,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14848,
						14849,
						14850,
						14851
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
					"line": 26,
					"character": 17
				}
			]
		},
		{
			"id": 14859,
			"name": "UpsertSalesChannelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes in the sales channel to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 14860,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 54,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14861,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel. Required\nwhen creating a sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14862,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 14863,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the sales channel is disabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14864,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
							"line": 74,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 14926,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14860,
						14861,
						14862,
						14863,
						14864
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/sales-channel/mutations.ts",
					"line": 50,
					"character": 17
				}
			]
		},
		{
			"id": 14734,
			"name": "ISalesChannelModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Sales Channel Module."
					}
				]
			},
			"children": [
				{
					"id": 14735,
					"name": "createSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sales-channel/service.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L30"
						},
						{
							"fileName": "sales-channel/service.ts",
							"line": 47,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L47"
						}
					],
					"signatures": [
						{
							"id": 14736,
							"name": "createSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates sales channels."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created sales channels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannels = await salesChannelModuleService.createSalesChannels([\n  {\n    name: \"B2B\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 14737,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sales channels to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14819,
											"name": "CreateSalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14738,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14840,
											"name": "SalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14739,
							"name": "createSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a sales channel."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created sales channel."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannel = await salesChannelModuleService.createSalesChannels({\n  name: \"B2B\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L47"
								}
							],
							"parameters": [
								{
									"id": 14740,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sales channel to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14819,
										"name": "CreateSalesChannelDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14741,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14840,
										"name": "SalesChannelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14742,
					"name": "updateSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sales-channel/service.ts",
							"line": 68,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L68"
						},
						{
							"fileName": "sales-channel/service.ts",
							"line": 92,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L92"
						}
					],
					"signatures": [
						{
							"id": 14743,
							"name": "updateSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing sales channel."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated sales channel."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannel = await salesChannelModuleService.updateSalesChannels(\n  \"sc_123\",\n  {\n    description: \"Sales channel for B2B customers\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 68,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L68"
								}
							],
							"parameters": [
								{
									"id": 14744,
									"name": "channelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sales channel's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14745,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the sales channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14847,
										"name": "UpdateSalesChannelDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14746,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14840,
										"name": "SalesChannelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14747,
							"name": "updateSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing sales channels matching the specified filters"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated sales channels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannels = await salesChannelModuleService.updateSalesChannels(\n  {\n    name: \"B2B\",\n  },\n  {\n    description: \"Sales channel for B2B customers\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 92,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L92"
								}
							],
							"parameters": [
								{
									"id": 14748,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which sales channels to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14852,
										"name": "FilterableSalesChannelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14749,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the sales channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14847,
										"name": "UpdateSalesChannelDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14750,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14840,
											"name": "SalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14751,
					"name": "upsertSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sales-channel/service.ts",
							"line": 110,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L110"
						},
						{
							"fileName": "sales-channel/service.ts",
							"line": 133,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L133"
						}
					],
					"signatures": [
						{
							"id": 14752,
							"name": "upsertSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates a sales channel if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated sales channel."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannel = await salesChannelModuleService.upsertSalesChannels({\n  name: \"B2B\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 110,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L110"
								}
							],
							"parameters": [
								{
									"id": 14753,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the sales channel to be created or updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14859,
										"name": "UpsertSalesChannelDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14754,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14840,
										"name": "SalesChannelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14755,
							"name": "upsertSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates sales channels if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated sales channels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannels = await salesChannelModuleService.upsertSalesChannels([\n  {\n    name: \"B2B\",\n  },\n  {\n    id: \"sc_123\",\n    description: \"Sales channel for B2B customers\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 133,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L133"
								}
							],
							"parameters": [
								{
									"id": 14756,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the sales channels to be created or updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14859,
											"name": "UpsertSalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 14757,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14840,
											"name": "SalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14758,
					"name": "deleteSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sales-channel/service.ts",
							"line": 148,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L148"
						},
						{
							"fileName": "sales-channel/service.ts",
							"line": 160,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L160"
						}
					],
					"signatures": [
						{
							"id": 14759,
							"name": "deleteSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes sales channel by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the sales channels are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait salesChannelModuleService.deleteSalesChannels([\"sc_123\", \"sc_321\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 148,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L148"
								}
							],
							"parameters": [
								{
									"id": 14760,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the sales channel."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14761,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 14762,
							"name": "deleteSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a sales channel by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the sales channel is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait salesChannelModuleService.deleteSalesChannels(\"sc_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 160,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L160"
								}
							],
							"parameters": [
								{
									"id": 14763,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the sales channel."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14764,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14765,
					"name": "retrieveSalesChannel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sales-channel/service.ts",
							"line": 175,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 14766,
							"name": "retrieveSalesChannel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a sales channel by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved sales channel."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst salesChannel =\n  await salesChannelModuleService.retrieveSalesChannel(\"sc_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 175,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L175"
								}
							],
							"parameters": [
								{
									"id": 14767,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the sales channel."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 14768,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the sales channel is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a sales channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14865,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14840,
												"name": "SalesChannelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14769,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 14840,
										"name": "SalesChannelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14770,
					"name": "listSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sales-channel/service.ts",
							"line": 213,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L213"
						}
					],
					"signatures": [
						{
							"id": 14771,
							"name": "listSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of sales channels based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of sales channels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of sales channels using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst salesChannels = await salesChannelModuleService.listSalesChannels({\n  id: [\"sc_123\", \"sc_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst salesChannels = await salesChannelModuleService.listSalesChannels(\n  {\n    id: [\"sc_123\", \"sc_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 213,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L213"
								}
							],
							"parameters": [
								{
									"id": 14772,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved sales channels."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14852,
										"name": "FilterableSalesChannelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14773,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the sales channel is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a sales channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14865,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14840,
												"name": "SalesChannelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14774,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14840,
											"name": "SalesChannelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14775,
					"name": "listAndCountSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sales-channel/service.ts",
							"line": 253,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L253"
						}
					],
					"signatures": [
						{
							"id": 14776,
							"name": "listAndCountSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of sales channels along with the total count of available sales channels satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of sales channels along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of sales channels using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [salesChannels, count] =\n  await salesChannelModuleService.listAndCountSalesChannels({\n    id: [\"sc_123\", \"sc_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [salesChannels, count] =\n  await salesChannelModuleService.listAndCountSalesChannels(\n    {\n      id: [\"sc_123\", \"sc_321\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 253,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L253"
								}
							],
							"parameters": [
								{
									"id": 14777,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved sales channels."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14852,
										"name": "FilterableSalesChannelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14778,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the sales channel is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a sales channel."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14865,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14840,
												"name": "SalesChannelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14779,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14840,
													"name": "SalesChannelDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14780,
					"name": "softDeleteSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sales-channel/service.ts",
							"line": 271,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L271"
						}
					],
					"signatures": [
						{
							"id": 14781,
							"name": "softDeleteSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes sales channels by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait salesChannelModuleService.softDeleteSalesChannels([\"sc_123\", \"sc_321\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 271,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L271"
								}
							],
							"typeParameters": [
								{
									"id": 14782,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14783,
									"name": "salesChannelIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The sales channels' ID."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14784,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14876,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14782,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14785,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14786,
					"name": "restoreSalesChannels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "sales-channel/service.ts",
							"line": 290,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L290"
						}
					],
					"signatures": [
						{
							"id": 14787,
							"name": "restoreSalesChannels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores a soft deleted sales channel by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait salesChannelModuleService.restoreSalesChannels([\"sc_123\", \"sc_321\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "sales-channel/service.ts",
									"line": 290,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L290"
								}
							],
							"typeParameters": [
								{
									"id": 14788,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 14789,
									"name": "salesChannelIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of {summary}"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 14790,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the sales channel. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the sales channel's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14879,
										"typeArguments": [
											{
												"type": "reference",
												"target": 14788,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 14791,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 14823,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						14735,
						14742,
						14751,
						14758,
						14765,
						14770,
						14775,
						14780,
						14786
					]
				}
			],
			"sources": [
				{
					"fileName": "sales-channel/service.ts",
					"line": 15,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/types/src/sales-channel/service.ts#L15"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 14805,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 14966,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14967,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 14968,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14969,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 6,
									"character": 11
								}
							],
							"indexSignatures": [
								{
									"id": 14970,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
											"line": 6,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 14971,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 14972,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14967,
						14968,
						14972
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 14908,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14909,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 15,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 14910,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 15,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 14911,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 14962,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14962,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 14912,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 16,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 14913,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 16,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 14914,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 14966,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 14962,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14915,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 17,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 14916,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 14917,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 14918,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 18,
									"character": 2
								}
							],
							"typeParameters": [
								{
									"id": 14919,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 14920,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 14973,
												"typeArguments": [
													{
														"type": "reference",
														"target": 14919,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 14973,
													"typeArguments": [
														{
															"type": "reference",
															"target": 14919,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 14921,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						14909,
						14912,
						14915,
						14917
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 14823,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 14824,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 14825,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 14839,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 14826,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 14839,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 14827,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14828,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14829,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14830,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14831,
					"name": "runId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current run."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14832,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 14908,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 14833,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14834,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14835,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14836,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "preventReleaseEvents"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 85,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14837,
					"name": "isCancelling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether the current workflow execution is being cancelled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14838,
					"name": "cancelingFromParentStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Weither or not a sub workflow cancellation is being triggered from a parent step.\nIf true, the parent step will not be triggered by the sub workflow."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						14824,
						14825,
						14826,
						14827,
						14828,
						14829,
						14830,
						14831,
						14832,
						14833,
						14834,
						14835,
						14836,
						14837,
						14838
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 30,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 14839,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				14865,
				14927,
				14876,
				14879,
				14983,
				14936,
				14805,
				14922,
				14840,
				14852,
				14819,
				14847,
				14859,
				14734,
				14966,
				14908,
				14823
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				14931,
				14926,
				15004,
				14998,
				14962,
				14973,
				14988,
				14956,
				14882,
				14951
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"14733": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": ""
		},
		"14734": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService"
		},
		"14735": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.createSalesChannels"
		},
		"14736": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.createSalesChannels"
		},
		"14737": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"14738": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14739": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.createSalesChannels"
		},
		"14740": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"14741": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14742": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.updateSalesChannels"
		},
		"14743": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.updateSalesChannels"
		},
		"14744": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "channelId"
		},
		"14745": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"14746": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14747": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.updateSalesChannels"
		},
		"14748": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "selector"
		},
		"14749": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"14750": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14751": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.upsertSalesChannels"
		},
		"14752": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.upsertSalesChannels"
		},
		"14753": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"14754": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14755": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.upsertSalesChannels"
		},
		"14756": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "data"
		},
		"14757": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14758": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.deleteSalesChannels"
		},
		"14759": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.deleteSalesChannels"
		},
		"14760": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ids"
		},
		"14761": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14762": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.deleteSalesChannels"
		},
		"14763": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "id"
		},
		"14764": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14765": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.retrieveSalesChannel"
		},
		"14766": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.retrieveSalesChannel"
		},
		"14767": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "id"
		},
		"14768": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"14769": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14770": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.listSalesChannels"
		},
		"14771": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.listSalesChannels"
		},
		"14772": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "filters"
		},
		"14773": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"14774": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14775": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.listAndCountSalesChannels"
		},
		"14776": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.listAndCountSalesChannels"
		},
		"14777": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "filters"
		},
		"14778": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"14779": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14780": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.softDeleteSalesChannels"
		},
		"14781": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.softDeleteSalesChannels"
		},
		"14782": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14783": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "salesChannelIds"
		},
		"14784": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"14785": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14786": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.restoreSalesChannels"
		},
		"14787": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "ISalesChannelModuleService.restoreSalesChannels"
		},
		"14788": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14789": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "salesChannelIds"
		},
		"14790": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "config"
		},
		"14791": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/service.ts",
			"qualifiedName": "sharedContext"
		},
		"14805": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"14806": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"14807": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"14808": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__hooks"
		},
		"14809": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14810": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationStart"
		},
		"14811": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14812": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14813": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationShutdown"
		},
		"14814": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14815": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14816": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationPrepareShutdown"
		},
		"14817": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14818": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14819": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO"
		},
		"14820": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO.name"
		},
		"14821": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO.description"
		},
		"14822": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "CreateSalesChannelDTO.is_disabled"
		},
		"14823": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"14824": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"14825": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"14826": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"14827": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"14828": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"14829": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"14830": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"14831": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.runId"
		},
		"14832": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"14833": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"14834": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"14835": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"14836": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"14837": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"14838": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.cancelingFromParentStep"
		},
		"14839": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"14840": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO"
		},
		"14841": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.id"
		},
		"14842": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.name"
		},
		"14843": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.description"
		},
		"14844": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.is_disabled"
		},
		"14845": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.metadata"
		},
		"14846": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelDTO.locations"
		},
		"14847": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO"
		},
		"14848": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.name"
		},
		"14849": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.description"
		},
		"14850": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.is_disabled"
		},
		"14851": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpdateSalesChannelDTO.metadata"
		},
		"14852": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps"
		},
		"14853": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.q"
		},
		"14854": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.id"
		},
		"14855": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.name"
		},
		"14856": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "FilterableSalesChannelProps.is_disabled"
		},
		"14857": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"14858": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"14859": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO"
		},
		"14860": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.id"
		},
		"14861": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.name"
		},
		"14862": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.description"
		},
		"14863": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.is_disabled"
		},
		"14864": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/mutations.ts",
			"qualifiedName": "UpsertSalesChannelDTO.metadata"
		},
		"14865": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"14866": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"14867": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"14868": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"14869": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"14870": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"14871": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"14872": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"14873": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"14874": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"14875": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"14876": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"14877": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"14878": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14879": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"14880": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"14881": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"14882": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"14883": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14884": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"14885": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefixToEntityName"
		},
		"14886": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"14887": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"14888": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14889": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"14890": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"14891": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"14892": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14893": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"14894": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"14895": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"14896": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"14897": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"14898": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"14899": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"14900": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"14901": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"14902": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"14903": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"14904": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14905": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"14906": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"14907": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"14908": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"14909": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"14910": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"14911": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"14912": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"14913": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"14914": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"14915": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"14916": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"14917": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"14918": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"14919": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"14920": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"14921": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"14922": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO"
		},
		"14923": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.sales_channel_id"
		},
		"14924": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.location_id"
		},
		"14925": {
			"sourceFileName": "../../../../packages/core/types/src/sales-channel/common.ts",
			"qualifiedName": "SalesChannelLocationDTO.sales_channel"
		},
		"14926": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"14927": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"14928": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"14929": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"14930": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"14931": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"14932": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"14933": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"14935": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"14936": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"14937": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"14938": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"14939": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"14940": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"14941": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"14942": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"14943": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"14944": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"14945": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"14946": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"14947": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"14948": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"14949": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"14950": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"14951": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"14952": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14953": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"14954": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.filterable"
		},
		"14955": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.hasMany"
		},
		"14956": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"14957": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"14958": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"14959": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"14960": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"14961": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"14962": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"14963": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"14964": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"14965": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"14966": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"14967": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"14968": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"14969": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"14970": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"14972": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"14973": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"14974": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"14975": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"14976": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"14977": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"14978": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"14979": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"14980": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"14981": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"14982": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"14983": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"14984": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"14985": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"14986": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.filterable"
		},
		"14987": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"14988": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"14989": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"14990": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"14991": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"14992": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"14993": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"14994": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"14995": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"14996": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"14997": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"14998": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"14999": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"15000": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"15001": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"15002": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"15003": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"15004": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"15005": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"15006": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/sales-channel/service.ts"
		},
		"reflections": {
			"1": 14733
		}
	}
}
