{
	"id": 42296,
	"name": "dml",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 42297,
			"name": "entity-builder",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 42298,
					"name": "DefineOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 31,
							"character": 12,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L31"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 42299,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 42300,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data model's name."
													}
												]
											},
											"sources": [
												{
													"fileName": "utils/src/dml/entity-builder.ts",
													"line": 37,
													"character": 6,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L37"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 42301,
											"name": "tableName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the data model's table in the database."
													}
												]
											},
											"sources": [
												{
													"fileName": "utils/src/dml/entity-builder.ts",
													"line": 41,
													"character": 6,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L41"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												42300,
												42301
											]
										}
									],
									"sources": [
										{
											"fileName": "utils/src/dml/entity-builder.ts",
											"line": 33,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L33"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 42302,
					"name": "ManyToManyOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 44,
							"character": 12,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L44"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "RelationshipOptions"
								},
								"name": "RelationshipOptions",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 42303,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42304,
													"name": "pivotTable",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The name of the pivot table\ncreated in the database for this relationship."
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 51,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L51"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 42306,
													"name": "joinColumn",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The column name in the pivot table that for the current entity"
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 59,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L59"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												},
												{
													"id": 42307,
													"name": "inverseJoinColumn",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The column name in the pivot table for the opposite entity"
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 63,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L63"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42304,
														42306,
														42307
													]
												}
											],
											"sources": [
												{
													"fileName": "utils/src/dml/entity-builder.ts",
													"line": 46,
													"character": 6,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L46"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 42308,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42310,
													"name": "pivotEntity",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A function that returns the data model\nrepresenting the pivot table created in the\ndatabase for this relationship."
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 75,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L75"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 42311,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "utils/src/dml/entity-builder.ts",
																	"line": 75,
																	"character": 22,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L75"
																}
															],
															"signatures": [
																{
																	"id": 42312,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 42397,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "DmlEntity",
																		"package": "@medusajs/utils"
																	}
																}
															]
														}
													}
												},
												{
													"id": 42313,
													"name": "joinColumn",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The column name in the pivot table that for the current entity"
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 79,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L79"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												},
												{
													"id": 42314,
													"name": "inverseJoinColumn",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The column name in the pivot table for the opposite entity"
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 83,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L83"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42310,
														42313,
														42314
													]
												}
											],
											"sources": [
												{
													"fileName": "utils/src/dml/entity-builder.ts",
													"line": 65,
													"character": 6,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L65"
												}
											]
										}
									}
								]
							}
						]
					}
				},
				{
					"id": 42315,
					"name": "EntityBuilder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Entity builder exposes the API to create an entity and define its\nschema using the shorthand methods."
							}
						]
					},
					"children": [
						{
							"id": 42316,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 42317,
									"name": "EntityBuilder",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 42315,
										"name": "EntityBuilder",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 42321,
							"name": "define",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 125,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L125"
								}
							],
							"signatures": [
								{
									"id": 42322,
									"name": "define",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method defines a data model."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  id: model.id(),\n  name: model.text(),\n})\n\nexport default MyCustom\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "utils/src/dml/entity-builder.ts",
											"line": 125,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L125"
										}
									],
									"typeParameters": [
										{
											"id": 42323,
											"name": "Schema",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of the accepted schema in the second parameter of the method."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "DMLSchema"
												},
												"name": "DMLSchema",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 42324,
											"name": "TConfig",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "IDmlEntityConfig"
												},
												"name": "IDmlEntityConfig",
												"package": "@medusajs/types"
											}
										}
									],
									"parameters": [
										{
											"id": 42325,
											"name": "nameOrConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Either the data model's name, or configurations to name the data model.\nThe data model's name must be unique."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42324,
												"name": "TConfig",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 42326,
											"name": "schema",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The schema of the data model's properties."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42323,
												"name": "Schema",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 42397,
										"typeArguments": [
											{
												"type": "reference",
												"target": 42395,
												"typeArguments": [
													{
														"type": "reference",
														"target": 42323,
														"name": "Schema",
														"package": "@medusajs/utils",
														"refersToTypeParameter": true
													}
												],
												"name": "DMLEntitySchemaBuilder",
												"package": "@medusajs/utils"
											},
											{
												"type": "reference",
												"target": 42324,
												"name": "TConfig",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								42316
							]
						},
						{
							"title": "Methods",
							"children": [
								42321,
								42327,
								42332,
								42334,
								42336,
								42338,
								42340,
								42342,
								42344,
								42346,
								42348,
								42350,
								42354,
								42373,
								42383,
								42388
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 91,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L91"
						}
					]
				},
				{
					"id": 42393,
					"name": "model",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 510,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L510"
						}
					],
					"type": {
						"type": "reference",
						"target": 42315,
						"name": "EntityBuilder",
						"package": "@medusajs/utils"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						42315
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						42298,
						42302
					]
				},
				{
					"title": "Variables",
					"children": [
						42393
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/src/dml/entity-builder.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L1"
				}
			]
		},
		{
			"id": 42394,
			"name": "entity",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 42395,
					"name": "DMLEntitySchemaBuilder",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity.ts",
							"line": 20,
							"character": 12,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L20"
						}
					],
					"typeParameters": [
						{
							"id": 42396,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "DMLSchema"
								},
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-big-number-properties.ts",
									"qualifiedName": "DMLSchemaWithBigNumber"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42396,
										"name": "Schema",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "DMLSchemaWithBigNumber",
								"package": "@medusajs/utils"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-default-properties.ts",
									"qualifiedName": "DMLSchemaDefaults"
								},
								"name": "DMLSchemaDefaults",
								"package": "@medusajs/utils"
							},
							{
								"type": "reference",
								"target": 42396,
								"name": "Schema",
								"package": "@medusajs/utils",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 42397,
					"name": "DmlEntity",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Dml entity is a representation of a DML model with a unique\nname, its schema and relationships."
							}
						]
					},
					"children": [
						{
							"id": 42431,
							"name": "[IsDmlEntity]",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 73,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L73"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 42407,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 75,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L75"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "InferDmlEntityNameFromConfig"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42404,
										"name": "TConfig",
										"package": "@medusajs/utils",
										"qualifiedName": "DmlEntity.TConfig",
										"refersToTypeParameter": true
									}
								],
								"name": "InferDmlEntityNameFromConfig",
								"package": "@medusajs/types"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IDmlEntity.name"
							}
						},
						{
							"id": 42408,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 76,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L76"
								}
							],
							"type": {
								"type": "reference",
								"target": 42403,
								"name": "Schema",
								"package": "@medusajs/utils",
								"qualifiedName": "DmlEntity.Schema",
								"refersToTypeParameter": true
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IDmlEntity.schema"
							}
						},
						{
							"id": 42401,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 84,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L84"
								}
							],
							"signatures": [
								{
									"id": 42402,
									"name": "DmlEntity",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "utils/src/dml/entity.ts",
											"line": 84,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L84"
										}
									],
									"typeParameters": [
										{
											"id": 42403,
											"name": "Schema",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "DMLSchema"
												},
												"name": "DMLSchema",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 42404,
											"name": "TConfig",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "IDmlEntityConfig"
												},
												"name": "IDmlEntityConfig",
												"package": "@medusajs/types"
											}
										}
									],
									"parameters": [
										{
											"id": 42405,
											"name": "nameOrConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 42404,
												"name": "TConfig",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.TConfig",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 42406,
											"name": "schema",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 42403,
												"name": "Schema",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.Schema",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 42397,
										"typeArguments": [
											{
												"type": "reference",
												"target": 42403,
												"name": "Schema",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.Schema",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 42404,
												"name": "TConfig",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.TConfig",
												"refersToTypeParameter": true
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 42398,
							"name": "isDmlEntity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 98,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L98"
								}
							],
							"signatures": [
								{
									"id": 42399,
									"name": "isDmlEntity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A static method to check if an entity is an instance of DmlEntity.\nIt allows us to identify a specific object as being an instance of\nDmlEntity."
											}
										]
									},
									"sources": [
										{
											"fileName": "utils/src/dml/entity.ts",
											"line": 98,
											"character": 9,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L98"
										}
									],
									"parameters": [
										{
											"id": 42400,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "entity",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": 42397,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "DmlEntity",
											"package": "@medusajs/utils"
										}
									}
								}
							]
						},
						{
							"id": 42413,
							"name": "parse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 105,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L105"
								}
							],
							"signatures": [
								{
									"id": 42414,
									"name": "parse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Parse entity to get its underlying information"
											}
										]
									},
									"sources": [
										{
											"fileName": "utils/src/dml/entity.ts",
											"line": 105,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L105"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42415,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42416,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 106,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L106"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "InferDmlEntityNameFromConfig"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 42404,
																"name": "TConfig",
																"package": "@medusajs/utils",
																"qualifiedName": "DmlEntity.TConfig",
																"refersToTypeParameter": true
															}
														],
														"name": "InferDmlEntityNameFromConfig",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 42417,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 107,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L107"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 42418,
													"name": "schema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 108,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L108"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "DMLSchema"
														},
														"name": "DMLSchema",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 42419,
													"name": "cascades",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 109,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L109"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "EntityCascades"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "EntityCascades",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 42420,
													"name": "indexes",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 110,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L110"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "EntityIndex"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 42403,
																	"name": "Schema",
																	"package": "@medusajs/utils",
																	"qualifiedName": "DmlEntity.Schema",
																	"refersToTypeParameter": true
																}
															],
															"name": "EntityIndex",
															"package": "@medusajs/types"
														}
													}
												},
												{
													"id": 42421,
													"name": "checks",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 111,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L111"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "CheckConstraint"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 42403,
																	"name": "Schema",
																	"package": "@medusajs/utils",
																	"qualifiedName": "DmlEntity.Schema",
																	"refersToTypeParameter": true
																}
															],
															"name": "CheckConstraint",
															"package": "@medusajs/types"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42416,
														42417,
														42418,
														42419,
														42420,
														42421
													]
												}
											],
											"sources": [
												{
													"fileName": "utils/src/dml/entity.ts",
													"line": 105,
													"character": 11,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L105"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 42428,
							"name": "checks",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 253,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L253"
								}
							],
							"signatures": [
								{
									"id": 42429,
									"name": "checks",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "utils/src/dml/entity.ts",
											"line": 253,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L253"
										}
									],
									"parameters": [
										{
											"id": 42430,
											"name": "checks",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "CheckConstraint"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 42403,
															"name": "Schema",
															"package": "@medusajs/utils",
															"qualifiedName": "DmlEntity.Schema",
															"refersToTypeParameter": true
														}
													],
													"name": "CheckConstraint",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 42397,
										"typeArguments": [
											{
												"type": "reference",
												"target": 42403,
												"name": "Schema",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.Schema",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 42404,
												"name": "TConfig",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.TConfig",
												"refersToTypeParameter": true
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								42401
							]
						},
						{
							"title": "Properties",
							"children": [
								42431,
								42407,
								42408
							]
						},
						{
							"title": "Methods",
							"children": [
								42398,
								42413,
								42422,
								42425,
								42428
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/src/dml/entity.ts",
							"line": 68,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L68"
						}
					],
					"typeParameters": [
						{
							"id": 42432,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "DMLSchema"
								},
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42433,
							"name": "TConfig",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "IDmlEntityConfig"
								},
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
								"qualifiedName": "IDmlEntity"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 42403,
									"name": "Schema",
									"package": "@medusajs/utils",
									"qualifiedName": "DmlEntity.Schema",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 42404,
									"name": "TConfig",
									"package": "@medusajs/utils",
									"qualifiedName": "DmlEntity.TConfig",
									"refersToTypeParameter": true
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						42397
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						42395
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/src/dml/entity.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L1"
				}
			]
		},
		{
			"id": 42434,
			"name": "properties/base",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 42435,
					"name": "BaseProperty",
					"variant": "declaration",
					"kind": 128,
					"flags": {
						"isAbstract": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The BaseProperty class offers shared affordances to define\nproperty classes"
							}
						]
					},
					"children": [
						{
							"id": 42436,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 42437,
									"name": "BaseProperty",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"typeParameters": [
										{
											"id": 42438,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"target": 42435,
										"typeArguments": [
											{
												"type": "reference",
												"target": 42438,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "BaseProperty.T",
												"refersToTypeParameter": true
											}
										],
										"name": "BaseProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 42445,
							"name": "dataType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isProtected": true,
								"isAbstract": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 25,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L25"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 42446,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 42447,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/dist/dml/index.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "KnownDataTypes"
												},
												"name": "KnownDataTypes",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 42448,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "types/dist/dml/index.d.ts",
													"line": 46,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												42447,
												42448
											]
										}
									],
									"sources": [
										{
											"fileName": "types/dist/dml/index.d.ts",
											"line": 44,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 42449,
							"name": "$dataType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A type-only property to infer the JavScript data-type\nof the schema property"
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 31,
									"character": 10,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L31"
								}
							],
							"type": {
								"type": "reference",
								"target": 42438,
								"name": "T",
								"package": "@medusajs/utils",
								"qualifiedName": "BaseProperty.T",
								"refersToTypeParameter": true
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PropertyType.$dataType"
							}
						},
						{
							"id": 42463,
							"name": "parse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 152,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L152"
								}
							],
							"signatures": [
								{
									"id": 42464,
									"name": "parse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the serialized metadata"
											}
										]
									},
									"sources": [
										{
											"fileName": "utils/src/dml/properties/base.ts",
											"line": 152,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L152"
										}
									],
									"parameters": [
										{
											"id": 42465,
											"name": "fieldName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "PropertyMetadata"
										},
										"name": "PropertyMetadata",
										"package": "@medusajs/types"
									},
									"implementationOf": {
										"type": "reference",
										"target": -1,
										"name": "PropertyType.parse"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PropertyType.parse"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								42436
							]
						},
						{
							"title": "Properties",
							"children": [
								42445,
								42449
							]
						},
						{
							"title": "Methods",
							"children": [
								42450,
								42452,
								42454,
								42457,
								42460,
								42463
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 9,
							"character": 22,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L9"
						}
					],
					"typeParameters": [
						{
							"id": 42466,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
								"qualifiedName": "PropertyType"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 42438,
									"name": "T",
									"package": "@medusajs/utils",
									"qualifiedName": "BaseProperty.T",
									"refersToTypeParameter": true
								}
							],
							"name": "PropertyType",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						42435
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/src/dml/properties/base.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L1"
				}
			]
		},
		{
			"id": 42467,
			"name": "Property Types",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 42327,
					"name": "id",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 156,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L156"
						}
					],
					"signatures": [
						{
							"id": 42328,
							"name": "id",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines an automatically generated string ID property.\n\nYou must use the \"primaryKey\" modifier to mark the property as the\nprimary key."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst User = model.define(\"User\", {\n  id: model.id().primaryKey(),\n  // ...\n})\n\nexport default User\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 156,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L156"
								}
							],
							"parameters": [
								{
									"id": 42329,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42330,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42331,
													"name": "prefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 156,
															"character": 17,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L156"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42331
													]
												}
											],
											"sources": [
												{
													"fileName": "utils/src/dml/entity-builder.ts",
													"line": 156,
													"character": 15,
													"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L156"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
									"qualifiedName": "IdProperty"
								},
								"name": "IdProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42332,
					"name": "text",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 175,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 42333,
							"name": "text",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a string property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  name: model.text(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 175,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L175"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
									"qualifiedName": "TextProperty"
								},
								"name": "TextProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42334,
					"name": "boolean",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 194,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L194"
						}
					],
					"signatures": [
						{
							"id": 42335,
							"name": "boolean",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a boolean property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  hasAccount: model.boolean(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 194,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L194"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/boolean.ts",
									"qualifiedName": "BooleanProperty"
								},
								"name": "BooleanProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42336,
					"name": "number",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 213,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L213"
						}
					],
					"signatures": [
						{
							"id": 42337,
							"name": "number",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a number property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  age: model.number(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 213,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L213"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
									"qualifiedName": "NumberProperty"
								},
								"name": "NumberProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42338,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 237,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L237"
						}
					],
					"signatures": [
						{
							"id": 42339,
							"name": "bigNumber",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a number property that expects large numbers, such as prices."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  price: model.bigNumber(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 237,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L237"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/big-number.ts",
									"qualifiedName": "BigNumberProperty"
								},
								"name": "BigNumberProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42340,
					"name": "float",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 259,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L259"
						}
					],
					"signatures": [
						{
							"id": 42341,
							"name": "float",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a float property that allows for\nvalues with decimal places"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "2.1.2"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"tax\", {\n  tax_rate: model.float(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 259,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L259"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/float.ts",
									"qualifiedName": "FloatProperty"
								},
								"name": "FloatProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42344,
					"name": "array",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 298,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L298"
						}
					],
					"signatures": [
						{
							"id": 42345,
							"name": "array",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines an array of strings property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  names: model.array(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 298,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L298"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/array.ts",
									"qualifiedName": "ArrayProperty"
								},
								"name": "ArrayProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42346,
					"name": "dateTime",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 317,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L317"
						}
					],
					"signatures": [
						{
							"id": 42347,
							"name": "dateTime",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a timestamp property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  date_of_birth: model.dateTime(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 317,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L317"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/date-time.ts",
									"qualifiedName": "DateTimeProperty"
								},
								"name": "DateTimeProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42348,
					"name": "json",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 336,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L336"
						}
					],
					"signatures": [
						{
							"id": 42349,
							"name": "json",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a property whose value is a stringified JSON object."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  metadata: model.json(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 336,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L336"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/json.ts",
									"qualifiedName": "JSONProperty"
								},
								"name": "JSONProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42350,
					"name": "enum",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 359,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L359"
						}
					],
					"signatures": [
						{
							"id": 42351,
							"name": "enum",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a property whose value can only be one of the specified values."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  color: model.enum([\"black\", \"white\"]),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 359,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L359"
								}
							],
							"typeParameters": [
								{
									"id": 42352,
									"name": "Values",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of possible values. By default, it's "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
													"qualifiedName": "EnumLike"
												},
												"name": "EnumLike",
												"package": "@medusajs/utils"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 42353,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of possible values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 42352,
										"name": "Values",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
									"qualifiedName": "EnumProperty"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42352,
										"name": "Values",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "EnumProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						42327,
						42332,
						42334,
						42336,
						42338,
						42340,
						42344,
						42346,
						42348,
						42350
					]
				}
			]
		},
		{
			"id": 42468,
			"name": "Property",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 42342,
					"name": "autoincrement",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 279,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L279"
						}
					],
					"signatures": [
						{
							"id": 42343,
							"name": "autoincrement",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines an autoincrement property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  serial_id: model.autoincrement(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 279,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L279"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/autoincrement.ts",
									"qualifiedName": "AutoIncrementProperty"
								},
								"name": "AutoIncrementProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						42342
					]
				}
			]
		},
		{
			"id": 42469,
			"name": "Relationship Methods",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 42354,
					"name": "hasOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 389,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L389"
						},
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 396,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L396"
						},
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 402,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L402"
						}
					],
					"signatures": [
						{
							"id": 42355,
							"name": "hasOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a relationship between two data models,\nwhere the owner of the relationship has one record of the related\ndata model.\n\nFor example: A user \"hasOne\" email.\n\nUse the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "belongsTo",
										"target": 42373
									},
									{
										"kind": "text",
										"text": " method to define the inverse of this relationship in\nthe other data model."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst User = model.define(\"user\", {\n  id: model.id(),\n  email: model.hasOne(() => Email),\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 389,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L389"
								}
							],
							"typeParameters": [
								{
									"id": 42356,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the entity builder passed as a first parameter. By default, it's\na function returning the related model."
											}
										]
									}
								},
								{
									"id": 42357,
									"name": "ForeignKeyName",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"parameters": [
								{
									"id": 42358,
									"name": "entityBuilder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns the data model this model is related to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 42356,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 42359,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The relationship's options."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 42360,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 42361,
															"name": "mappedBy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
																	},
																	{
																		"kind": "code",
																		"text": "`belongsTo`"
																	},
																	{
																		"kind": "text",
																		"text": " and "
																	},
																	{
																		"kind": "code",
																		"text": "`manyToMany`"
																	},
																	{
																		"kind": "text",
																		"text": "\nrelationship method."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "types/dist/dml/index.d.ts",
																	"line": 73,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																42361
															]
														}
													],
													"sources": [
														{
															"fileName": "types/dist/dml/index.d.ts",
															"line": 67,
															"character": 34
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 42362,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 42363,
															"name": "foreignKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "utils/src/dml/entity-builder.ts",
																	"line": 392,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L392"
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														},
														{
															"id": 42364,
															"name": "foreignKeyName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "utils/src/dml/entity-builder.ts",
																	"line": 393,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L393"
																}
															],
															"type": {
																"type": "reference",
																"target": 42357,
																"name": "ForeignKeyName",
																"package": "@medusajs/utils",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																42363,
																42364
															]
														}
													],
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 391,
															"character": 35,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L391"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one-fk.ts",
									"qualifiedName": "HasOneWithForeignKey"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42356,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 42357,
										"name": "ForeignKeyName",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "HasOneWithForeignKey",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 42365,
							"name": "hasOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a relationship between two data models,\nwhere the owner of the relationship has one record of the related\ndata model.\n\nFor example: A user \"hasOne\" email.\n\nUse the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "belongsTo",
										"target": 42373
									},
									{
										"kind": "text",
										"text": " method to define the inverse of this relationship in\nthe other data model."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst User = model.define(\"user\", {\n  id: model.id(),\n  email: model.hasOne(() => Email),\n})\n```"
											}
										]
									},
									{
										"tag": "@customNamespace",
										"content": [
											{
												"kind": "text",
												"text": "Relationship Methods"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 396,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L396"
								}
							],
							"typeParameters": [
								{
									"id": 42366,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the entity builder passed as a first parameter. By default, it's\na function returning the related model."
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 42367,
									"name": "entityBuilder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns the data model this model is related to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 42366,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 42368,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The relationship's options."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 42369,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 42370,
															"name": "mappedBy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
																	},
																	{
																		"kind": "code",
																		"text": "`belongsTo`"
																	},
																	{
																		"kind": "text",
																		"text": " and "
																	},
																	{
																		"kind": "code",
																		"text": "`manyToMany`"
																	},
																	{
																		"kind": "text",
																		"text": "\nrelationship method."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "types/dist/dml/index.d.ts",
																	"line": 73,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																42370
															]
														}
													],
													"sources": [
														{
															"fileName": "types/dist/dml/index.d.ts",
															"line": 67,
															"character": 34
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 42371,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 42372,
															"name": "foreignKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "utils/src/dml/entity-builder.ts",
																	"line": 399,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L399"
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																42372
															]
														}
													],
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 398,
															"character": 36,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L398"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
									"qualifiedName": "HasOne"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42366,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "HasOne",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42373,
					"name": "belongsTo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 441,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L441"
						}
					],
					"signatures": [
						{
							"id": 42374,
							"name": "belongsTo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines the inverse of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "hasOne",
										"target": 42354
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "hasMany",
										"target": 42383
									},
									{
										"kind": "text",
										"text": " relationship.\n\nFor example, a product \"belongsTo\" a store."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst Product = model.define(\"product\", {\n  id: model.id(),\n  store: model.belongsTo(() => Store, {\n    mappedBy: \"products\",\n  }),\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 441,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L441"
								}
							],
							"typeParameters": [
								{
									"id": 42375,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the entity builder passed as a first parameter. By default, it's\na function returning the related model."
											}
										]
									}
								},
								{
									"id": 42376,
									"name": "ForeignKeyName",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"parameters": [
								{
									"id": 42377,
									"name": "entityBuilder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns the data model this model is related to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 42375,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 42378,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The relationship's options."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 42379,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 42380,
															"name": "mappedBy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
																	},
																	{
																		"kind": "code",
																		"text": "`belongsTo`"
																	},
																	{
																		"kind": "text",
																		"text": " and "
																	},
																	{
																		"kind": "code",
																		"text": "`manyToMany`"
																	},
																	{
																		"kind": "text",
																		"text": "\nrelationship method."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "types/dist/dml/index.d.ts",
																	"line": 73,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																42380
															]
														}
													],
													"sources": [
														{
															"fileName": "types/dist/dml/index.d.ts",
															"line": 67,
															"character": 34
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 42381,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 42382,
															"name": "foreignKeyName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "utils/src/dml/entity-builder.ts",
																	"line": 444,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L444"
																}
															],
															"type": {
																"type": "reference",
																"target": 42376,
																"name": "ForeignKeyName",
																"package": "@medusajs/utils",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																42382
															]
														}
													],
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 443,
															"character": 36,
															"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L443"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
									"qualifiedName": "BelongsTo"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42375,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 42376,
										"name": "ForeignKeyName",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "BelongsTo",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42383,
					"name": "hasMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 473,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L473"
						}
					],
					"signatures": [
						{
							"id": 42384,
							"name": "hasMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a relationship between two data models,\nwhere the owner of the relationship has many records of the related\ndata model, but the related data model only has one owner.\n\nFor example, a store \"hasMany\" products."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst Store = model.define(\"store\", {\n  id: model.id(),\n  products: model.hasMany(() => Product),\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 473,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L473"
								}
							],
							"typeParameters": [
								{
									"id": 42385,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the entity builder passed as a first parameter. By default, it's\na function returning the related model."
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 42386,
									"name": "entityBuilder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns the data model this model is related to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 42385,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 42387,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The relationship's options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "RelationshipOptions"
										},
										"name": "RelationshipOptions",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-many.ts",
									"qualifiedName": "HasMany"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42385,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "HasMany",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42388,
					"name": "manyToMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 505,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L505"
						}
					],
					"signatures": [
						{
							"id": 42389,
							"name": "manyToMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a relationship between two data models,\nwhere both data models have many related records.\n\nFor example, an order is associated with many products, and a product\nis associated with many orders."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst Order = model.define(\"order\", {\n  id: model.id(),\n  products: model.manyToMany(() => Product),\n})\n\nconst Product = model.define(\"product\", {\n  id: model.id(),\n  order: model.manyToMany(() => Order),\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 505,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity-builder.ts#L505"
								}
							],
							"typeParameters": [
								{
									"id": 42390,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the entity builder passed as a first parameter. By default, it's\na function returning the related model."
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 42391,
									"name": "entityBuilder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns the data model this model is related to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 42390,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 42392,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The relationship's options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 42302,
										"name": "ManyToManyOptions",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/relations/many-to-many.ts",
									"qualifiedName": "ManyToMany"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42390,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "ManyToMany",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						42354,
						42373,
						42383,
						42388
					]
				}
			]
		},
		{
			"id": 42470,
			"name": "Model Methods",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 42422,
					"name": "cascades",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity.ts",
							"line": 146,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 42423,
							"name": "cascades",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method configures which related data models an operation, such as deletion,\nshould be cascaded to.\n\nFor example, if a store is deleted, its product should also be deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst Store = model.define(\"store\", {\n  id: model.id(),\n  products: model.hasMany(() => Product),\n})\n.cascades({\n  delete: [\"products\"],\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 146,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L146"
								}
							],
							"parameters": [
								{
									"id": 42424,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cascades configurations. They object's keys are the names of\nthe actions, such as "
											},
											{
												"kind": "code",
												"text": "`deleted`"
											},
											{
												"kind": "text",
												"text": ", and the value is an array of relations that the\naction should be cascaded to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "EntityCascades"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "ExtractEntityRelations"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 42403,
														"name": "Schema",
														"package": "@medusajs/utils",
														"qualifiedName": "DmlEntity.Schema",
														"refersToTypeParameter": true
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "hasOne"
															},
															{
																"type": "literal",
																"value": "hasOneWithFK"
															},
															{
																"type": "literal",
																"value": "hasMany"
															}
														]
													}
												],
												"name": "ExtractEntityRelations",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "ExtractEntityRelations"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 42403,
														"name": "Schema",
														"package": "@medusajs/utils",
														"qualifiedName": "DmlEntity.Schema",
														"refersToTypeParameter": true
													},
													{
														"type": "literal",
														"value": "manyToMany"
													}
												],
												"name": "ExtractEntityRelations",
												"package": "@medusajs/types"
											}
										],
										"name": "EntityCascades",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 42397,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42403,
										"name": "Schema",
										"package": "@medusajs/utils",
										"qualifiedName": "DmlEntity.Schema",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 42404,
										"name": "TConfig",
										"package": "@medusajs/utils",
										"qualifiedName": "DmlEntity.TConfig",
										"refersToTypeParameter": true
									}
								],
								"name": "DmlEntity",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42425,
					"name": "indexes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity.ts",
							"line": 243,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L243"
						}
					],
					"signatures": [
						{
							"id": 42426,
							"name": "indexes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines indices on the data model. An index can be on multiple columns\nand have conditions."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "An example of a simple index:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  id: model.id(),\n  name: model.text(),\n  age: model.number()\n}).indexes([\n  {\n    on: [\"name\", \"age\"],\n  },\n])\n\nexport default MyCustom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo add a condition on the index, use the "
											},
											{
												"kind": "code",
												"text": "`where`"
											},
											{
												"kind": "text",
												"text": " option:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  id: model.id(),\n  name: model.text(),\n  age: model.number()\n}).indexes([\n  {\n    on: [\"name\", \"age\"],\n    where: {\n      age: 30\n    }\n  },\n])\n\nexport default MyCustom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe condition can also be a negation. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  id: model.id(),\n  name: model.text(),\n  age: model.number()\n}).indexes([\n  {\n    on: [\"name\", \"age\"],\n    where: {\n      age: {\n        $ne: 30\n      }\n    }\n  },\n])\n\nexport default MyCustom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIn this example, the index is created when the value of "
											},
											{
												"kind": "code",
												"text": "`age`"
											},
											{
												"kind": "text",
												"text": " doesn't equal "
											},
											{
												"kind": "code",
												"text": "`30`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 243,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/entity.ts#L243"
								}
							],
							"parameters": [
								{
									"id": 42427,
									"name": "indexes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index's configuration."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "EntityIndex"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 42403,
													"name": "Schema",
													"package": "@medusajs/utils",
													"qualifiedName": "DmlEntity.Schema",
													"refersToTypeParameter": true
												},
												{
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "QueryCondition"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 42403,
																	"name": "Schema",
																	"package": "@medusajs/utils",
																	"qualifiedName": "DmlEntity.Schema",
																	"refersToTypeParameter": true
																}
															],
															"name": "QueryCondition",
															"package": "@medusajs/types"
														}
													]
												}
											],
											"name": "EntityIndex",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 42397,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42403,
										"name": "Schema",
										"package": "@medusajs/utils",
										"qualifiedName": "DmlEntity.Schema",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 42404,
										"name": "TConfig",
										"package": "@medusajs/utils",
										"qualifiedName": "DmlEntity.TConfig",
										"refersToTypeParameter": true
									}
								],
								"name": "DmlEntity",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						42422,
						42425
					]
				}
			]
		},
		{
			"id": 42471,
			"name": "Property Configuration Methods",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 42450,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 42451,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method indicates that a property's value can be "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  price: model.bigNumber().nullable(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L48"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
									"qualifiedName": "NullableModifier"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42438,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 42435,
										"typeArguments": [
											{
												"type": "reference",
												"target": 42438,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "BaseProperty.T",
												"refersToTypeParameter": true
											}
										],
										"name": "BaseProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42452,
					"name": "computed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 69,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L69"
						}
					],
					"signatures": [
						{
							"id": 42453,
							"name": "computed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method indicated that the property is a computed property.\nComputed properties are not stored in the database but are\ncomputed on the fly."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n calculated_price: model.bigNumber().computed(),\n // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 69,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L69"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/computed.ts",
									"qualifiedName": "ComputedProperty"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 42438,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "BaseProperty.T",
												"refersToTypeParameter": true
											}
										]
									},
									{
										"type": "reference",
										"target": 42435,
										"typeArguments": [
											{
												"type": "reference",
												"target": 42438,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "BaseProperty.T",
												"refersToTypeParameter": true
											}
										],
										"name": "BaseProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "ComputedProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42454,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 93,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L93"
						}
					],
					"signatures": [
						{
							"id": 42455,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines an index on a property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  id: model.id(),\n  name: model.text().index(\n    \"IDX_MY_CUSTOM_NAME\"\n  ),\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 93,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L93"
								}
							],
							"parameters": [
								{
									"id": 42456,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index's name. If not provided,\nMedusa generates the name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 42435,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42438,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42457,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 117,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L117"
						}
					],
					"signatures": [
						{
							"id": 42458,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method indicates that a property's value must be unique in the database.\nA unique index is created on the property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst User = model.define(\"user\", {\n  email: model.text().unique(),\n  // ...\n})\n\nexport default User\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L117"
								}
							],
							"parameters": [
								{
									"id": 42459,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The unique index's name. If not provided,\nMedusa generates the name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 42435,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42438,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 42460,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 144,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L144"
						}
					],
					"signatures": [
						{
							"id": 42461,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines the default value of a property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  color: model\n    .enum([\"black\", \"white\"])\n    .default(\"black\"),\n  age: model\n    .number()\n    .default(0),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 144,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/33f788be42975c3bd05db3074b1aa636f84d6fd4/packages/core/utils/src/dml/properties/base.ts#L144"
								}
							],
							"parameters": [
								{
									"id": 42462,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The default value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 42438,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 42435,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42438,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						42450,
						42452,
						42454,
						42457,
						42460
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				42297,
				42394,
				42434
			]
		},
		{
			"title": "Namespaces",
			"children": [
				42467,
				42468,
				42469,
				42470,
				42471
			]
		}
	],
	"packageName": "@medusajs/utils",
	"symbolIdMap": {
		"42297": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": ""
		},
		"42298": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "DefineOptions"
		},
		"42299": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"42300": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.name"
		},
		"42301": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.tableName"
		},
		"42302": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "ManyToManyOptions"
		},
		"42303": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"42304": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.pivotTable"
		},
		"42306": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.joinColumn"
		},
		"42307": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.inverseJoinColumn"
		},
		"42308": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"42310": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.pivotEntity"
		},
		"42311": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"42312": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"42313": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.joinColumn"
		},
		"42314": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.inverseJoinColumn"
		},
		"42315": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder"
		},
		"42321": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.define"
		},
		"42322": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.define"
		},
		"42323": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "Schema"
		},
		"42324": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "TConfig"
		},
		"42325": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "nameOrConfig"
		},
		"42326": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "schema"
		},
		"42327": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.id"
		},
		"42328": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.id"
		},
		"42329": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"42330": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"42331": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.prefix"
		},
		"42332": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.text"
		},
		"42333": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.text"
		},
		"42334": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.boolean"
		},
		"42335": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.boolean"
		},
		"42336": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.number"
		},
		"42337": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.number"
		},
		"42338": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.bigNumber"
		},
		"42339": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.bigNumber"
		},
		"42340": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.float"
		},
		"42341": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.float"
		},
		"42342": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.autoincrement"
		},
		"42343": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.autoincrement"
		},
		"42344": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.array"
		},
		"42345": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.array"
		},
		"42346": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.dateTime"
		},
		"42347": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.dateTime"
		},
		"42348": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.json"
		},
		"42349": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.json"
		},
		"42350": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.enum"
		},
		"42351": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.enum"
		},
		"42352": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "Values"
		},
		"42353": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "values"
		},
		"42354": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasOne"
		},
		"42355": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasOne"
		},
		"42356": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"42357": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "ForeignKeyName"
		},
		"42358": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"42359": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"42360": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"42361": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"42362": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"42363": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"42364": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.foreignKeyName"
		},
		"42365": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasOne"
		},
		"42366": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"42367": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"42368": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"42369": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"42370": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"42371": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"42372": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"42373": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.belongsTo"
		},
		"42374": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.belongsTo"
		},
		"42375": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"42376": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "ForeignKeyName"
		},
		"42377": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"42378": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"42379": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"42380": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"42381": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"42382": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.foreignKeyName"
		},
		"42383": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasMany"
		},
		"42384": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasMany"
		},
		"42385": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"42386": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"42387": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"42388": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.manyToMany"
		},
		"42389": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.manyToMany"
		},
		"42390": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"42391": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"42392": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"42393": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "model"
		},
		"42394": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": ""
		},
		"42395": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DMLEntitySchemaBuilder"
		},
		"42396": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "Schema"
		},
		"42397": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity"
		},
		"42398": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.isDmlEntity"
		},
		"42399": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.isDmlEntity"
		},
		"42400": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "entity"
		},
		"42401": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.__constructor"
		},
		"42402": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity"
		},
		"42403": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.Schema"
		},
		"42404": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.TConfig"
		},
		"42405": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "nameOrConfig"
		},
		"42406": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "schema"
		},
		"42407": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.name"
		},
		"42408": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.schema"
		},
		"42413": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.parse"
		},
		"42414": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.parse"
		},
		"42415": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type"
		},
		"42416": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.name"
		},
		"42417": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.tableName"
		},
		"42418": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.schema"
		},
		"42419": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.cascades"
		},
		"42420": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.indexes"
		},
		"42421": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.checks"
		},
		"42422": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.cascades"
		},
		"42423": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.cascades"
		},
		"42424": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "options"
		},
		"42425": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.indexes"
		},
		"42426": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.indexes"
		},
		"42427": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "indexes"
		},
		"42428": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.checks"
		},
		"42429": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.checks"
		},
		"42430": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "checks"
		},
		"42431": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.[IsDmlEntity]"
		},
		"42432": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.Schema"
		},
		"42433": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.TConfig"
		},
		"42434": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": ""
		},
		"42435": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty"
		},
		"42438": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.T"
		},
		"42445": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.dataType"
		},
		"42446": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"42447": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"42448": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"42449": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"42450": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"42451": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"42452": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.computed"
		},
		"42453": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.computed"
		},
		"42454": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"42455": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"42456": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"42457": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"42458": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"42459": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"42460": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"42461": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"42462": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"42463": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"42464": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"42465": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"42466": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"2": "../../../../packages/core/utils/src/dml/entity.ts",
			"3": "../../../../packages/core/utils/src/dml/properties/base.ts"
		},
		"reflections": {
			"1": 42297,
			"2": 42394,
			"3": 42434
		}
	}
}
